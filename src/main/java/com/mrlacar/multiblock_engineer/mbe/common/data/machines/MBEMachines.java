package com.mrlacar.multiblock_engineer.mbe.common.data.machines;

import com.gregtechceu.gtceu.GTCEu;
import com.gregtechceu.gtceu.api.GTValues;
import com.gregtechceu.gtceu.api.data.RotationState;
import com.gregtechceu.gtceu.api.data.tag.TagPrefix;
import com.gregtechceu.gtceu.api.machine.*;
import com.gregtechceu.gtceu.api.machine.multiblock.*;
import com.gregtechceu.gtceu.api.pattern.FactoryBlockPattern;
import com.gregtechceu.gtceu.api.pattern.TraceabilityPredicate;
import com.gregtechceu.gtceu.api.recipe.GTRecipeType;
import com.gregtechceu.gtceu.api.recipe.OverclockingLogic;
import com.gregtechceu.gtceu.api.registry.registrate.MachineBuilder;
import com.gregtechceu.gtceu.api.registry.registrate.MultiblockMachineBuilder;
import com.gregtechceu.gtceu.client.renderer.machine.MaintenanceHatchPartRenderer;
import com.gregtechceu.gtceu.client.util.TooltipHelper;
import com.gregtechceu.gtceu.common.data.GTRecipeModifiers;
import com.gregtechceu.gtceu.common.data.GTRecipeTypes;
import com.gregtechceu.gtceu.common.machine.multiblock.electric.FusionReactorMachine;
import com.gregtechceu.gtceu.common.machine.multiblock.part.DataAccessHatchMachine;
import com.gregtechceu.gtceu.common.machine.multiblock.part.ParallelHatchPartMachine;
import com.gregtechceu.gtceu.config.ConfigHolder;
import com.gregtechceu.gtceu.utils.FormattingUtil;
import com.mrlacar.multiblock_engineer.mbe.MultiBlock_Engineer;
import com.mrlacar.multiblock_engineer.mbe.api.machine.MBEOverclockingLogic;
import com.mrlacar.multiblock_engineer.mbe.api.machine.multiblock.MBEPartAbility;
import com.mrlacar.multiblock_engineer.mbe.api.pattern.util.MBEPredicates;
import com.mrlacar.multiblock_engineer.mbe.client.renderer.machine.MDPRender;
import com.mrlacar.multiblock_engineer.mbe.client.renderer.machine.SPSRender;
import com.mrlacar.multiblock_engineer.mbe.common.block.MBECompressedFusionReactorCasingBlocks;
import com.mrlacar.multiblock_engineer.mbe.common.data.MBECreativeModeTabs;
import com.mrlacar.multiblock_engineer.mbe.common.data.MBERecipeModifiers;
import com.mrlacar.multiblock_engineer.mbe.common.data.MBERecipeTypes;
import com.mrlacar.multiblock_engineer.mbe.common.machine.multiblock.electric.*;
import com.mrlacar.multiblock_engineer.mbe.common.machine.multiblock.electric.computation.ImaginaryEngineComputer;
import com.mrlacar.multiblock_engineer.mbe.common.machine.multiblock.electric.computation.StarTower;
import com.mrlacar.multiblock_engineer.mbe.common.machine.multiblock.generator.DysonSphereDeploymentBaseStation;
import com.mrlacar.multiblock_engineer.mbe.common.machine.multiblock.generator.MicroStarCollapseSimulator;
import com.mrlacar.multiblock_engineer.mbe.common.machine.multiblock.generator.PhotonStationDeployUnit;
import com.mrlacar.multiblock_engineer.mbe.common.machine.multiblock.part.CosmicRadiationSimulationHatchPartMachine;
import com.mrlacar.multiblock_engineer.mbe.common.machine.multiblock.part.IncubatorIngredientHatchPartMachine;
import com.mrlacar.multiblock_engineer.mbe.common.machine.multiblock.part.RadioactiveSourceHatchPartMachine;
import com.mrlacar.multiblock_engineer.mbe.common.machine.multiblock.part.SculkCleaningMaintenanceHatchPartMachine;
import com.mrlacar.multiblock_engineer.mbe.integration.ae2.machine.AdvancedMEPatternBufferPartMachine;
import com.mrlacar.multiblock_engineer.mbe.integration.ae2.machine.AdvancedMEPatternBufferProxyPartMachine;
import it.unimi.dsi.fastutil.ints.Int2IntFunction;
import net.minecraft.ChatFormatting;
import net.minecraft.network.chat.Component;
import net.minecraft.network.chat.Style;
import net.minecraft.world.level.block.Block;

import java.util.Locale;
import java.util.function.BiFunction;

import static com.gregtechceu.gtceu.api.GTValues.*;
import static com.gregtechceu.gtceu.api.pattern.Predicates.*;
import static com.gregtechceu.gtceu.api.pattern.util.RelativeDirection.*;
import static com.gregtechceu.gtceu.common.data.GCYMBlocks.*;
import static com.gregtechceu.gtceu.common.data.GCYMRecipeTypes.ALLOY_BLAST_RECIPES;
import static com.gregtechceu.gtceu.common.data.GTBlocks.*;
import static com.gregtechceu.gtceu.common.data.GTMachines.ITEM_IMPORT_BUS;
import static com.gregtechceu.gtceu.common.data.GTMaterialBlocks.MATERIAL_BLOCKS;
import static com.gregtechceu.gtceu.common.data.GTMaterials.*;
import static com.gregtechceu.gtceu.common.data.machines.GTAEMachines.ME_PATTERN_BUFFER;
import static com.gregtechceu.gtceu.common.data.machines.GTAEMachines.ME_PATTERN_BUFFER_PROXY;
import static com.gregtechceu.gtceu.common.data.machines.GTMachineUtils.workableTiered;
import static com.gregtechceu.gtceu.utils.FormattingUtil.toEnglishName;
import static com.mrlacar.multiblock_engineer.mbe.api.MBERegistries.REGISTRATE;
import static com.mrlacar.multiblock_engineer.mbe.common.data.MBEBlocks.*;
import static com.mrlacar.multiblock_engineer.mbe.common.data.materials.AlloyMaterials.*;
import static com.mrlacar.multiblock_engineer.mbe.common.data.materials.ElementMaterials.PrimarySubstance;
import static com.mrlacar.multiblock_engineer.mbe.common.data.materials.GemMaterials.Dilithium;
import static net.minecraft.world.level.block.Blocks.PACKED_MUD;

public class MBEMachines {

    static {
        REGISTRATE.creativeModeTab(() -> MBECreativeModeTabs.MACHINE);
    }

    public static final Int2IntFunction NonTankSizeFunction = tier -> 0;
    public static final Int2IntFunction SubstanceCompressorTankSizeFunction = tier -> 6000 * 144;

    //////////////////////////////////////
    //           *** Part ***           //
    //////////////////////////////////////

    public static final MachineDefinition EXTENDED_DATA_ACCESS_HATCH = REGISTRATE
            .machine("extended_data_access_hatch", (holder) -> new DataAccessHatchMachine(holder, UV, false))
            .langValue("Extended Data Access Hatch")
            .tier(UV)
            .rotationState(RotationState.ALL)
            .abilities(PartAbility.DATA_ACCESS)
            .tooltips(Component.translatable("gtceu.machine.data_access_hatch.tooltip.0"),
                    Component.translatable("gtceu.machine.data_access_hatch.tooltip.1", 25),
                    Component.translatable("gtceu.universal.disabled"))
            .overlayTieredHullRenderer("data_access_hatch")
            .register();

    public static final MachineDefinition RADIOACTIVE_SOURCE_HATCH = REGISTRATE
            .machine("radioactive_source_hatch", RadioactiveSourceHatchPartMachine::new)
            .tier(LuV)
            .rotationState(RotationState.ALL)
            .abilities(MBEPartAbility.RADIOACTIVE_SOURCE_HATCH)
            .overlayTieredHullRenderer("radioactive_source_hatch")
            .langValue("Radioactive Source Hatch")
            .tooltips(Component.translatable("mbe.part.radioactive_source_hatch.tooltip.0"))
            .register();

    public static final MachineDefinition INCUBATOR_INGREDIENT_HATCH = REGISTRATE
            .machine("incubator_ingredient_hatch", IncubatorIngredientHatchPartMachine::new)
            .tier(LuV)
            .rotationState(RotationState.ALL)
            .abilities(MBEPartAbility.INCUBATOR_INGREDIENT_HATCH)
            .overlayTieredHullRenderer("incubator_ingredient_hatch")
            .langValue("Incubator Ingredient Hatch")
            .tooltips(Component.translatable("mbe.part.incubator_ingredient_hatch.tooltip.0"))
            .register();

    public static final MachineDefinition SCULK_CLEANING_MAINTENANCE_HATCH = REGISTRATE
            .machine("sculk_cleaning_maintenance_hatch", SculkCleaningMaintenanceHatchPartMachine::new)
            .rotationState(RotationState.ALL)
            .abilities(PartAbility.MAINTENANCE)
            .tooltips(Component.translatable("gtceu.universal.disabled"),
                    Component.translatable("gtceu.machine.maintenance_hatch_cleanroom_auto.tooltip.0"),
                    Component.translatable("gtceu.machine.maintenance_hatch_cleanroom_auto.tooltip.1"))
            .tooltipBuilder((stack, tooltips) -> {
                for (CleanroomType type : SculkCleaningMaintenanceHatchPartMachine
                        .getCleanroomTypes(SculkCleaningMaintenanceHatchPartMachine.SCULK_DUMMY_CLEANROOM)) {
                    tooltips.add(Component.literal(String.format("  %s%s", ChatFormatting.GREEN,
                            Component.translatable(type.getTranslationKey()).getString())));
                }
            })
            .renderer(() -> new MaintenanceHatchPartRenderer(7, MultiBlock_Engineer.id("block/machine/part/maintenance.sculk_cleaning")))
            .register();

    public static final MachineDefinition COSMIC_RADIATION_SIMULATION_HATCH = REGISTRATE
            .machine("cosmic_radiation_simulation_hatch", CosmicRadiationSimulationHatchPartMachine::new)
            .tier(UEV)
            .rotationState(RotationState.ALL)
            .abilities(MBEPartAbility.COSMIC_RADIATION_SIMULATION_HATCH)
            .overlayTieredHullRenderer("cosmic_radiation_simulation_hatch")
            .langValue("Cosmic Radiation Simulation Hatch")
            .tooltips(Component.translatable("mbe.part.cosmic_radiation_simulation_hatch.tooltip.0"))
            .tooltips(Component.translatable("gtceu.universal.tooltip.max_voltage_in", GTValues.V[UEV], GTValues.VNF[UEV]),
                    Component.translatable("gtceu.universal.tooltip.energy_storage_capacity", 4 * GTValues.V[UEV]))
            .register();

    public static final MachineDefinition ADVANCED_ME_PATTERN_BUFFER = REGISTRATE
            .machine("advanced_me_pattern_buffer", AdvancedMEPatternBufferPartMachine::new)
            .tier(UHV)
            .rotationState(RotationState.ALL)
            .abilities(PartAbility.IMPORT_ITEMS, PartAbility.IMPORT_FLUIDS, PartAbility.EXPORT_FLUIDS, PartAbility.EXPORT_ITEMS)
            .rotationState(RotationState.ALL)
            .overlayTieredHullRenderer("advanced_me_pattern_buffer")
            .langValue("Advanced ME Pattern Buffer")
            .tooltips(
                    Component.translatable("block.mbe.advanced_pattern_buffer.desc.0"),
                    Component.translatable("block.gtceu.pattern_buffer.desc.0"),
                    Component.translatable("block.gtceu.pattern_buffer.desc.1"),
                    Component.translatable("block.mbe.advanced_pattern_buffer.desc.1"),
                    Component.translatable("gtceu.universal.enabled"))
            .register();

    public static final MachineDefinition ADVANCED_ME_PATTERN_BUFFER_PROXY = REGISTRATE
            .machine("advanced_me_pattern_buffer_proxy", AdvancedMEPatternBufferProxyPartMachine::new)
            .tier(UHV)
            .rotationState(RotationState.ALL)
            .abilities(PartAbility.IMPORT_ITEMS, PartAbility.IMPORT_FLUIDS, PartAbility.EXPORT_FLUIDS, PartAbility.EXPORT_ITEMS)
            .rotationState(RotationState.ALL)
            .overlayTieredHullRenderer("advanced_me_pattern_buffer_proxy")
            .langValue("Advanced ME Pattern Buffer Proxy")
            .tooltips(
                    Component.translatable("block.mbe.advanced_pattern_buffer_proxy.desc"),
                    Component.translatable("block.gtceu.pattern_buffer_proxy.desc.1"),
                    Component.translatable("block.gtceu.pattern_buffer_proxy.desc.2"),
                    Component.translatable("gtceu.universal.enabled"))
            .register();

    public static final MachineDefinition[] PARALLEL_HATCH = MBETieredMachines("parallel_hatch", ParallelHatchPartMachine::new, (tier, builder) -> builder
                    .langValue(switch (tier) {
                        case 9 -> "Perfect";
                        case 10 -> "Supreme";
                        case 11 -> "Legendary";
                        case 12 -> "Immortal";
                        case 13 -> "Creative";
                        default -> "Simple";
                    } + " Parallel Control Hatch")
                    .rotationState(RotationState.ALL)
                    .abilities(PartAbility.PARALLEL_HATCH)
                    .workableTieredHullRenderer(MultiBlock_Engineer.id("block/machines/parallel_hatch_mk" + (tier - 4)))
                    .tooltips(Component.translatable("mbe.parallel_hatch_mk" + tier))
                    .register(),
            UHV, UEV, UIV, UXV, OpV);

    /////////////////////////////////////
    //   *** ElectricMachine ***   //
    /////////////////////////////////////

    public static final MachineDefinition[] SUBSTANCE_COMPRESSOR = MBEUniqueTieredMachines("substance_compressor",
            (holder, tier) -> new SimpleTieredMachine(holder, tier, SubstanceCompressorTankSizeFunction), (tier, builder) -> builder
                    .langValue("Substance Compressor")
                    .tooltips(Component.translatable("mbe.electric.substance_compressor.tooltip.0"))
                    .editableUI(SimpleTieredMachine.EDITABLE_UI_CREATOR.apply(GTCEu.id("substance_compressor"), MBERecipeTypes.SUBSTANCE_COMPRESSOR))
                    .rotationState(RotationState.NON_Y_AXIS)
                    .recipeType(MBERecipeTypes.SUBSTANCE_COMPRESSOR)
                    .recipeModifiers(GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK))
                    .workableTieredHullRenderer(MultiBlock_Engineer.id("block/machines/substance_compressor"))
                    .register(), UXV);

    public static final MachineDefinition[] MATRIX_WORKBENCH = MBEUniqueTieredMachines("matrix_workbench",
            (holder, tier) -> new SimpleTieredMachine(holder, tier, NonTankSizeFunction), (tier, builder) -> builder
                    .langValue("Matrix Workbench")
                    .tooltips(Component.translatable("mbe.electric.matrix_workbench.tooltip.0"))
                    .tooltips(Component.translatable("mbe.electric.matrix_workbench.tooltip.1"))
                    .tooltips(Component.translatable("mbe.electric.matrix_workbench.tooltip.2"))
                    .tooltips(Component.translatable("mbe.electric.matrix_workbench.parallel.0"))
                    .editableUI(SimpleTieredMachine.EDITABLE_UI_CREATOR.apply(GTCEu.id("matrix_workbench"), MBERecipeTypes.MATRIX_WORKBENCH))
                    .rotationState(RotationState.NON_Y_AXIS)
                    .recipeType(MBERecipeTypes.MATRIX_WORKBENCH)
                    .recipeModifiers((machine, recipe) -> MBERecipeModifiers.accurateParallels(machine, recipe, 64), GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(MBEOverclockingLogic.NONE_OVERCLOCK))
                    .workableCasingRenderer(MultiBlock_Engineer.id("block/machines/matrix_workbench/side"), MultiBlock_Engineer.id("block/machines/matrix_workbench"))
                    .register(), UEV);

    //////////////////////////////////////
    //        *** Multiblock ***        //
    //////////////////////////////////////

    public final static MultiblockMachineDefinition GREENHOUSE = REGISTRATE.multiblock("greenhouse", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.GREENHOUSE)
            .recipeModifiers((machine, recipe) -> MBERecipeModifiers.accurateParallels(machine, recipe, 64), GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .appearanceBlock(BRONZE_REINFORCED_WOODEN_CASING)
            .tooltips(Component.translatable("mbe.multiblock.greenhouse.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.greenhouse.parallel.0"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.greenhouse")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAA", "AAAAA", "BCCCB", "BCCCB", "BCCCB", "AAAAA", "AAAAA")
                    .aisle("ADDDA", "AEEEA", "C   C", "C   C", "C   C", "ADDDA", "AAAAA")
                    .aisle("ADDDA", "AEEEA", "C   C", "C   C", "C   C", "ADDDA", "AAAAA")
                    .aisle("ADDDA", "AEEEA", "C   C", "C   C", "C   C", "ADDDA", "AAAAA")
                    .aisle("AAAAA", "AAcAA", "BCCCB", "BCCCB", "BCCCB", "AAAAA", "AAAAA")
                    .where(' ', air())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(BRONZE_REINFORCED_WOODEN_CASING.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where('B', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, BlackSteel).get()))
                    .where('C', blocks(CASING_TEMPERED_GLASS.get()))
                    .where('D', blocks(CASING_STEEL_SOLID.get()))
                    .where('E', blocks(PACKED_MUD))
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/bronze_reinforced_wooden_casing"), MultiBlock_Engineer.id("block/multiblock/greenhouse"))
            .register();

    public final static MultiblockMachineDefinition GENERAL_CIRCUIT_CONVERTER = REGISTRATE.multiblock("general_circuit_converter", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.GENERAL_CIRCUIT_CONVERTER)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .appearanceBlock(CASING_STEEL_SOLID)
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.general_circuit_converter")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAA", "AAA", "AAA")
                    .aisle("AAA", "ABA", "AAA")
                    .aisle("AAA", "AcA", "AAA")
                    .where('#', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(CASING_STEEL_SOLID.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1)))
                    .where('B', blocks(CASING_ASSEMBLY_LINE.get()))
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_solid_steel"), GTCEu.id("block/multiblock/assembly_line"))
            .register();

    public final static MultiblockMachineDefinition LARGE_PYROLYSE_OVEN = REGISTRATE.multiblock("large_pyrolyse_oven", CoilWorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(GTRecipeTypes.PYROLYSE_RECIPES)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers::pyrolyseOvenOverclock)
            .appearanceBlock(CASING_HIGH_TEMPERATURE_SMELTING)
            .tooltips(Component.translatable("gtceu.machine.pyrolyse_oven.tooltip"),
                    Component.translatable("gtceu.machine.pyrolyse_oven.tooltip.1"))
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.pyrolyse_oven")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAAAAAAAAAA", "BCCCBCCCBCCCB", "BCCCBCCCBCCCB", "BCCCBCCCBCCCB", "BCCCBCCCBCCCB", "BCCCBCCCBCCCB", "             ")
                    .aisle("AAAAAAAAAAAAA", "BDDDDDDDDDDDB", "BDDDDDDDDDDDB", "BDDDDDDDDDDDB", "BDDDDDDDDDDDB", "BDDDDDDDDDDDB", "BCCCBCCCBCCCB")
                    .aisle("AAAAAAAAAAAAA", "BD         DB", "BD         DB", "BD         DB", "BD         DB", "BDDDDDDDDDDDB", "BCCCBCCCBCCCB")
                    .aisle("AAAAAAAAAAAAA", "BD         DB", "BD         DB", "BD         DB", "BD         DB", "BDDDDDDDDDDDB", "BCCCBCECBCCCB")
                    .aisle("AAAAAAAAAAAAA", "BD         DB", "BD         DB", "BD         DB", "BD         DB", "BDDDDDDDDDDDB", "BCCCBCCCBCCCB")
                    .aisle("AAAAAAAAAAAAA", "BDDDDDDDDDDDB", "BDDDDDDDDDDDB", "BDDDDDDDDDDDB", "BDDDDDDDDDDDB", "BDDDDDDDDDDDB", "BCCCBCCCBCCCB")
                    .aisle("AAAAAAcAAAAAA", "BCCCBCCCBCCCB", "BCCCBCCCBCCCB", "BCCCBCCCBCCCB", "BCCCBCCCBCCCB", "BCCCBCCCBCCCB", "             ")
                    .where(' ', air())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(CASING_HIGH_TEMPERATURE_SMELTING.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1)))
                    .where('B', blocks(CASING_INVAR_HEATPROOF.get()))
                    .where('C', blocks(CASING_TEMPERED_GLASS.get()))
                    .where('D', heatingCoils())
                    .where('E', abilities(PartAbility.MUFFLER))
                    .build())
            .additionalDisplay((controller, components) -> {
                if (controller instanceof CoilWorkableElectricMultiblockMachine coilMachine && controller.isFormed()) {
                    components.add(Component.translatable("gtceu.multiblock.pyrolyse_oven.speed",
                            coilMachine.getCoilTier() == 0 ? 75 : 50 * (coilMachine.getCoilTier() + 1)));
                }
            })
            .workableCasingRenderer(GTCEu.id("block/casings/gcym/high_temperature_smelting_casing"), GTCEu.id("block/multiblock/pyrolyse_oven"))
            .register();

    public final static MultiblockMachineDefinition ELECTRIC_IMPLOSION_COMPRESSOR = REGISTRATE.multiblock("electric_implosion_compressor", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.ELECTRIC_IMPLOSION_COMPRESSOR)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .appearanceBlock(CASING_TUNGSTENSTEEL_ROBUST)
            .tooltips(Component.translatable("mbe.multiblock.electric_implosion_compressor.tooltip.0"))
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.electric_implosion_compressor")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAA", "C D C", "C D C", "C D C", "C D C", "C D C", "AAAAA")
                    .aisle("AAAAA", " BBB ", " BBB ", " BBB ", " BBB ", " BBB ", "AAAAA")
                    .aisle("AAAAA", "DB BD", "DB BD", "DB BD", "DB BD", "DB BD", "AAAAA")
                    .aisle("AAAAA", " BBB ", " BBB ", " BBB ", " BBB ", " BBB ", "AAAAA")
                    .aisle("AAcAA", "C D C", "C D C", "C D C", "C D C", "C D C", "AAAAA")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(CASING_TUNGSTENSTEEL_ROBUST.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1)))
                    .where('B', blocks(CASING_TEMPERED_GLASS.get()))
                    .where('C', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, TungstenCarbide).get()))
                    .where('D', blocks(FIREBOX_TUNGSTENSTEEL.get()))
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_robust_tungstensteel"), GTCEu.id("block/multiblock/implosion_compressor"))
            .register();

    public final static MultiblockMachineDefinition LARGE_CHEMICAL_PLANT = REGISTRATE.multiblock("large_chemical_plant", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(GTRecipeTypes.LARGE_CHEMICAL_RECIPES)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .appearanceBlock(CASING_PTFE_INERT)
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.large_chemical_reactor")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAA", "AAAAA", "C###C", "C###C", "C###C", "AAAAA")
                    .aisle("AAAAA", "ABBBA", "#BBB#", "#AAA#", "#BBB#", "AAAAA")
                    .aisle("AAAAA", "ABABA", "#BDB#", "#ADA#", "#BDB#", "AAAAA")
                    .aisle("AAAAA", "ABBBA", "#BBB#", "#AAA#", "#BBB#", "AAAAA")
                    .aisle("AAAAA", "AAcAA", "C###C", "C###C", "C###C", "AAAAA")
                    .where('#', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(CASING_PTFE_INERT.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1)))
                    .where('B', blocks(CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('C', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, NaquadahAlloy).get()))
                    .where('D', blocks(COIL_NAQUADAH.get()))
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_inert_ptfe"), GTCEu.id("block/multiblock/large_chemical_reactor"))
            .register();

    public final static MultiblockMachineDefinition LARGE_ALLOY_BLAST_SMELTER = REGISTRATE.multiblock("large_alloy_blast_smelter", CoilWorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(ALLOY_BLAST_RECIPES)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers::ebfOverclock)
            .appearanceBlock(CASING_HIGH_TEMPERATURE_SMELTING)
            .tooltips(Component.translatable("gtceu.machine.electric_blast_furnace.tooltip.0"),
                    Component.translatable("gtceu.machine.electric_blast_furnace.tooltip.1"),
                    Component.translatable("gtceu.machine.electric_blast_furnace.tooltip.2"))
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltipBuilder((stack, components) -> components.add(Component.translatable("mbe.multiblock.laser_available.0").append(Component.translatable("mbe.multiblock.laser_available.1").withStyle(style -> style.withColor(TooltipHelper.RAINBOW_SLOW.getCurrent())))))            
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.alloy_blast_smelter")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle("AAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAA", "BC               CB", "BC               CB", "BC               CB", "BC               CB", "BC               CB", "AAAA           AAAA", "##EA           AE##", "##AC           CA##", "##FC           CF##", "##BC           CB##", "##BC           CB##", "##BC           CB##", "##BC           CB##", "##BC           CB##", "##BC           CB##", "##BC           CB##", "##BC           CB##", "##BC           CB##", "##BC           CB##", "##BC           CB##", "##BC           CB##", "##GC           CG##", "##AAAAAAAAAAAAAAA##", "####AAAAAAAAAAA####", "#####AAAAAAAAA#####")
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle("###AAAAAAAAAAAAA###", "###AAAAAAAAAAAAA###", "###BBCC     CCBB###", "###BBCC     CCBB###", "###BBCC     CCBB###", "###BBCC     CCBB###", "###BBCC     CCBB###", "###AAAAAAAAAAAAA###", "#######EEEEE#######", "#######AAAAA#######", "#######FFFFF#######", "#######BBBBB#######", "#######BBBBB#######", "#######BBBBB#######", "#######BBBBB#######", "#######BBBBB#######", "#######BBBBB#######", "#######BBBBB#######", "#######BBBBB#######", "#######BBBBB#######", "#######BBBBB#######", "#######BBBBB#######", "#######BBBBB#######", "#######GGGGG#######", "#######AAAAA#######", "###################", "###################")
                    .aisle
                    .aisle("#######AAAAA#######", "#######AAc
                    .where('#', any())
                    .where(' ', air())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(CASING_HIGH_TEMPERATURE_SMELTING.get())
                            .or(abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(10))
                            .or(abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(10))
                            .or(abilities(PartAbility.EXPORT_FLUIDS).setMaxGlobalLimited(5))
                            .or(abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where('B', blocks(CASING_TEMPERED_GLASS.get()))
                    .where('C', heatingCoils())
                    .where('D', blocks(CASING_TUNGSTENSTEEL_PIPE.get()))
                    .where('E', blocks(FIREBOX_TUNGSTENSTEEL.get()))
                    .where('F', blocks(CASING_EXTREME_ENGINE_INTAKE.get()))
                    .where('G', blocks(HEAT_VENT.get()))
                    .where('H', abilities(PartAbility.MUFFLER))
                    .build())
            .additionalDisplay((controller, components) -> {
                if (controller instanceof CoilWorkableElectricMultiblockMachine coilMachine && controller.isFormed()) {
                    components.add(Component.translatable("gtceu.multiblock.blast_furnace.max_temperature", Component.translatable(FormattingUtil.formatNumbers(coilMachine.getCoilType().getCoilTemperature() + 100L * Math.max(0, coilMachine.getTier() - GTValues.MV)) + "K").setStyle(Style.EMPTY.withColor(ChatFormatting.RED))));
                }
            })
            .workableCasingRenderer(GTCEu.id("block/casings/gcym/high_temperature_smelting_casing"), GTCEu.id("block/multiblock/gcym/blast_alloy_smelter"))
            .register();

    public static final MultiblockMachineDefinition ADVANCED_ASSEMBLY_LINE = REGISTRATE.multiblock("advanced_assembly_line", AdvancedAssemblyLine::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(GTRecipeTypes.ASSEMBLY_LINE_RECIPES)
            .recipeModifier(AdvancedAssemblyLine::recipeModifier, true)
            .appearanceBlock(CASING_STEEL_SOLID)
            .tooltips(Component.translatable("mbe.multiblock.advanced_assembly_line.tooltip.0"))
            .tooltipBuilder((stack, components) -> components.add(Component.translatable("mbe.multiblock.laser_available.0").append(Component.translatable("mbe.multiblock.laser_available.1").withStyle(style -> style.withColor(TooltipHelper.RAINBOW_SLOW.getCurrent())))))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.assembly_line")))
            .pattern(definition -> FactoryBlockPattern.start(BACK, UP, RIGHT)
                    .aisle("ADA", "GHG", "cFE", "#C#")
                    .aisle("ADA", "GHG", "IFE", "#C#").setRepeatable(3, 15)
                    .aisle("ABA", "GHG", "IFE", "#C#")
                    .where('#', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(CASING_STEEL_SOLID.get())
                            .or(abilities(PartAbility.IMPORT_FLUIDS_1X).setExactLimit(4)))
                    .where('B', abilities(PartAbility.EXPORT_ITEMS)
                            .addTooltips(Component.translatable("gtceu.multiblock.pattern.location_end")))
                    .where('C', blocks(CASING_STEEL_SOLID.get())
                            .or(abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(2))
                            .or(abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1)))
                    .where('D', blocks(ITEM_IMPORT_BUS[0].getBlock()))
                    .where('E', blocks(CASING_GRATE.get()))
                    .where('F', blocks(CASING_ASSEMBLY_CONTROL.get()))
                    .where('G', blocks(CASING_LAMINATED_GLASS.get()))
                    .where('H', blocks(CASING_ASSEMBLY_LINE.get()))
                    .where('I', dataHatchPredicate(blocks(CASING_GRATE.get())))
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_solid_steel"), GTCEu.id("block/multiblock/assembly_line"))
            .register();
    public final static MultiblockMachineDefinition SUBSTANCE_STATE_CONVERTER = REGISTRATE.multiblock("substance_state_converter", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeTypes(GTRecipeTypes.EXTRACTOR_RECIPES, GTRecipeTypes.FLUID_SOLIDFICATION_RECIPES)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .appearanceBlock(CASING_WATERTIGHT)
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltipBuilder((stack, components) -> components.add(Component.translatable("mbe.multiblock.laser_available.0").append(Component.translatable("mbe.multiblock.laser_available.1").withStyle(style -> style.withColor(TooltipHelper.RAINBOW_SLOW.getCurrent())))))            
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_2.tooltip",
                    Component.translatable("gtceu.extractor"), Component.translatable("gtceu.fluid_solidifier")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("     AAAAA     ", "     AAAAA     ", "     AAAAA     ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "     AAAAA     ", "     AAAAA     ", "     AAAAA     ")
                    .aisle("   AAAAAAAAA   ", "   AAAAAAAAA   ", "   AABBBBBAA   ", "     BBBBB     ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "     BBBBB     ", "   AABBBBBAA   ", "   AAAAAAAAA   ", "   AAAAAAAAA   ")
                    .aisle("  AAAAAAAAAAA  ", "  AAAAAAAAAAA  ", "  ABBBBBBBBBA  ", "   BBAAAAABB   ", "     CDDDC     ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "     CDDDC     ", "   BBAAAAABB   ", "  ABBBBBBBBBA  ", "  AAAAAAAAAAA  ", "  AAAAAAAAAAA  ")
                    .aisle(" AAAAAAAAAAAAA ", " AAAAAAAAAAAAA ", " ABBBBBBBBBBBA ", "  BAAEEEEEAAB  ", "   CCEEEEECC   ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "               ", "               ", "               ", "               ", "               ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "   CCEEEEECC   ", "  BAABBBBBAAB  ", " ABBBBBBBBBBBA ", " AAAAAAAAAAAAA ", " AAAAAAAAAAAAA ")
                    .aisle(" AAAAAAAAAAAAA ", " AAAAAAAAAAAAA ", " ABBBBBBBBBBBA ", "  BAEEEEEEEAB  ", "   CE     EC   ", "    E     E    ", "    E     E    ", "    E     E    ", "    E     E    ", "    E     E    ", "     EEEEE     ", "               ", "               ", "               ", "     EEEEE     ", "    E     E    ", "    E     E    ", "    E     E    ", "    E     E    ", "    E     E    ", "   CE     EC   ", "  BABBBBBBBAB  ", " ABBBBBBBBBBBA ", " AAAAAAAAAAAAA ", " AAAAAAAAAAAAA ")
                    .aisle("AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "ABBBBBBBBBBBBBA", " BAEEEEEEEEEAB ", "  CE       EC  ", "   E       E   ", "   E       E   ", "   E       E   ", "   E       E   ", "   E       E   ", "    EEEEEEE    ", "      CCC      ", "      CCC      ", "      CCC      ", "    EEEEEEE    ", "   E       E   ", "   E       E   ", "   E       E   ", "   E       E   ", "   E       E   ", "  CE       EC  ", " BABBBBBBBBBAB ", "ABBBBBBBBBBBBBA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA")
                    .aisle("AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "ABBBBBBBBBBBBBA", " BAEEEFFFEEEAB ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", "  D EEBBBEE D  ", "  D  CBBBC  D  ", "  D  CBBBC  D  ", "  D  CBBBC  D  ", "  D EEBBBEE D  ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", " BABBBFFFBBBAB ", "ABBBBBBBBBBBBBA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA")
                    .aisle("AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "ABBBBBBBBBBBBBA", " BAEEEFFFEEEAB ", "  DE  BFB  ED  ", "  DE  BFB  ED  ", "  DE  BFB  ED  ", "  DE  BFB  ED  ", "  DE  BFB  ED  ", "  DE  BFB  ED  ", "  D EEBFBEE D  ", "  D  CBFBC  D  ", "  D  CBFBC  D  ", "  D  CBFBC  D  ", "  D EEBFBEE D  ", "  DE  BFB  ED  ", "  DE  BFB  ED  ", "  DE  BFB  ED  ", "  DE  BFB  ED  ", "  DE  BFB  ED  ", "  DE  BFB  ED  ", " BABBBFFFBBBAB ", "ABBBBBBBBBBBBBA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA")
                    .aisle("AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "ABBBBBBBBBBBBBA", " BAEEEFFFEEEAB ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", "  D EEBBBEE D  ", "  D  CBBBC  D  ", "  D  CBBBC  D  ", "  D  CBBBC  D  ", "  D EEBBBEE D  ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", "  DE  BBB  ED  ", " BABBBFFFBBBAB ", "ABBBBBBBBBBBBBA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA")
                    .aisle("AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA", "ABBBBBBBBBBBBBA", " BAEEEEEEEEEAB ", "  CE       EC  ", "   E       E   ", "   E       E   ", "   E       E   ", "   E       E   ", "   E       E   ", "    EEEEEEE    ", "      CCC      ", "      CCC      ", "      CCC      ", "    EEEEEEE    ", "   E       E   ", "   E       E   ", "   E       E   ", "   E       E   ", "   E       E   ", "  CE       EC  ", " BABBBBBBBBBAB ", "ABBBBBBBBBBBBBA", "AAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAA")
                    .aisle(" AAAAAAAAAAAAA ", " AAAAAAAAAAAAA ", " ABBBBBBBBBBBA ", "  BAEEEEEEEAB  ", "   CE     EC   ", "    E     E    ", "    E     E    ", "    E     E    ", "    E     E    ", "    E     E    ", "     EEEEE     ", "               ", "               ", "               ", "     EEEEE     ", "    E     E    ", "    E     E    ", "    E     E    ", "    E     E    ", "    E     E    ", "   CE     EC   ", "  BABBBBBBBAB  ", " ABBBBBBBBBBBA ", " AAAAAAAAAAAAA ", " AAAAAAAAAAAAA ")
                    .aisle(" AAAAAAAAAAAAA ", " AAAAAAAAAAAAA ", " ABBBBBBBBBBBA ", "  BAAEEEEEAAB  ", "   CCEEEEECC   ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "               ", "               ", "               ", "               ", "               ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "     EEEEE     ", "   CCEEEEECC   ", "  BAABBBBBAAB  ", " ABBBBBBBBBBBA ", " AAAAAAAAAAAAA ", " AAAAAAAAAAAAA ")
                    .aisle("  AAAAAAAAAAA  ", "  AAAAAAAAAAA  ", "  ABBBBBBBBBA  ", "   BBAAAAABB   ", "     CDDDC     ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "      DDD      ", "     CDDDC     ", "   BBAAAAABB   ", "  ABBBBBBBBBA  ", "  AAAAAAAAAAA  ", "  AAAAAAAAAAA  ")
                    .aisle("   AAAAAAAAA   ", "   AAAAAAAAA   ", "   AABBBBBAA   ", "     BBBBB     ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "     BBBBB     ", "   AABBBBBAA   ", "   AAAAAAAAA   ", "   AAAAAAAAA   ")
                    .aisle("     AAAAA     ", "     AAcAA     ", "     AAAAA     ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "     AAAAA     ", "     AAAAA     ", "     AAAAA     ")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(CASING_WATERTIGHT.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(abilities(PartAbility.INPUT_LASER).setExactLimit(1))
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1)))
                    .where('B', blocks(CASING_PTFE_INERT.get()))
                    .where('C', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, Polytetrafluoroethylene).get()))
                    .where('D', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, NaquadahAlloy).get()))
                    .where('E', blocks(CASING_TEMPERED_GLASS.get()))
                    .where('F', blocks(CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/gcym/watertight_casing"), GTCEu.id("block/multiblock/gcym/large_extractor"))
            .register();

    public final static MultiblockMachineDefinition PHOTON_STATION_DEPLOY_UNIT = REGISTRATE.multiblock("photon_station_deploy_unit", PhotonStationDeployUnit::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.CIRCUIT_RECIPE_GENERATOR)
            .recipeModifier(PhotonStationDeployUnit::recipeModifier, true)
            .appearanceBlock(CASING_STAINLESS_CLEAN)
            .tooltips(Component.translatable("mbe.multiblock.circuit_set_1"))
            .tooltips(Component.translatable("mbe.multiblock.photon_station_deploy_unit.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.photon_station_deploy_unit.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.photon_station_deploy_unit.tooltip.2"))
            .tooltips(Component.translatable("mbe.multiblock.photon_station_deploy_unit.tooltip.3"))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", " AAAAAAA ")
                    .aisle("         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", " AAAAAAA ", "ABBBBBBBA")
                    .aisle("   AAA   ", "   AAA   ", "   AAA   ", "         ", "         ", "         ", "         ", "   AAA   ", " AAAAAAA ", "ABBBBBBBA")
                    .aisle("  AAAAA  ", "  A   A  ", "  AAAAA  ", "    A    ", "    A    ", "    A    ", "    A    ", "  AAAAA  ", " AAAAAAA ", "ABBBBBBBA")
                    .aisle("  AAAAA  ", "  A C A  ", "  AACAA  ", "   ACA   ", "   ACA   ", "   ACA   ", "   ACA   ", "  AACAA  ", " AAACAAA ", "ABBBBBBBA")
                    .aisle("  AAAAA  ", "  A   A  ", "  AAAAA  ", "    A    ", "    A    ", "    A    ", "    A    ", "  AAAAA  ", " AAAAAAA ", "ABBBBBBBA")
                    .aisle("   AAA   ", "   AcA   ", "   AAA   ", "         ", "         ", "         ", "         ", "   AAA   ", " AAAAAAA ", "ABBBBBBBA")
                    .aisle("         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", " AAAAAAA ", "ABBBBBBBA")
                    .aisle("         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", "         ", " AAAAAAA ")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(CASING_STAINLESS_CLEAN.get())
                            .or(abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.OUTPUT_ENERGY).setMaxGlobalLimited(3))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where('B', blocks(PHOTON_RECEIVING_PLATE.get()))
                    .where('C', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, UraniumTriplatinum).get()))
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_clean_stainless_steel"), GTCEu.id("block/multiblock/gcym/large_extractor"))
            .register();

    public static final MultiblockMachineDefinition ADVANCED_ROCKET_ASSEMBLY_LINE = REGISTRATE.multiblock("advanced_rocket_assembly_line", (holder) -> new AdvancedRocketAssemblyLine(holder, "ARALTier"))
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.ADVANCED_ROCKET_ASSEMBLY_LINE)
            .recipeModifiers(GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .appearanceBlock(CASING_STEEL_SOLID)
            .tooltips(Component.translatable("mbe.multiblock.advanced_rocket_assembly_line.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.advanced_rocket_assembly_line.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.advanced_rocket_assembly_line.tooltip.2"))
            .tooltips(Component.translatable("mbe.multiblock.advanced_rocket_assembly_line.tooltip.3"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.advanced_rocket_assembly_line")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAA         ", "BB BB         ", "B   B         ", "AAAAA         ", "AAAAA         ", "AAAAA         ")
                    .aisle("AAAAAAAAAAAAAA", "BCCCEEEEEEEEEE", " CCCFAAAAAAAAA", "ACCCAGGGGGGGGG", "ADDDA         ", "AAAAA         ")
                    .aisle("AAAAAAAAAAAAAA", " CCCDDDDDDDDDE", " CCCFCCCCCCCCA", "ACCCAFFFFFFFFG", "ADDDA         ", "AAAAA         ")
                    .aisle("AAAAAHHHHHHAAA", "BCCCEEEEEEEEDE", " CCCFAAAAAAAAA", "ACCCAGGGGGGGFG", "ADDDA         ", "AAAAA         ")
                    .aisle("AAAAA      AAA", "BBcBB      EEE", "B   B      AAA", "AAAAA      GGG", "AAAAA         ", "AAAAA         ")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(CASING_STEEL_SOLID.get()))
                    .where('B', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, StainlessSteel).get()))
                    .where('C', blocks(CASING_ASSEMBLY_CONTROL.get()))
                    .where('D', blocks(CASING_ASSEMBLY_LINE.get()))
                    .where('E', blocks(CASING_LAMINATED_GLASS.get()))
                    .where('F', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, Polytetrafluoroethylene).get()))
                    .where('G', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, MaragingSteel300).get()))
                    .where('H', blocks(CASING_STEEL_SOLID.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_solid_steel"), GTCEu.id("block/multiblock/assembly_line"))
            .register();

    public static final MultiblockMachineDefinition ORE_PROCESSOR = REGISTRATE.multiblock("ore_processor", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.ORE_PROCESSOR)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.OC_NON_PERFECT)
            .appearanceBlock(CASING_HSSE_STURDY)
            .tooltips(Component.translatable("mbe.multiblock.ore_processor.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.ore_processor.tooltip.1"))
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.ore_processor")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAAAA", "ABAAABA", "ABAAABA", "ABAAABA", "ABAAABA", "ABBBBBA", "AAAAAAA", " AAAAA ")
                    .aisle("AAAAAAA", "BCGGGCB", "BDHHHDB", "B     B", "B     B", "B     B", "AFDCDFA", " AAAAA ")
                    .aisle("AAAAAAA", "BCDDDCB", "BDHHHDB", "B     B", "B     B", "B     B", "AFDCDFA", " AAAAA ")
                    .aisle("AAAAAAA", "ACGGGCA", "AEIIIEA", "AE   EA", "AE   EA", "AE   EA", "AFDCDFA", " AAAAA ")
                    .aisle("AAAAAAA", "BCDDDCB", "BDHHHDB", "B     B", "B     B", "B     B", "AFDCDFA", " AAAAA ")
                    .aisle("AAAAAAA", "BCGGGCB", "BDHHHDB", "B     B", "B     B", "B     B", "AFDCDFA", " AAAAA ")
                    .aisle("AAAAAAA", "ACDDDCA", "AEIIIEA", "AE   EA", "AE   EA", "AE   EA", "AFDCDFA", " AAAAA ")
                    .aisle("AAAAAAA", "BCGGGCB", "BDHHHDB", "B     B", "B     B", "B     B", "AFDCDFA", " AAAAA ")
                    .aisle("AAAAAAA", "BCDDDCB", "BDHHHDB", "B     B", "B     B", "B     B", "AFDCDFA", " AAAAA ")
                    .aisle("AAAAAAA", "ACGGGCA", "AEIIIEA", "AE   EA", "AE   EA", "AE   EA", "AFDCDFA", " AAAAA ")
                    .aisle("AAAAAAA", "BCDDDCB", "BDHHHDB", "B     B", "B     B", "B     B", "AFDCDFA", " AAAAA ")
                    .aisle("AAAAAAA", "BCGGGCB", "BDHHHDB", "B     B", "B     B", "B     B", "AFDCDFA", " AAAAA ")
                    .aisle("AAAAAAA", "ACDDDCA", "AEIIIEA", "AE   EA", "AE   EA", "AE   EA", "AFDCDFA", " AAAAA ")
                    .aisle("AAAAAAA", "BCGGGCB", "BDHHHDB", "B     B", "B     B", "B     B", "AFDCDFA", " AAAAA ")
                    .aisle("AAAAAAA", "BCDDDCB", "BDHHHDB", "B     B", "B     B", "B     B", "AFDCDFA", " AAAAA ")
                    .aisle("AAAAAAA", "ACGGGCA", "AEIIIEA", "AE   EA", "AE   EA", "AE   EA", "AFDCDFA", " AAAAA ")
                    .aisle("AAAAAAA", "BCDDDCB", "BDHHHDB", "B     B", "B     B", "B     B", "AFDCDFA", " AAAAA ")
                    .aisle("AAAAAAA", "BCGGGCB", "BDHHHDB", "B     B", "B     B", "B     B", "AFDCDFA", " AAAAA ")
                    .aisle("AAAAAAA", "ABAAABA", "ABAcABA", "ABAAABA", "ABAAABA", "ABBBBBA", "AAAAAAA", " AAAAA ")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(CASING_HSSE_STURDY.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where('B', blocks(CASING_LAMINATED_GLASS.get()))
                    .where('C', blocks(CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('D', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, StainlessSteel).get()))
                    .where('E', blocks(CASING_TUNGSTENSTEEL_GEARBOX.get()))
                    .where('F', blocks(CASING_SECURE_MACERATION.get()))
                    .where('G', blocks(CASING_VIBRATION_SAFE.get()))
                    .where('H', blocks(CRUSHING_WHEELS.get()))
                    .where('I', blocks(CASING_GRATE.get()))
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_sturdy_hsse"), GTCEu.id("block/multiblock/assembly_line"))
            .register();

    public static final MultiblockMachineDefinition EXTENDED_ORE_PROCESSOR = REGISTRATE.multiblock("extended_ore_processor", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.ORE_PROCESSOR)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.OC_NON_PERFECT)
            .appearanceBlock(NAQUADAH_ALLOY_CASING)
            .tooltips(Component.translatable("mbe.multiblock.ore_processor.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.ore_processor.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.ore_processor.tooltip.2"))
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltipBuilder((stack, components) -> components.add(Component.translatable("mbe.multiblock.laser_available.0").append(Component.translatable("mbe.multiblock.laser_available.1").withStyle(style -> style.withColor(TooltipHelper.RAINBOW_SLOW.getCurrent())))))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.ore_processor")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAA", "AABBBAABBBAABBBAABBBAABBBAA", "AABBBAABBBAABBBAABBBAABBBAA", "AABBBAABBBAABBBAABBBAABBBAA", "AABBBAABBBAABBBAABBBAABBBAA", "AABBBAABBBAABBBAABBBAABBBAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAA", "                           ", "                           ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAA", "A                         A", "A                         A", "A                         A", "A                         A", "C                         C", "CJJJJJJJJJJJJJJJJJJJJJJJJJC", "CCCCCCCCCCCCCCCCCCCCCCCCCCC", "                           ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAA", "ADDDDDDDDDDDDDDDDDDDDDDDDDA", "AFFFFFFFFFFFFFFFFFFFFFFFFFA", "B                         B", "B                         B", "C H H  H H  H H  H H  H H C", "C H H  H H  H H  H H  H H C", "CCCCCCCCCCCCCCCCCCCCCCCCCCC", "AALLLAALLLAALLLAALLLAALLLAA")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAA", "AEEEEEEEEEEEEEEEEEEEEEEEEEA", "AGGGGGGGGGGGGGGGGGGGGGGGGGA", "B                         B", "B                         B", "CIIIIIIIIIIIIIIIIIIIIIIIIIC", "C                         C", "C                         C", "AAAAAAAAAAAAAAAAAAAAAAAAAAA")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAA", "AEEEEEEEEEEEEEEEEEEEEEEEEEA", "AHHHHHHHHHHHHHHHHHHHHHHHHHA", "B                         B", "B                         B", "CIIIIIIIIIIIIIIIIIIIIIIIIIC", "C                         C", "CKKKKKKKKKKKKKKKKKKKKKKKKKC", "AAAAAAAAAAAAAAAAAAAAAAAAAAA")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAA", "AEEEEEEEEEEEEEEEEEEEEEEEEEA", "AGGGGGGGGGGGGGGGGGGGGGGGGGA", "B                         B", "B                         B", "CIIIIIIIIIIIIIIIIIIIIIIIIIC", "C                         C", "C                         C", "AAAAAAAAAAAAAAAAAAAAAAAAAAA")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAA", "ADDDDDDDDDDDDDDDDDDDDDDDDDA", "AFFFFFFFFFFFFFFFFFFFFFFFFFA", "B                         B", "B                         B", "C H H  H H  H H  H H  H H C", "C H H  H H  H H  H H  H H C", "CCCCCCCCCCCCCCCCCCCCCCCCCCC", "AALLLAALLLAALLLAALLLAALLLAA")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAA", "A                         A", "A                         A", "A                         A", "A                         A", "C                         C", "CJJJJJJJJJJJJJJJJJJJJJJJJJC", "CCCCCCCCCCCCCCCCCCCCCCCCCCC", "                           ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAA", "AABBBAABBBAABBBAABBBAAAcAAA", "AABBBAABBBAABBBAABBBAAAAAAA", "AABBBAABBBAABBBAABBBAABBBAA", "AABBBAABBBAABBBAABBBAABBBAA", "AABBBAABBBAABBBAABBBAABBBAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAA", "                           ", "                           ")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(NAQUADAH_ALLOY_CASING.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where('B', blocks(CASING_LAMINATED_GLASS.get()))
                    .where('C', blocks(NEUTRONIUM_CASING.get()))
                    .where('D', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, Osmiridium).get()))
                    .where('E', blocks(CASING_VIBRATION_SAFE.get()))
                    .where('F', blocks(CASING_SECURE_MACERATION.get()))
                    .where('G', blocks(CRUSHING_WHEELS.get()))
                    .where('H', blocks(CASING_ATOMIC.get()))
                    .where('I', blocks(CASING_GRATE.get()))
                    .where('J', blocks(CASING_TUNGSTENSTEEL_GEARBOX.get()))
                    .where('K', blocks(CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('L', blocks(HEAT_VENT.get()))
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/naquadah_alloy_casing"), GTCEu.id("block/multiblock/assembly_line"))
            .register();

    public static final MultiblockMachineDefinition[] COMPRESSED_FUSION_REACTOR = MBETieredMultis("compressed_fusion_reactor",
            FusionReactorMachine::new, (tier, builder) -> builder
                    .rotationState(RotationState.ALL)
                    .langValue("Compressed Fusion Reactor Computer MK %s".formatted(FormattingUtil.toRomanNumeral(tier - 5)))
                    .recipeType(GTRecipeTypes.FUSION_RECIPES)
                    .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, FusionReactorMachine::recipeModifier)
                    .tooltips(Component.translatable("gtceu.machine.fusion_reactor.capacity", FusionReactorMachine.calculateEnergyStorageFactor(tier, 16) / 1000000L), Component.translatable("gtceu.machine.fusion_reactor.overclocking"))
                    .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
                    .tooltipBuilder((stack, components) -> components.add(Component.translatable("mbe.multiblock.laser_available.0").append(Component.translatable("mbe.multiblock.laser_available.1").withStyle(style -> style.withColor(TooltipHelper.RAINBOW_SLOW.getCurrent())))))
                    .appearanceBlock(() -> MBECompressedFusionReactorCasingBlocks.CasingBlock(tier))
                    .pattern((definition) -> {
                        var casing = blocks(MBECompressedFusionReactorCasingBlocks.CasingBlock(tier));
                        return FactoryBlockPattern.start()
                                .aisle("                                               ", "                                               ", "                    ABBBBBA                    ", "                    ABCCCBA                    ", "                    ABBBBBA                    ", "                                               ", "                                               ")
                                .aisle("                                               ", "                    ABCCCBA                    ", "                   BB     BB                   ", "                   BB     BB                   ", "                   BB     BB                   ", "                    ABCCCBA                    ", "                                               ")
                                .aisle("                    ABBBBBA                    ", "                   BB     BB                   ", "                BBBBB     BBBBB                ", "                BBBDDDDDDDDDBBB                ", "                BBBBB     BBBBB                ", "                   BB     BB                   ", "                    ABBBBBA                    ")
                                .aisle("                    ABCCCBA                    ", "                BBBBB     BBBBB                ", "              BBBBBDDDDDDDDDBBBBB              ", "              BBDDDDDDDDDDDDDDDBB              ", "              BBBBBDDDDDDDDDBBBBB              ", "                BBBBB     BBBBB                ", "                    ABCCCBA                    ")
                                .aisle("                    ABBBBBA                    ", "              BBBBBBB     BBBBBBB              ", "            BBBBDDDBB     BBDDDBBBB            ", "            BBDDDDDDDDDDDDDDDDDDDBB            ", "            BBBBDDDBB     BBDDDBBBB            ", "              BBBBBBB     BBBBBBB              ", "                    ABBBBBA                    ")
                                .aisle("                                               ", "            BBBBBBB ABCCCBA BBBBBBB            ", "          BBBBDDBBBBB     BBBBBDDBBBB          ", "          BBDDDDDDDBB     BBDDDDDDDBB          ", "          BBBBDDBBBBB     BBBBBDDBBBB          ", "            BBBBBBB ABCCCBA BBBBBBB            ", "                                               ")
                                .aisle("                                               ", "           BBBBB               BBBBB           ", "         BBBDDBBBBB ABBBBBA BBBBBDDBBB         ", "         BBDDDDDBEB ABBcBBA BEBDDDDDBB         ", "         BBBDDBBBBB ABBBBBA BBBBBDDBBB         ", "          BBBBBB               BBBBBB          ", "                                               ")
                                .aisle("                                               ", "          BBBB                   BBBB          ", "        BBBDBBBB               BBBBDBBB        ", "        BBDDDDBB               BBDDDDBB        ", "        BBBDBBBB               BBBBDBBB        ", "         BBBBB                   BBBBB         ", "                                               ")
                                .aisle("                                               ", "         BBB                       BBB         ", "       BBBDBBB                   BBBDBBB       ", "       BBDDDBB                   BBDDDBB       ", "       BBBDBBB                   BBBDBBB       ", "        BBBB                       BBBB        ", "                                               ")
                                .aisle("                                               ", "        BBB                         BBB        ", "      BBBDBB                       BBDBBB      ", "      BBDDDE                       EDDDBB      ", "      BBBDBB                       BBDBBB      ", "       BBBB                         BBBB       ", "                                               ")
                                .aisle("                                               ", "       BBB                           BBB       ", "     BBBDBB                         BBDBBB     ", "     BBDDDB                         BDDDBB     ", "     BBBDBB                         BBDBBB     ", "      BBBB                           BBBB      ", "                                               ")
                                .aisle("                                               ", "      BBB                             BBB      ", "     BBDBB                           BBDBB     ", "     BDDDE                           EDDDB     ", "     BBDBB                           BBDBB     ", "      BBB                             BBB      ", "                                               ")
                                .aisle("                                               ", "     BBB                               BBB     ", "    BBDBB                             BBDBB    ", "    BDDDB                             BDDDB    ", "    BBDBB                             BBDBB    ", "     BBB                               BBB     ", "                                               ")
                                .aisle("                                               ", "     BBB                               BBB     ", "    BBDBB                             BBDBB    ", "    BDDDB                             BDDDB    ", "    BBDBB                             BBDBB    ", "     BBB                               BBB     ", "                                               ")
                                .aisle("                                               ", "    BBB                                 BBB    ", "   BBDBB                               BBDBB   ", "   BDDDB                               BDDDB   ", "   BBDBB                               BBDBB   ", "    BBB                                 BBB    ", "                                               ")
                                .aisle("                                               ", "    BBB                                 BBB    ", "   BBDBB                               BBDBB   ", "   BDDDB                               BDDDB   ", "   BBDBB                               BBDBB   ", "    BBB                                 BBB    ", "                                               ")
                                .aisle("                                               ", "   BBB                                   BBB   ", "  BBDBB                                 BBDBB  ", "  BDDDB                                 BDDDB  ", "  BBDBB                                 BBDBB  ", "   BBB                                   BBB   ", "                                               ")
                                .aisle("                                               ", "   BBB                                   BBB   ", "  BBDBB                                 BBDBB  ", "  BDDDE                                 EDDDB  ", "  BBDBB                                 BBDBB  ", "   BBB                                   BBB   ", "                                               ")
                                .aisle("                                               ", "   BBB                                   BBB   ", "  BBDBB                                 BBDBB  ", "  BDDDB                                 BDDDB  ", "  BBDBB                                 BBDBB  ", "   BBB                                   BBB   ", "                                               ")
                                .aisle("                                               ", "  BBB                                     BBB  ", " BBDBB                                   BBDBB ", " BDDDB                                   BDDDB ", " BBDBB                                   BBDBB ", "  BBB                                     BBB  ", "                                               ")
                                .aisle("  AAA                                     AAA  ", " ABBBA                                   ABBBA ", "ABBDBBA                                 ABBDBBA", "ABDDDBA                                 ABDDDBA", "ABBDBBA                                 ABBDBBA", " ABBBA                                   ABBBA ", "  AAA                                     AAA  ")
                                .aisle("  BBB                                     BBB  ", " B   B                                   B   B ", "B  D  B                                 B  D  B", "B DDD B                                 B DDD B", "B  D  B                                 B  D  B", " B   B                                   B   B ", "  BBB                                     BBB  ")
                                .aisle("  BCB                                     BCB  ", " C   C                                   C   C ", "B  D  B                                 B  D  B", "C DDD C                                 C DDD C", "B  D  B                                 B  D  B", " C   C                                   C   C ", "  BCB                                     BCB  ")
                                .aisle("  BCB                                     BCB  ", " C   C                                   C   C ", "B  D  B                                 B  D  B", "C DDD C                                 C DDD C", "B  D  B                                 B  D  B", " C   C                                   C   C ", "  BCB                                     BCB  ")
                                .aisle("  BCB                                     BCB  ", " C   C                                   C   C ", "B  D  B                                 B  D  B", "C DDD C                                 C DDD C", "B  D  B                                 B  D  B", " C   C                                   C   C ", "  BCB                                     BCB  ")
                                .aisle("  BBB                                     BBB  ", " B   B                                   B   B ", "B  D  B                                 B  D  B", "B DDD C                                 B DDD B", "B  D  B                                 B  D  B", " B   B                                   B   B ", "  BBB                                     BBB  ")
                                .aisle("  AAA                                     AAA  ", " ABBBA                                   ABBBA ", "ABBDBBA                                 ABBDBBA", "ABDDDBA                                 ABDDDBA", "ABBDBBA                                 ABBDBBA", " ABBBA                                   ABBBA ", "  AAA                                     AAA  ")
                                .aisle("                                               ", "  BBB                                     BBB  ", " BBDBB                                   BBDBB ", " BDDDB                                   BDDDB ", " BBDBB                                   BBDBB ", "  BBB                                     BBB  ", "                                               ")
                                .aisle("                                               ", "   BBB                                   BBB   ", "  BBDBB                                 BBDBB  ", "  BDDDB                                 BDDDB  ", "  BBDBB                                 BBDBB  ", "   BBB                                   BBB   ", "                                               ")
                                .aisle("                                               ", "   BBB                                   BBB   ", "  BBDBB                                 BBDBB  ", "  BDDDE                                 EDDDB  ", "  BBDBB                                 BBDBB  ", "   BBB                                   BBB   ", "                                               ")
                                .aisle("                                               ", "   BBB                                   BBB   ", "  BBDBB                                 BBDBB  ", "  BDDDB                                 BDDDB  ", "  BBDBB                                 BBDBB  ", "   BBB                                   BBB   ", "                                               ")
                                .aisle("                                               ", "    BBB                                 BBB    ", "   BBDBB                               BBDBB   ", "   BDDDB                               BDDDB   ", "   BBDBB                               BBDBB   ", "    BBB                                 BBB    ", "                                               ")
                                .aisle("                                               ", "    BBB                                 BBB    ", "   BBDBB                               BBDBB   ", "   BDDDB                               BDDDB   ", "   BBDBB                               BBDBB   ", "    BBB                                 BBB    ", "                                               ")
                                .aisle("                                               ", "     BBB                               BBB     ", "    BBDBB                             BBDBB    ", "    BDDDB                             BDDDB    ", "    BBDBB                             BBDBB    ", "     BBB                               BBB     ", "                                               ")
                                .aisle("                                               ", "     BBB                               BBB     ", "    BBDBB                             BBDBB    ", "    BDDDB                             BDDDB    ", "    BBDBB                             BBDBB    ", "     BBB                               BBB     ", "                                               ")
                                .aisle("                                               ", "      BBB                             BBB      ", "     BBDBB                           BBDBB     ", "     BDDDE                           EDDDB     ", "     BBDBB                           BBDBB     ", "      BBB                             BBB      ", "                                               ")
                                .aisle("                                               ", "       BBB                           BBB       ", "     BBBDBB                         BBDBBB     ", "     BBDDDB                         BDDDBB     ", "     BBBDBB                         BBDBBB     ", "      BBBB                           BBBB      ", "                                               ")
                                .aisle("                                               ", "        BBB                         BBB        ", "      BBBDBB                       BBDBBB      ", "      BBDDDE                       EDDDBB      ", "      BBBDBB                       BBDBBB      ", "       BBBB                         BBBB       ", "                                               ")
                                .aisle("                                               ", "         BBB                       BBB         ", "       BBBDBBB                   BBBDBBB       ", "       BBDDDBB                   BBDDDBB       ", "       BBBDBBB                   BBBDBBB       ", "        BBBB                       BBBB        ", "                                               ")
                                .aisle("                                               ", "          BBBB                   BBBB          ", "        BBBDBBBB               BBBBDBBB        ", "        BBDDDDBB               BBDDDDBB        ", "        BBBDBBBB               BBBBDBBB        ", "         BBBBB                   BBBBB         ", "                                               ")
                                .aisle("                                               ", "           BBBBB               BBBBB           ", "         BBBDDBBBEB ABBBBBA BEBBBDDBBB         ", "         BBDDDDDBEB ABCCCBA BEBDDDDDBB         ", "         BBBDDBBBBB ABBBBBA BBBBBDDBBB         ", "          BBBBBB               BBBBBB          ", "                                               ")
                                .aisle("                                               ", "            BBBBBBB ABCCCBA BBBBBBB            ", "          BBBBDDBBBBB     BBBBBDDBBBB          ", "          BBDDDDDDDBB     BBDDDDDDDBB          ", "          BBBBDDBBBBB     BBBBBDDBBBB          ", "            BBBBBBB ABCCCBA BBBBBBB            ", "                                               ")
                                .aisle("                    ABBBBBA                    ", "              BBBBBBB     BBBBBBB              ", "            BBBBDDDBB     BBDDDBBBB            ", "            BBDDDDDDDDDDDDDDDDDDDBB            ", "            BBBBDDDBB     BBDDDBBBB            ", "              BBBBBBB     BBBBBBB              ", "                    ABBBBBA                    ")
                                .aisle("                    ABCCCBA                    ", "                BBBBB     BBBBB                ", "              BBBBBDDDDDDDDDBBBBB              ", "              BBDDDDDDDDDDDDDDDBB              ", "              BBBBBDDDDDDDDDBBBBB              ", "                BBBBB     BBBBB                ", "                    ABCCCBA                    ")
                                .aisle("                    ABBBBBA                    ", "                   BB     BB                   ", "                BBBBB     BBBBB                ", "                BBBDDDDDDDDDBBB                ", "                BBBBB     BBBBB                ", "                   BB     BB                   ", "                    ABBBBBA                    ")
                                .aisle("                                               ", "                    ABCCCBA                    ", "                   BB     BB                   ", "                   BB     BB                   ", "                   BB     BB                   ", "                    ABCCCBA                    ", "                                               ")
                                .aisle("                                               ", "                                               ", "                    ABBBBBA                    ", "                    ABCCCBA                    ", "                    ABBBBBA                    ", "                                               ", "                                               ")
                                .where(' ', any())
                                .where('c', controller(blocks(definition.get())))
                                .where('A', blocks(MBECompressedFusionReactorCasingBlocks.FrameBlock(tier)))
                                .where('B', casing
                                        .or(abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(8).setPreviewCount(2))
                                        .or(abilities(PartAbility.EXPORT_FLUIDS).setMaxGlobalLimited(8).setPreviewCount(1))
                                        .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1)))
                                .where('C', blocks(FUSION_GLASS.get()))
                                .where('D', blocks(ADVANCED_FUSION_COIL.get()))
                                .where('E', casing
                                        .or(abilities(PartAbility.INPUT_LASER).setPreviewCount(16)))
                                .build();
                    })
                    .workableCasingRenderer(MBECompressedFusionReactorCasingBlocks.CasingType(tier).getTexture(), GTCEu.id("block/multiblock/fusion_reactor"))
                    .register(),
            LuV, ZPM, UV);

    public final static MultiblockMachineDefinition COMPONENT_FACTORY = REGISTRATE.multiblock("component_factory", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.COMPONENT_FACTORY)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK))
            .appearanceBlock(COMPONENT_FACTORY_CASING)
            .tooltips(Component.translatable("mbe.multiblock.component_factory.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.component_factory.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.component_factory.tooltip.2"))
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltipBuilder((stack, components) -> components.add(Component.translatable("mbe.multiblock.laser_available.0").append(Component.translatable("mbe.multiblock.laser_available.1").withStyle(style -> style.withColor(TooltipHelper.RAINBOW_SLOW.getCurrent())))))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.component_factory")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAAAA", "ABHHHBA", "ABHHHBA", "ABHHHBA", "ABBBBBA", "AABBBAA", "AAAAAAA", "#AAAAA#")
                    .aisle("AAAAAAA", "B CCC B", "B CCC B", "B CCC B", "B     B", "BDDDDDB", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B AAA B", "B AAA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "AIAAAIA", "AIFGFIA", "AIAJAIA", "AI   IA", "ADDDDDA", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "AIAAAIA", "AIFGFIA", "AIAJAIA", "AI   IA", "ADDDDDA", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "AIAAAIA", "AIFGFIA", "AIAJAIA", "AI   IA", "ADDDDDA", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "AIAAAIA", "AIFGFIA", "AIAJAIA", "AI   IA", "ADDDDDA", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B FGF B", "B AJA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B AAA B", "B AAA B", "B AAA B", "B     B", "B  D  B", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "B CCC B", "B CCC B", "B CCC B", "B     B", "BDDDDDB", "AAAAAAA", "#AEAEA#")
                    .aisle("AAAAAAA", "ABHHHBA", "ABHcHBA", "ABHHHBA", "ABBBBBA", "AABBBAA", "AAAAAAA", "#AAAAA#")
                    .where(' ', air())
                    .where('#', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(COMPONENT_FACTORY_CASING.get()))
                    .where('B', blocks(NEUTRONIUM_REINFORCED_BOROSILICATE_GLASS.get()))
                    .where('C', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, Osmiridium).get()))
                    .where('D', blocks(COMPONENT_FACTORY_LOGIC_UNIT.get()))
                    .where('E', blocks(COMPONENT_FACTORY_HEAT_VENT.get()))
                    .where('F', blocks(CASING_GRATE.get()))
                    .where('G', blocks(COMPONENT_FACTORY_GEARBOX.get()))
                    .where('H', blocks(COMPONENT_FACTORY_CASING.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1)))
                    .where('I', blocks(FILTER_CASING.get()))
                    .where('J', blocks(CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/component_factory_casing"), GTCEu.id("block/multiblock/assembly_line"))
            .register();

    public final static MultiblockMachineDefinition ELEMENT_EXTRACTOR = REGISTRATE.multiblock("element_extractor", ElementExtractor::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.ELEMENT_EXTRACTOR)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, ElementExtractor::recipeModifier)
            .appearanceBlock(VF_9200_GS_ALLOY_CASING)
            .tooltips(Component.translatable("mbe.multiblock.element_extractor.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.element_extractor.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.element_extractor.tooltip.2"))
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.element_extractor")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAAAAAAAAAA", "ADDDA     AAA", "ADDDA     AAA", "ADDDAEEEEEAAA", "AAAAA     AAA", "E   E        ", "AAAAA        ")
                    .aisle("AAAAAAAAAAAAA", "D   AAAAAAA A", "D   AGGGGGA A", "D   AAAAAAA A", "AAAAA     AAA", " AAA         ", "AAAAA        ")
                    .aisle("AAAAAAAAAAAAA", "D H A     A A", "D H HHHHHHH A", "D H AAAAAAA A", "AAHAA     AAA", " AHA         ", "AAIAA        ")
                    .aisle("AAAAAAAAAAAAA", "D   AAAAAAA A", "D   AGGGGGA A", "D   AAAAAAA A", "AAAAA     AAA", " AAA         ", "AAAAA        ")
                    .aisle("ABBBACCCCCAAA", "ADDDA     AAA", "ADDDA     AcA", "ADDDAEEEEEAAA", "AFFFA     AAA", "E   E        ", "AAAAA        ")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(VF_9200_GS_ALLOY_CASING.get()))
                    .where('B', blocks(VF_9200_GS_ALLOY_CASING.get())
                            .or(autoAbilities(definition.getRecipeTypes(), false, false, false, true, false, true)))
                    .where('C', blocks(VF_9200_GS_ALLOY_CASING.get())
                            .or(autoAbilities(definition.getRecipeTypes(), true, false, false, false, false, false))
                            .or(abilities(MBEPartAbility.COSMIC_RADIATION_SIMULATION_HATCH).setExactLimit(1))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1)))
                    .where('D', blocks(NEUTRONIUM_REINFORCED_BOROSILICATE_GLASS.get()))
                    .where('E', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, NaquadahAlloy).get()))
                    .where('F', blocks(VF_9200_GS_ALLOY_CASING.get())
                            .or(autoAbilities(definition.getRecipeTypes(), false, false, true, false, true, false)))
                    .where('G', blocks(ELECTROLYTIC_CELL.get()))
                    .where('H', blocks(CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('I', abilities(PartAbility.MUFFLER))
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/vf_9200_gs_alloy_casing"), GTCEu.id("block/multiblock/large_chemical_reactor"))
           .register();

    public final static MultiblockMachineDefinition STELLAR_HEAT_SMELTER = REGISTRATE.multiblock("stellar_heat_smelter", StellarHeatSmelter::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeTypes(GTRecipeTypes.BLAST_RECIPES, ALLOY_BLAST_RECIPES, MBERecipeTypes.PHLOGISTON_FUSION_FORGE)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, StellarHeatSmelter::recipeModifier)
            .appearanceBlock(MOLECULAR_CASING)
            .tooltips(Component.translatable("mbe.multiblock.stellar_heat_smelter.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.stellar_heat_smelter.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.stellar_heat_smelter.tooltip.2"))
            .tooltips(Component.translatable("mbe.multiblock.stellar_heat_smelter.tooltip.3"))
            .tooltips(Component.translatable("mbe.multiblock.stellar_heat_smelter.tooltip.4"))
            .tooltips(Component.translatable("mbe.multiblock.stellar_heat_smelter.tooltip.5"))
            .tooltips(Component.translatable("mbe.multiblock.stellar_heat_smelter.tooltip.6"))
            .tooltips(Component.translatable("mbe.multiblock.stellar_heat_smelter.tooltip.7"))
            .tooltips(Component.translatable("mbe.multiblock.stellar_heat_smelter.tooltip.8"))
            .tooltips(Component.translatable("mbe.multiblock.stellar_heat_smelter.tooltip.9"))
            .tooltips(Component.translatable("mbe.multiblock.stellar_heat_smelter.tooltip.10"))
            .tooltips(Component.translatable("mbe.multiblock.stellar_heat_smelter.tooltip.11"))
            .tooltips(Component.translatable("mbe.multiblock.stellar_heat_smelter.tooltip.12"))
            .tooltips(Component.translatable("mbe.machine.stellar_heat_smelter_temperature.tooltip"))
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltipBuilder((stack, components) -> components.add(Component.translatable("mbe.multiblock.laser_available.0").append(Component.translatable("mbe.multiblock.laser_available.1").withStyle(style -> style.withColor(TooltipHelper.RAINBOW_SLOW.getCurrent())))))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_3.tooltip", Component.translatable("gtceu.electric_blast_furnace"), Component.translatable("gtceu.alloy_blast_smelter"), Component.translatable("gtceu.phlogiston_fusion_forge")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("         AAAAA     ", "                   ", "                   ", "                   ", "         AAAAA     ", "         CCCCC     ", "         AAAAA     ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "         AAAAA     ", "         AAAAA     ", "         AAAAA     ", "                   ")
                    .aisle("       AAAAAAAAA   ", "         ADDDA     ", "         ADDDA     ", "         ADDDA     ", "       AAAAAAAAA   ", "       CCAAAAACC   ", "       AAAAAAAAA   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "         AAAAA     ", "         AAAAA     ", "       AAAAAAAAA   ", "       AAAAAAAAA   ", "       AAAAAAAAA   ", "                   ")
                    .aisle("      AAAAAAAAAAA  ", "        DDDDDDD    ", "        DEEEEED    ", "        DEEEEED    ", "      AAAEEEEEAAA  ", "      CAAEEEEEAAC  ", "      AAAEEEEEAAA  ", "         EEEEE     ", "         EEEEE     ", "         EEEEE     ", "         EEEEE     ", "         EEEEE     ", "         EEEEE     ", "         EEEEE     ", "         EEEEE     ", "         EEEEE     ", "         EEEEE     ", "         EEEEE     ", "        AEEEEEA    ", "        AEEEEEA    ", "      AAAAAAAAAAA  ", "      AAAAAAAAAAA  ", "      AAAAAAAAAAA  ", "         AAAAA     ")
                    .aisle
                    .aisle("     AAAAAAAAAAAAA ", "      DDF     FDD  ", "      DEF     FED  ", "      DEF     FED  ", "     AAEF     FEAA ", "     CAEF     FEAC ", "     AAEF     FEAA ", "       EF     FE   ", "       EF     FE   ", "       EF     FE   ", "       EF     FE   ", "       EF     FE   ", "       EF     FE   ", "       EF     FE   ", "       EF     FE   ", "       EF     FE   ", "       EF     FE   ", "       EF     FE   ", "      AEF     FEA  ", "      AEF     FEA  ", "     AAAA     AAAA ", "     AAADAAAAADAAA ", "     AAADAAAAADAAA ", "       AAAAAAAAA   ")
                    .aisle("AAA AAAAAAAAAAAAAAA", "AAA  ADF       FDA ", "AAA  AEF       FEA ", "AAA  AEF       FEA ", "AAA AAEF       FEAA", "AAA CAEF       FEAC", "AAA AAEF       FEAA", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "     AEF       FEA ", "     AEF       FEA ", "    AAAA       AAAA", "    AAADAAAAAAADAAA", "    AAADAAAAAAADAAA", "      AAAAAAAAAAA  ")
                    .aisle("AAA AAAAAAAAAAAAAAA", "ABAAAAAF       FDD ", "ABAAAAAF       FED ", "ABAAAAAF       FED ", "ABA AAEF       FEAA", "ABA CAEF       FEAC", "AAA AAEF       FEAA", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "     AEF       FEA ", "     AEF       FEA ", "    AAAA       AAAA", "    AAADAAAAAAADAAA", "    AAADAAAAAAADAAA", "      AAAAAAAAAAA  ")
                    .aisle("AAA AAAAAAAAAAAAAAA", "ABAAAAAF       FDD ", "AAA    F       FED ", "AAAAAAAF       FED ", "AAA AAEF       FEAA", "ABA CAEF       FEAC", "AAA AAEF       FEAA", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "     AEF       FEA ", "     AEF       FEA ", "    AAAA       AAAA", "    AAADAAAAAAADAAA", "    AAADAAAAAAADAAA", "      AAAAAAAAAAA  ")
                    .aisle("AAA AAAAAAAAAAAAAAA", "ABAAAAAF       FDD ", "ABAAAAAF       FED ", "ABAAAAAF       FED ", "ABA AAEF       FEAA", "ABA CAEF       FEAC", "AAA AAEF       FEAA", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "     AEF       FEA ", "     AEF       FEA ", "    AAAA       AAAA", "    AAADAAAAAAADAAA", "    AAADAAAAAAADAAA", "      AAAAAAAAAAA  ")
                    .aisle("AAA AAAAAAAAAAAAAAA", "AcA  ADF       FDA ", "AAA  AEF       FEA ", "AAA  AEF       FEA ", "AAA AAEF       FEAA", "AAA CAEF       FEAC", "AAA AAEF       FEAA", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "      EF       FE  ", "     AEF       FEA ", "     AEF       FEA ", "    AAAA       AAAA", "    AAADAAAAAAADAAA", "    AAADAAAAAAADAAA", "      AAAAAAAAAAA  ")
                    .aisle("     AAAAAAAAAAAAA ", "      DDF     FDD  ", "      DEF     FED  ", "      DEF     FED  ", "     AAEF     FEAA ", "     CAEF     FEAC ", "     AAEF     FEAA ", "       EF     FE   ", "       EF     FE   ", "       EF     FE   ", "       EF     FE   ", "       EF     FE   ", "       EF     FE   ", "       EF     FE   ", "       EF     FE   ", "       EF     FE   ", "       EF     FE   ", "       EF     FE   ", "      AEF     FEA  ", "      AEF     FEA  ", "     AAAA     AAAA ", "     AAADAAAAADAAA ", "     AAADAAAAADAAA ", "       AAAAAAAAA   ")
                    .aisle
                    .aisle("      AAAAAAAAAAA  ", "        DDDDDDD    ", "        DEEEEED    ", "        DEEEEED    ", "      AAAEEEEEAAA  ", "      CAAEEEEEAAC  ", "      AAAEEEEEAAA  ", "         EEEEE     ", "         EEEEE     ", "         EEEEE     ", "         EEEEE     ", "         EEEEE     ", "         EEEEE     ", "         EEEEE     ", "         EEEEE     ", "         EEEEE     ", "         EEEEE     ", "         EEEEE     ", "        AEEEEEA    ", "        AEEEEEA    ", "      AAAAAAAAAAA  ", "      AAAAAAAAAAA  ", "      AAAAAAAAAAA  ", "         AAAAA     ")
                    .aisle("       AAAAAAAAA   ", "         ADDDA     ", "         ADDDA     ", "         ADDDA     ", "       AAAAAAAAA   ", "       CCAAAAACC   ", "       AAAAAAAAA   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "         AAAAA     ", "         AAAAA     ", "       AAAAAAAAA   ", "       AAAAAAAAA   ", "       AAAAAAAAA   ", "                   ")
                    .aisle("         AAAAA     ", "                   ", "                   ", "                   ", "         AAAAA     ", "         CCCCC     ", "         AAAAA     ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "         AAAAA     ", "         AAAAA     ", "         AAAAA     ", "                   ")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(MOLECULAR_CASING.get())
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(autoAbilities(definition.getRecipeTypes())
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1))))
                    .where('B', blocks(CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('C', blocks(NEUTRONIUM_CASING.get()))
                    .where('D', blocks(ENERGY_RESTRAINT_CASING.get()))
                    .where('E', blocks(NEUTRONIUM_REINFORCED_BOROSILICATE_GLASS.get()))
                    .where('F', heatingCoils())
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/molecular_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    public final static MultiblockMachineDefinition LARGE_MASS_FABRICATOR = REGISTRATE.multiblock("large_mass_fabricator", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.LARGE_MASS_FABRICATOR)
            .recipeModifiers((machine, recipe) -> MBERecipeModifiers.accurateParallels(machine, recipe, 64), GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .appearanceBlock(MASS_EXPANSION_SUPPRESSION_CASING)
            .tooltips(Component.translatable("mbe.multiblock.large_mass_fabricator.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.large_mass_fabricator.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.large_mass_fabricator.parallel.0"))
            .tooltipBuilder((stack, components) -> components.add(Component.translatable("mbe.multiblock.laser_available.0").append(Component.translatable("mbe.multiblock.laser_available.1").withStyle(style -> style.withColor(TooltipHelper.RAINBOW_SLOW.getCurrent())))))            
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.large_mass_fabricator")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAA", " B B ", " B B ", " B B ", "AAAAA")
                    .aisle("ACCCA", "BDDDB", "BEEEB", "BFFFB", "ACCCA")
                    .aisle("ACCCA", " D D ", " E E ", " F F ", "ACCCA")
                    .aisle("ACCCA", " D D ", " E E ", " F F ", "ACCCA")
                    .aisle("ACCCA", " D D ", " E E ", " F F ", "ACCCA")
                    .aisle("ACCCA", "BDDDB", "BEEEB", "BFFFB", "ACCCA")
                    .aisle("AAcAA", " B B ", " B B ", " B B ", "AAAAA")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.get())))
                    .where('A', blocks(MASS_EXPANSION_SUPPRESSION_CASING.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1)))
                    .where('B', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, AtomicAlloy).get()))
                    .where('C', blocks(MACHINE_CASING_UHV.get()))
                    .where('D', blocks(MATTER_DECOMPOSE_HEAT_VENT.get()))
                    .where('E', blocks(MASS_EXPANSION_SUPPRESSION_GLASS.get()))
                    .where('F', blocks(ENERGY_RESTRAINT_CASING.get()))
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/mass_expansion_suppression_casing"), MultiBlock_Engineer.id("block/multiblock/large_mass_fabricator"))
            .register();

    public final static MultiblockMachineDefinition ULTRA_PRECISION_MATTER_PROCESSOR = REGISTRATE.multiblock("ultra_precision_matter_processor", (holder) -> new UltraPrecisionMatterProcessor(holder, "IFRTier"))
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.ULTRA_PRECISION_MATTER_PROCESSOR )
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK_SUBTICK))
            .appearanceBlock(HIGH_PRECISE_INERT_CASING)
            .tooltips(Component.translatable("mbe.multiblock.ultra_precision_matter_processor.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.ultra_precision_matter_processor.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.ultra_precision_matter_processor.tooltip.2"))
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltipBuilder((stack, components) -> components.add(Component.translatable("mbe.multiblock.laser_available.0").append(Component.translatable("mbe.multiblock.laser_available.1").withStyle(style -> style.withColor(TooltipHelper.RAINBOW_SLOW.getCurrent())))))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.ultra_precision_matter_processor")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("                   ", "                   ", "                   ", "                   ", "AA     AAAAA     AA", "AA     AAAAA     AA", "AA     AAAAA     AA", "                   ", "                   ", "                   ", "                   ")
                    .aisle("                   ", "                   ", "AA     AAAAA     AA", "AA     AAAAA     AA", "AADADADCCCCCDADADAA", "AADADADCCCCCDADADAA", "AADADADCCCCCDADADAA", "AA     AAAAA     AA", "AA     AAAAA     AA", "                   ", "                   ")
                    .aisle("                   ", "AA     AAAAA     AA", "AABBBBB     BBBBBAA", "AADADAD     DADADAA", "AACCCCC     CCCCCAA", "AACCCCC     CCCCCAA", "AACCCCC     CCCCCAA", "AADADAD     DADADAA", "AABBBBB     BBBBBAA", "AA     AAAAA     AA", "                   ")
                    .aisle("                   ", "AA     AAAAA     AA", "AAAAAAA     AAAAAAA", "AACCCCC     CCCCCAA", "AA               AA", "AA               AA", "AA               AA", "AACCCCC     CCCCCAA", "AAAAAAA     AAAAAAA", "AA     AAAAA     AA", "                   ")
                    .aisle("AA     AAAAA     AA", "AAAAAAACCCCCAAAAAAA", "AACCCCC     CCCCCAA", "AA               AA", "AAEEEEEEEEEEEEEEEAA", "AAEEEEEEEEEEEEEEEAA", "AAEEEEEEEEEEEEEEEAA", "AA               AA", "AACCCCC     CCCCCAA", "AAAAAAACCCCCAAAAAAA", "AA     AAAAA     AA")
                    .aisle("AA     AAAAA     AA", "AABBBBBCCCCCBBBBBAA", "AACCCCC     CCCCCAA", "AA               AA", "AAEEEEEEEEEEEEEEEAA", "AA               AA", "AAEEEEEEEEEEEEEEEAA", "AA               AA", "AACCCCC     CCCCCAA", "AABBBBBCCCCCBBBBBAA", "AA     AAAAA     AA")
                    .aisle("AA     AAAAA     AA", "AAAAAAACCCCCAAAAAAA", "AACCCCC     CCCCCAA", "AA               AA", "AAEEEEEEEEEEEEEEEAA", "AAEEEEEEEEEEEEEEEAA", "AAEEEEEEEEEEEEEEEAA", "AA               AA", "AACCCCC     CCCCCAA", "AAAAAAACCCCCAAAAAAA", "AA     AAAAA     AA")
                    .aisle("                   ", "AA     AAAAA     AA", "AAAAAAA     AAAAAAA", "AACCCCC     CCCCCAA", "AA               AA", "AA               AA", "AA               AA", "AACCCCC     CCCCCAA", "AAAAAAA     AAAAAAA", "AA     AAAAA     AA", "                   ")
                    .aisle("                   ", "AA     AAAAA     AA", "AABBBBB     BBBBBAA", "AADADAD     DADADAA", "AACCCCC     CCCCCAA", "AACCCCC     CCCCCAA", "AACCCCC     CCCCCAA", "AADADAD     DADADAA", "AABBBBB     BBBBBAA", "AA     AAAAA     AA", "                   ")
                    .aisle("                   ", "                   ", "AA     AAAAA     AA", "AA     AAAAA     AA", "AADADADCCCCCDADADAA", "AADADADCCCCCDADADAA", "AADADADCCCCCDADADAA", "AA     AAAAA     AA", "AA     AAAAA     AA", "                   ", "                   ")
                    .aisle("                   ", "                   ", "                   ", "                   ", "AA     AAAAA     AA", "AA     AAcAA     AA", "AA     AAAAA     AA", "                   ", "                   ", "                   ", "                   ")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(HIGH_PRECISE_INERT_CASING.get())
                            .or(abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(2))
                            .or(abilities(PartAbility.EXPORT_FLUIDS).setMaxGlobalLimited(2))
                            .or(abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(2))
                            .or(abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(2))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1)))
                    .where('B', blocks(PRESSURE_STABILIZER.get()))
                    .where('C', heatingCoils())
                    .where('D', MBEPredicates.ActiveTierPartBlock(IFRMap, "IFRTier"))
                    .where('E', blocks(CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/high_precise_inert_casing"), GTCEu.id("block/multiblock/large_chemical_reactor"))
            .register();

    public final static MultiblockMachineDefinition IMAGINARY_ENGINE_COMPUTER = REGISTRATE.multiblock("imaginary_engine_computer", ImaginaryEngineComputer::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.IMAGINARY_ENGINE_COMPUTER)
            .recipeModifier(ImaginaryEngineComputer::recipeModifier, true)
            .appearanceBlock(IMAGINARY_ENGINE_COMPUTER_CASING)
            .tooltips(Component.translatable("mbe.multiblock.imaginary_engine_computer.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.imaginary_engine_computer.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.imaginary_engine_computer.tooltip.2"))
            .tooltips(Component.translatable("mbe.multiblock.imaginary_engine_computer.tooltip.3"))
            .tooltips(Component.translatable("mbe.multiblock.imaginary_engine_computer.tooltip.4"))
            .tooltips(Component.translatable("mbe.multiblock.imaginary_engine_computer.tooltip.5"))
            .tooltips(Component.translatable("mbe.multiblock.imaginary_engine_computer.computation.0"))
            .tooltipBuilder((stack, components) -> components.add(Component.translatable("mbe.multiblock.laser_available.0").append(Component.translatable("mbe.multiblock.laser_available.1").withStyle(style -> style.withColor(TooltipHelper.RAINBOW_SLOW.getCurrent())))))            
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.imaginary_engine_computer")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAA", "AAA", "AAA", "AAA", "AAA", "AAA", "AAA")
                    .aisle("AAA", "CBD", "CBD", "CBD", "CBD", "CBD", "AEA")
                    .aisle("AAA", "CBD", "CBD", "CBD", "CBD", "CBD", "AEA")
                    .aisle("AAA", "CBD", "CBD", "CBD", "CBD", "CBD", "AEA")
                    .aisle("AAA", "CBD", "CBD", "CBD", "CBD", "CBD", "AEA")
                    .aisle("AAA", "CBD", "CBD", "CBD", "CBD", "CBD", "AEA")
                    .aisle("AAA", "CBD", "CBD", "CBD", "CBD", "CBD", "AEA")
                    .aisle("AAA", "CBD", "CBD", "CBD", "CBD", "CBD", "AEA")
                    .aisle("AAA", "AAA", "AcA", "AAA", "AAA", "AAA", "AAA")
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(IMAGINARY_ENGINE_COMPUTER_CASING.get())
                            .or(abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.EXPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.COMPUTATION_DATA_TRANSMISSION).setExactLimit(1)))
                    .where('B', blocks(ABSOLUTELY_CLEAN_ISOLATION_INTERLAYER.get()))
                    .where('C', blocks(PARTICLE_MOVEMENT_OBSERVATION_CHAMBER.get()))
                    .where('D', blocks(RAPID_COOLING_COMPONENT.get()))
                    .where('E', blocks(IMAGINARY_ENGINE_COMPUTER_HEAT_VENT.get()))
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/imaginary_engine_computer_casing"), MultiBlock_Engineer.id("block/multiblock/imaginary_engine_computer"))
            .register();

    public final static MultiblockMachineDefinition MICRO_STAR_COLLAPSE_SIMULATOR = REGISTRATE.multiblock("micro_star_collapse_simulator", MicroStarCollapseSimulator::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.MICRO_STAR_COLLAPSE_SIMULATOR)
            .recipeModifier(MicroStarCollapseSimulator::recipeModifier, true)
            .appearanceBlock(STELLAR_THERMAL_ENERGY_SHIELDING_CASING)
            .generator(true)
            .tooltips(Component.translatable("mbe.multiblock.micro_star_collapse_simulator.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.micro_star_collapse_simulator.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.micro_star_collapse_simulator.tooltip.2"))
            .tooltips(Component.translatable("mbe.multiblock.micro_star_collapse_simulator.tooltip.3"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.micro_star_collapse_simulator")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle
                    .aisle("       AAAAAAAAAAAAA       ", "       AAAAAAAAAAAAA       ", "          BBBBBBB          ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "            A A            ", "            A A            ", "          CCCCCCC          ", "           C   C           ", "          CCCCCCC          ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("      AAAAAAAAAAAAAAA      ", "      AAAAAAAAAAAAAAA      ", "        BBAAAAAAABB        ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "            A A            ", "            A A            ", "            DDD            ", "           DDDDD           ", "        CCDDDDDDDCC        ", "          DDDDDDD          ", "        CCDDDDDDDCC        ", "           DDDDD           ", "            DDD            ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("    AAAAAAAAAAAAAAAAAAA    ", "    AAAAAAAAAAAAAAAAAAA    ", "      BBAAAAAAAAAAABB      ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "            A A            ", "          CCACACC          ", "           DDDDD           ", "         DDDDDDDDD         ", "         DDD   DDD         ", "        DDD     DDD        ", "      CCDD       DDCC      ", "        DD       DD        ", "      CCDD       DDCC      ", "        DDD     DDD        ", "         DDD   DDD         ", "         DDDDDDDDD         ", "           DDDDD           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("   AAAAAAAAAAAAAAAAAAAAA   ", "   AAAAAAAAAAAAAAAAAAAAA   ", "     BAAAAAAAAAAAAAAAB     ", "          BBBBBBB          ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "            A A            ", "            DDD            ", "        CCDDDDDDDCC        ", "        DDD     DDD        ", "        D         D        ", "       DD         DD       ", "       D           D       ", "     CDD           DDC     ", "      DD           DD      ", "     CDD           DDC     ", "       D           D       ", "       DD         DD       ", "        D         D        ", "        DDD     DDD        ", "          DDDDDDD          ", "            DDD            ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("   AAAAAAAAAAAAAAAAAAAAA   ", "   AAAAAAAAAAAAAAAAAAAAA   ", "    BAAAAAAAAAAAAAAAAAB    ", "        BBAAAAAAABB        ", "          BBBBBBB          ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "            A A            ", "            A A            ", "           DDDDD           ", "         DDD   DDD         ", "       CDD       DDC       ", "       D           D       ", "      DD           DD      ", "      D             D      ", "     DD             DD     ", "    CD               DC    ", "     D               D     ", "    CD               DC    ", "     DD             DD     ", "      D             D      ", "      DD           DD      ", "       D           D       ", "        DD       DD        ", "         DDD   DDD         ", "           DDDDD           ", "                           ", "                           ", "                           ")
                    .aisle("  AAAAAAAAAAAAAAAAAAAAAAA  ", "  AAAAAAAAAAAAAAAAAAAAAAA  ", "   BAAAAAAAAAAAAAAAAAAAB   ", "       BAAAAAAAAAAAB       ", "        BBBBBBBBBBB        ", "          BBBBBBB          ", "           AAAAA           ", "           CCCCC           ", "           AAAAA           ", "            A A            ", "            A A            ", "            A A            ", "            A A            ", "            DDD            ", "         DDD   DDD         ", "        D         D        ", "      CD           DC      ", "      D             D      ", "     D               D     ", "     D               D     ", "     D               D     ", "   CD                 DC   ", "    D                 D    ", "   CD                 DC   ", "     D               D     ", "     D               D     ", "     D               D     ", "      D             D      ", "       D           D       ", "        D         D        ", "         DDD   DDD         ", "            DDD            ", "                           ", "                           ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAA ", " AAAAAAAAAAAAAAAAAAAAAAAAA ", "   BAAAAAAAAAAAAAAAAAAAB   ", "      BAAAAAAAAAAAAAB      ", "       BBBB     BBBB       ", "        BBB     BBB        ", "         AA     AA         ", "         CC     CC         ", "         AA C C AA         ", "                           ", "                           ", "                           ", "            A A            ", "          DDDDDDD          ", "        DD       DD        ", "       D           D       ", "     CD             DC     ", "     D               D     ", "     D               D     ", "    D                 D    ", "    D                 D    ", "   CD                 DC   ", "    D                 D    ", "   CD                 DC   ", "    D                 D    ", "    D                 D    ", "     D               D     ", "     D               D     ", "      D             D      ", "       D           D       ", "        DD       DD        ", "          DDDDDDD          ", "                           ", "                           ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAA ", " AAAAAAAAAAAAAAAAAAAAAAAAA ", "  BAAAAAAAAAAAAAAAAAAAAAB  ", "     BAAAAAAAAAAAAAAAB     ", "      BBB   AAA   BBB      ", "       BB   AAA   BB       ", "        A         A        ", "        C         C        ", "        A   CCC   A        ", "                           ", "                           ", "            A A            ", "           DDDDD           ", "        DDD     DDD        ", "       D           D       ", "      D             D      ", "    CD               DC    ", "    D                 D    ", "    D                 D    ", "    D                 D    ", "   D                   D   ", "  CD                   DC  ", "   D                   D   ", "  CD                   DC  ", "   D                   D   ", "    D                 D    ", "    D                 D    ", "    D                 D    ", "     D               D     ", "      D             D      ", "       D           D       ", "        DDD     DDD        ", "           DDDDD           ", "                           ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAA ", " AAAAAAAAAAAAAAAAAAAAAAAAA ", "  BAAAAAAAAAAAAAAAAAAAAAB  ", "     BAAAAAAAAAAAAAAAB     ", "      BB  AA   AA  BB      ", "       B  AA   AA  B       ", "       A    AAA    A       ", "       C    AAA    C       ", "       A    C C    A       ", "                           ", "            AAA            ", "            AAA            ", "         DDDDDDDDD         ", "        D         D        ", "      DD           DD      ", "     D               D     ", "    CD               DC    ", "    D                 D    ", "   D                   D   ", "   D                   D   ", "   D                   D   ", "  CD                   DC  ", "   D                   D   ", "  CD                   DC  ", "   D                   D   ", "   D                   D   ", "   D                   D   ", "    D                 D    ", "     D               D     ", "     D               D     ", "      DD           DD      ", "        D         D        ", "         DDDDDDDDD         ", "                           ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAA", " BAAAAAAAAAAAAAAAAAAAAAAAB ", "    BAAAAAAAAAAAAAAAAAB    ", "     BBB AA     AA BBB     ", "      BB AA     AA BB      ", "       A   A   A   A       ", "       C   A   A   C       ", "       A    AAA    A       ", "            AAA            ", "           A   A           ", "           ADDDA           ", "         DDD   DDD         ", "       DD         DD       ", "      D             D      ", "     D               D     ", "   CD                 DC   ", "    D                 D    ", "   D                   D   ", "   D                   D   ", "   D                   D   ", " CD                     DC ", "  D                     D  ", " CD                     DC ", "   D                   D   ", "   D                   D   ", "   D                   D   ", "    D                 D    ", "    D                 D    ", "     D               D     ", "      D             D      ", "       DD         DD       ", "         DDD   DDD         ", "            DDD            ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAA", " BAAAAAAAAAAAAAAAAAAAAAAAB ", "    BAAAAAAAAAAAAAAAAAB    ", "     BB  A       A  BB     ", "      B  A       A  B      ", "      A   A     A   A      ", "      C   A     A   C      ", "      A    A   A    A      ", "           A   A           ", "          A     A          ", "          ADDDDDA          ", "        DDD     DDD        ", "       D           D       ", "     DD             DD     ", "     D               D     ", "   CD                 DC   ", "   D                   D   ", "   D                   D   ", "   D                   D   ", "  D                     D  ", " CD                     DC ", " CD                     DC ", " CD                     DC ", "  D                     D  ", "   D                   D   ", "   D                   D   ", "   D                   D   ", "    D                 D    ", "     D               D     ", "     DD             DD     ", "       D           D       ", "        DDD     DDD        ", "           DDDDD           ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAA", " BAAAAAAAAAAAAAAAAAAAAAAAB ", "    BAAAAAAAAAAAAAAAAAB    ", "     BB A   FFF   A BB     ", "      B A   FFF   A B      ", "      A  A  FFF  A  A      ", "      C  A  FFF  A  C      ", "      ACCCA FFF ACCCA      ", "      A   A FFF A   A      ", "      A  A  FFF  A  A      ", "      A AADDAAADDAA A      ", "     AAADD       DDAAA     ", "     ADD           DDA     ", "    AD               DA    ", "   AD                 DA   ", "   AD                 DA   ", "  AD                   DA  ", "  AD                   DA  ", " AD                     DA ", " AD                     DA ", " CD                     DC ", "  D                     D  ", " CD                     DC ", "  D                     D  ", "  D                     D  ", "   D                   D   ", "   D                   D   ", "    D                 D    ", "    D                 D    ", "     D               D     ", "      DD           DD      ", "        DD       DD        ", "          DDDDDDD          ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAA", " BAAAAAAAAAAAAAAAAAAAAAAAB ", "    BAAAAAAAAAAAAAAAAAB    ", "     BB A   FFF   A BB     ", "      B A   FFF   A B      ", "      A  A  FFF  A  A      ", "      C  A  FFF  A  C      ", "      A C A FFF A C A      ", "          A FFF A          ", "         A  FFF  A         ", "         ADDAAADDA         ", "        DD       DD        ", "      DD           DD      ", "     D               D     ", "    D                 D    ", "   CD                 DC   ", "   D                   D   ", "   D                   D   ", "  D                     D  ", "  D                     D  ", " CD                     DC ", "  D                     D  ", " CD                     DC ", "  D                     D  ", "  D                     D  ", "   D                   D   ", "   D                   D   ", "    D                 D    ", "    D                 D    ", "     D               D     ", "      DD           DD      ", "        DD       DD        ", "          DDDDDDD          ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAA", " BAAAAAAAAAAAAAAAAAAAAAAAB ", "    BAAAAAAAAAAAAAAAAAB    ", "     BB A   FFF   A BB     ", "      B A   FFF   A B      ", "      A  A  FFF  A  A      ", "      C  A  FFF  A  C      ", "      ACCCA FFF ACCCA      ", "      A   A FFF A   A      ", "      A  A  FFF  A  A      ", "      A AADDAAADDAA A      ", "     AAADD       DDAAA     ", "     ADD           DDA     ", "    AD               DA    ", "   AD                 DA   ", "   AD                 DA   ", "  AD                   DA  ", "  AD                   DA  ", " AD                     DA ", " AD                     DA ", " CD                     DC ", "  D                     D  ", " CD                     DC ", "  D                     D  ", "  D                     D  ", "   D                   D   ", "   D                   D   ", "    D                 D    ", "    D                 D    ", "     D               D     ", "      DD           DD      ", "        DD       DD        ", "          DDDDDDD          ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAA", " BAAAAAAAAAAAAAAAAAAAAAAAB ", "    BAAAAAAAAAAAAAAAAAB    ", "     BB  A       A  BB     ", "      B  A       A  B      ", "      A   A     A   A      ", "      C   A     A   C      ", "      A    A   A    A      ", "           A   A           ", "          A     A          ", "          ADDDDDA          ", "        DDD     DDD        ", "       D           D       ", "     DD             DD     ", "     D               D     ", "   CD                 DC   ", "   D                   D   ", "   D                   D   ", "   D                   D   ", "  D                     D  ", " CD                     DC ", " CD                     DC ", " CD                     DC ", "  D                     D  ", "   D                   D   ", "   D                   D   ", "   D                   D   ", "    D                 D    ", "     D               D     ", "     DD             DD     ", "       D           D       ", "        DDD     DDD        ", "           DDDDD           ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAA", " BAAAAAAAAAAAAAAAAAAAAAAAB ", "    BAAAAAAAAAAAAAAAAAB    ", "     BBB AA     AA BBB     ", "      BB AA     AA BB      ", "       A   A   A   A       ", "       C   A   A   C       ", "       A    AAA    A       ", "            AAA            ", "           A   A           ", "           ADDDA           ", "         DDD   DDD         ", "       DD         DD       ", "      D             D      ", "     D               D     ", "   CD                 DC   ", "    D                 D    ", "   D                   D   ", "   D                   D   ", "   D                   D   ", " CD                     DC ", "  D                     D  ", " CD                     DC ", "   D                   D   ", "   D                   D   ", "   D                   D   ", "    D                 D    ", "    D                 D    ", "     D               D     ", "      D             D      ", "       DD         DD       ", "         DDD   DDD         ", "            DDD            ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAA ", " AAAAAAAAAAAAAAAAAAAAAAAAA ", "  BAAAAAAAAAAAAAAAAAAAAAB  ", "     BAAAAAAAAAAAAAAAB     ", "      BB  AA   AA  BB      ", "       B  AA   AA  B       ", "       A    AAA    A       ", "       C    AAA    C       ", "       A    C C    A       ", "                           ", "            AAA            ", "            AAA            ", "         DDDDDDDDD         ", "        D         D        ", "      DD           DD      ", "     D               D     ", "    CD               DC    ", "    D                 D    ", "   D                   D   ", "   D                   D   ", "   D                   D   ", "  CD                   DC  ", "   D                   D   ", "  CD                   DC  ", "   D                   D   ", "   D                   D   ", "   D                   D   ", "    D                 D    ", "     D               D     ", "     D               D     ", "      DD           DD      ", "        D         D        ", "         DDDDDDDDD         ", "                           ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAA ", " AAAAAAAAAAAAAAAAAAAAAAAAA ", "  BAAAAAAAAAAAAAAAAAAAAAB  ", "     BAAAAAAAAAAAAAAAB     ", "      BBB   AAA   BBB      ", "       BB   AAA   BB       ", "        A         A        ", "        C         C        ", "        A   CCC   A        ", "                           ", "                           ", "            A A            ", "           DDDDD           ", "        DDD     DDD        ", "       D           D       ", "      D             D      ", "    CD               DC    ", "    D                 D    ", "    D                 D    ", "    D                 D    ", "   D                   D   ", "  CD                   DC  ", "   D                   D   ", "  CD                   DC  ", "   D                   D   ", "    D                 D    ", "    D                 D    ", "    D                 D    ", "     D               D     ", "      D             D      ", "       D           D       ", "        DDD     DDD        ", "           DDDDD           ", "                           ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAA ", " AAAAAAAAAAAAAAAAAAAAAAAAA ", "   BAAAAAAAAAAAAAAAAAAAB   ", "      BAAAAAAAAAAAAAB      ", "       BBBB     BBBB       ", "        BBB     BBB        ", "         AA     AA         ", "         CC     CC         ", "         AA C C AA         ", "                           ", "                           ", "                           ", "            A A            ", "          DDDDDDD          ", "        DD       DD        ", "       D           D       ", "     CD             DC     ", "     D               D     ", "     D               D     ", "    D                 D    ", "    D                 D    ", "   CD                 DC   ", "    D                 D    ", "   CD                 DC   ", "    D                 D    ", "    D                 D    ", "     D               D     ", "     D               D     ", "      D             D      ", "       D           D       ", "        DD       DD        ", "          DDDDDDD          ", "                           ", "                           ")
                    .aisle("  AAAAAAAAAAAAAAAAAAAAAAA  ", "  AAAAAAAAAAAAAAAAAAAAAAA  ", "   BAAAAAAAAAAAAAAAAAAAB   ", "       BAAAAAAAAAAAB       ", "        BBBBBBBBBBB        ", "          BBBBBBB          ", "           AAAAA           ", "           CCCCC           ", "           AAAAA           ", "            A A            ", "            A A            ", "            A A            ", "            A A            ", "            DDD            ", "         DDD   DDD         ", "        D         D        ", "      CD           DC      ", "      D             D      ", "     D               D     ", "     D               D     ", "     D               D     ", "   CD                 DC   ", "    D                 D    ", "   CD                 DC   ", "     D               D     ", "     D               D     ", "     D               D     ", "      D             D      ", "       D           D       ", "        D         D        ", "         DDD   DDD         ", "            DDD            ", "                           ", "                           ")
                    .aisle("   AAAAAAAAAAAAAAAAAAAAA   ", "   AAAAAAAAAAAAAAAAAAAAA   ", "    BAAAAAAAAAAAAAAAAAB    ", "        BBAAAAAAABB        ", "          BBBBBBB          ", "            AAA            ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "            A A            ", "            A A            ", "           DDDDD           ", "         DDD   DDD         ", "       CDD       DDC       ", "       D           D       ", "      DD           DD      ", "      D             D      ", "     DD             DD     ", "    CD               DC    ", "     D               D     ", "    CD               DC    ", "     DD             DD     ", "      D             D      ", "      DD           DD      ", "       D           D       ", "        DD       DD        ", "         DDD   DDD         ", "           DDDDD           ", "                           ", "                           ", "                           ")
                    .aisle("   AAAAAAAAAAAAAAAAAAAAA   ", "   AAAAAAAAAAAAAAAAAAAAA   ", "     BAAAAAAAAAAAAAAAB     ", "          BBEEEBB          ", "            EcE            ", "            EEE            ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "            A A            ", "            DDD            ", "        CCDDDDDDDCC        ", "        DDD     DDD        ", "        D         D        ", "       DD         DD       ", "       D           D       ", "     CDD           DDC     ", "      DD           DD      ", "     CDD           DDC     ", "       D           D       ", "       DD         DD       ", "        D         D        ", "        DDD     DDD        ", "          DDDDDDD          ", "            DDD            ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("    AAAAAAAAAAAAAAAAAAA    ", "    AAAAAAAAAAAAAAAAAAA    ", "      BBAAAAAAAAAAABB      ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "            A A            ", "          CCACACC          ", "           DDDDD           ", "         DDDDDDDDD         ", "         DDD   DDD         ", "        DDD     DDD        ", "      CCDD       DDCC      ", "        DD       DD        ", "      CCDD       DDCC      ", "        DDD     DDD        ", "         DDD   DDD         ", "         DDDDDDDDD         ", "           DDDDD           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("      AAAAAAAAAAAAAAA      ", "      AAAAAAAAAAAAAAA      ", "        BBAAAAAAABB        ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "            A A            ", "            A A            ", "            DDD            ", "           DDDDD           ", "        CCDDDDDDDCC        ", "          DDDDDDD          ", "        CCDDDDDDDCC        ", "           DDDDD           ", "            DDD            ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle("       AAAAAAAAAAAAA       ", "       AAAAAAAAAAAAA       ", "          BBBBBBB          ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "            A A            ", "            A A            ", "          CCCCCCC          ", "           C   C           ", "          CCCCCCC          ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ", "                           ")
                    .aisle
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(STELLAR_THERMAL_ENERGY_SHIELDING_CASING.get()))
                    .where('B', blocks(ENERGY_RESTRAINT_CASING.get()))
                    .where('C', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, MolecularAlloy).get()))
                    .where('D', blocks(STELLAR_THERMAL_ENERGY_SHIELDING_GLASS.get()))
                    .where('E', blocks(STELLAR_THERMAL_ENERGY_SHIELDING_CASING.get())
                            .or(abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.EXPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.OUTPUT_LASER).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.COMPUTATION_DATA_RECEPTION).setMaxGlobalLimited(1)))
                    .where('F', blocks(ULTRA_ENERGY_COIL.get()))
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/stellar_thermal_energy_shielding_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    public static final MultiblockMachineDefinition DIMENSION_PENETRATOR_MK1 = REGISTRATE.multiblock("dimension_penetrator_mk1", DimensionPenetrator::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.DIMENSION_PENETRATOR)
            .recipeModifier(DimensionPenetrator::recipeModifier, true)
            .appearanceBlock(ENERGY_RESTRAINT_CASING)
            .tooltips(Component.translatable("mbe.multiblock.dimension_penetrator.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.dimension_penetrator.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.dimension_penetrator.tooltip.2"))
            .tooltips(Component.translatable("mbe.multiblock.dimension_penetrator.tooltip.3"))
            .tooltips(Component.translatable("mbe.multiblock.dimension_penetrator.tooltip.4"))
            .tooltips(Component.translatable("mbe.multiblock.dimension_penetrator.tooltip.5"))
            .tooltipBuilder((stack, components) -> components.add(Component.translatable("mbe.multiblock.laser_available.0").append(Component.translatable("mbe.multiblock.laser_available.1").withStyle(style -> style.withColor(TooltipHelper.RAINBOW_SLOW.getCurrent())))))            
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.dimension_penetrator")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("            AAAAAAA            ", "            BBB BBB            ", "             B   B             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("         AAAAAAAAAAAAA         ", "         BBBBBB BBBBBB         ", "            BBB BBB            ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("       AAAAAAAAAAAAAAAAA       ", "       BBBBBBBB BBBBBBBB       ", "         BBB B   B BBB         ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("      AAAAAAAAAAAAAAAAAAA      ", "      BBBBBB D   D BBBBBB      ", "       BB    B   B    BB       ", "             B   B             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("     AAAAAAAAAAAAAAAAAAAAA     ", "     BBBB             BBBB     ", "                               ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("    AAAAAAAAAAAAAAAAAAAAAAA    ", "    BBB                 BBB    ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("   AAAAAAAAAAAAAAAAAAAAAAAAA   ", "   BBB                   BBB   ", "                               ", "                               ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("  AAAAAAAAAAAAAAAAAAAAAAAAAAA  ", "  BBB         BBB         BBB  ", "   B                       B   ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("  AAAAAAAAAAAAAAAAAAAAAAAAAAA  ", "  BBB       BBEEEBB       BBB  ", "   B                       B   ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAAAAAA ", " BBB      BBEEFFFEEBB      BBB ", "  B                         B  ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             BDDDB             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             DBBBD             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle(" AAAAAAAAAAAAABBBAAAAAAAAAAAAA ", " BBB     BEEFFFFFFFEEB     BBB ", "  B                         B  ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "           DDB   BDD           ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "           DBB   BBD           ", "             BB BB             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle(" AAAAAAAAAAABBBBBBBAAAAAAAAAAA ", " BBB     BEFFFFFFFFFEB     BBB ", "  B                         B  ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "          D         D          ", "                               ", "                               ", "                               ", "                               ", "                               ", "          DB       BD          ", "              B B              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              D D              ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("AAAAAAAAAAABBBBBBBBBAAAAAAAAAAA", "BBB     BEFFFFFFFFFFFEB     BBB", " B          BB   BB          B ", "            BB   BB            ", "            BB   BB            ", "            BB   BB            ", "            BBDDDBB            ", "            BBBBBBB            ", "             BBBBB             ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              BDB              ", "              B B              ", "              B B              ", "          D   B B   D          ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "          B   B B   B          ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "             DDDDD             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("AAAAAAAAAAABBBBBBBBBAAAAAAAAAAA", "BBBD    BEFFFFFFFFFFFEB    DBBB", "BBBB        B     B        BBBB", " CCBB       B     B       BBCC ", "   CBB      B     B      BBC   ", "    CB      B     B      BC    ", "    CBB     B     B     BBC    ", "     CB     BDDDDDB     BC     ", "     CB     B     B     BC     ", "     CBB               BBC     ", "      CB               BC      ", "      CB               BC      ", "      CBB             BBC      ", "       CB             BC       ", "       CB             BC       ", "       CBB           BBC       ", "        CB           BC        ", "        CB           BC        ", "        CB           BC        ", "        CB     D     BC        ", "        CB           BC        ", "        CB           BC        ", "        CBB   B B   BBC        ", "         CB         BC         ", "         CB         BC         ", "         CB         BC         ", "         CB         BC         ", "         CB         BC         ", "         DB         BD         ", "          B         B          ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "            DDBBBDD            ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              DDD              ")
                    .aisle("AAAAAAAAAABBBBBBBBBBBAAAAAAAAAA", "BBB    BEFFFFFBBBFFFFFEB    BBB", " B            BBB            B ", "              BBB              ", "              BBB              ", "              BBB              ", "            D BBB D            ", "            BDBBBDB            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B BDB B            ", "            B B B B            ", "            B B B B            ", "         D  BBBDBBB  D         ", "            B B B B            ", "            B B B B            ", "            B B B B            ", "            B B B B            ", "            B B B B            ", "         B  B B B B  B         ", "          BBB B B BBB          ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           DDBBDBBDD           ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             DBBBD             ")
                    .aisle("AAAAAAAAAABBBBBHBBBBBAAAAAAAAAA", "       BEFFFFFBBBFFFFFEB       ", "              BGB              ", "              BGB              ", "              BGB              ", "              BGB              ", "            D BGB D            ", "            BDBIBDB            ", "            B     B            ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "            DDDIDDD            ", "                               ", "                               ", "         D    DID    D         ", "                               ", "                               ", "                               ", "                               ", "                               ", "         B           B         ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "            DBDIDBD            ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "             DBIBD             ")
                    .aisle("AAAAAAAAAABBBBBBBBBBBAAAAAAAAAA", "BBB    BEFFFFFBBBFFFFFEB    BBB", " B            BBB            B ", "              BcB              ", "              BBB              ", "              BBB              ", "            D BBB D            ", "            BDBBBDB            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B BDB B            ", "            B B B B            ", "            B B B B            ", "         D  BBBDBBB  D         ", "            B B B B            ", "            B B B B            ", "            B B B B            ", "            B B B B            ", "            B B B B            ", "         B  B B B B  B         ", "          BBB B B BBB          ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           DDBBDBBDD           ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             DBBBD             ")
                    .aisle("AAAAAAAAAAABBBBBBBBBAAAAAAAAAAA", "BBBD    BEFFFFFFFFFFFEB    DBBB", "BBBB        B     B        BBBB", " CCBB       B     B       BBCC ", "   CBB      B     B      BBC   ", "    CB      B     B      BC    ", "    CBB     B     B     BBC    ", "     CB     BDDDDDB     BC     ", "     CB     B     B     BC     ", "     CBB               BBC     ", "      CB               BC      ", "      CB               BC      ", "      CBB             BBC      ", "       CB             BC       ", "       CB             BC       ", "       CBB           BBC       ", "        CB           BC        ", "        CB           BC        ", "        CB           BC        ", "        CB     D     BC        ", "        CB           BC        ", "        CB           BC        ", "        CBB   B B   BBC        ", "         CB         BC         ", "         CB         BC         ", "         CB         BC         ", "         CB         BC         ", "         CB         BC         ", "         DB         BD         ", "          B         B          ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "            DDBBBDD            ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              DDD              ")
                    .aisle("AAAAAAAAAAABBBBBBBBBAAAAAAAAAAA", "BBB     BEFFFFFFFFFFFEB     BBB", " B          BB   BB         BB ", "            BB   BB            ", "            BB   BB            ", "            BB   BB            ", "            BBDDDBB            ", "            BBBBBBB            ", "             BBBBB             ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              BDB              ", "              B B              ", "              B B              ", "          D   B B   D          ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "          B   B B   B          ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "             DDDDD             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle(" AAAAAAAAAAABBBBBBBAAAAAAAAAAA ", " BBB     BEFFFFFFFFFEB     BBB ", "  B                         B  ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "          D         D          ", "                               ", "                               ", "                               ", "                               ", "                               ", "          DB       BD          ", "              B B              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              D D              ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle(" AAAAAAAAAAAAABBBAAAAAAAAAAAAA ", " BBB     BEEFFFFFFFEEB     BBB ", "  B                         B  ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "           DDB   BDD           ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "           DBB   BBD           ", "             BB BB             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAAAAAA ", " BBB      BBEEFFFEEBB      BBB ", "  B                         B  ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             BDDDB             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             DBBBD             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("  AAAAAAAAAAAAAAAAAAAAAAAAAAA  ", "  BBB       BBEEEBB       BBB  ", "   B                       B   ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("  AAAAAAAAAAAAAAAAAAAAAAAAAAA  ", "  BBB         BBB         BBB  ", "   B                       B   ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("   AAAAAAAAAAAAAAAAAAAAAAAAA   ", "   BBB                   BBB   ", "                               ", "                               ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("    AAAAAAAAAAAAAAAAAAAAAAA    ", "    BBB                 BBB    ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("     AAAAAAAAAAAAAAAAAAAAA     ", "     BBBB             BBBB     ", "                               ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("      AAAAAAAAAAAAAAAAAAA      ", "      BBBBBB D   D BBBBBB      ", "       BB    B   B    BB       ", "             B   B             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("       AAAAAAAAAAAAAAAAA       ", "       BBBBBBBB BBBBBBBB       ", "         BBB B   B BBB         ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("         AAAAAAAAAAAAA         ", "         BBBBBB BBBBBB         ", "            BBB BBB            ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("            AAAAAAA            ", "            BBB BBB            ", "             B   B             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(SUPER_STABLE_CONCRETE.get()))
                    .where('B', blocks(ENERGY_RESTRAINT_CASING.get()))
                    .where('C', blocks(STRUCTURAL_REINFORCED_PIPE_CASING.get()))
                    .where('D', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, CosmicNeutronium).get()))
                    .where('E', blocks(DIMENSION_PROJECTOR_MK1.get()))
                    .where('F', blocks(ENERGY_RESTRAINT_CASING.get())
                            .or(abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.EXPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.COMPUTATION_DATA_RECEPTION).setMaxGlobalLimited(1)))
                    .where('G', blocks(LASER_PASSTHROUGH_PIPE.get()))
                    .where('H', blocks(PartAbility.INPUT_LASER.getBlockRange(IV, UIV).toArray(Block[]::new))
                            .or(blocks(PartAbility.INPUT_ENERGY.getBlockRange(IV, UIV).toArray(Block[]::new))))
                    .where('I', blocks(ENERGY_FOCUS_LENS.get()))
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/energy_restraint_casing"), MultiBlock_Engineer.id("block/multiblock/dimension_penetrator"))
            .register();

    public static final MultiblockMachineDefinition DIMENSION_PENETRATOR_MK2 = REGISTRATE.multiblock("dimension_penetrator_mk2", DimensionPenetrator::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.DIMENSION_PENETRATOR)
            .recipeModifier(DimensionPenetrator::recipeModifier, true)
            .appearanceBlock(ENERGY_RESTRAINT_CASING)
            .tooltips(Component.translatable("mbe.multiblock.dimension_penetrator.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.dimension_penetrator.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.dimension_penetrator.tooltip.2"))
            .tooltips(Component.translatable("mbe.multiblock.dimension_penetrator.tooltip.3"))
            .tooltips(Component.translatable("mbe.multiblock.dimension_penetrator.tooltip.4"))
            .tooltips(Component.translatable("mbe.multiblock.dimension_penetrator.tooltip.5"))
            .tooltipBuilder((stack, components) -> components.add(Component.translatable("mbe.multiblock.laser_available.0").append(Component.translatable("mbe.multiblock.laser_available.1").withStyle(style -> style.withColor(TooltipHelper.RAINBOW_SLOW.getCurrent())))))            
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.dimension_penetrator")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("            AAAAAAA            ", "            BBB BBB            ", "             B   B             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("         AAAAAAAAAAAAA         ", "         BBBBBB BBBBBB         ", "            BBB BBB            ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("       AAAAAAAAAAAAAAAAA       ", "       BBBBBBBB BBBBBBBB       ", "         BBB B   B BBB         ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("      AAAAAAAAAAAAAAAAAAA      ", "      BBBBBB D   D BBBBBB      ", "       BB    B   B    BB       ", "             B   B             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("     AAAAAAAAAAAAAAAAAAAAA     ", "     BBBB             BBBB     ", "                               ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("    AAAAAAAAAAAAAAAAAAAAAAA    ", "    BBB                 BBB    ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("   AAAAAAAAAAAAAAAAAAAAAAAAA   ", "   BBB                   BBB   ", "                               ", "                               ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("  AAAAAAAAAAAAAAAAAAAAAAAAAAA  ", "  BBB         BBB         BBB  ", "   B                       B   ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("  AAAAAAAAAAAAAAAAAAAAAAAAAAA  ", "  BBB       BBEEEBB       BBB  ", "   B                       B   ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAAAAAA ", " BBB      BBEEFFFEEBB      BBB ", "  B                         B  ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             BDDDB             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             DBBBD             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle(" AAAAAAAAAAAAABBBAAAAAAAAAAAAA ", " BBB     BEEFFFFFFFEEB     BBB ", "  B                         B  ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "           DDB   BDD           ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "           DBB   BBD           ", "             BB BB             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle(" AAAAAAAAAAABBBBBBBAAAAAAAAAAA ", " BBB     BEFFFFFFFFFEB     BBB ", "  B                         B  ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "          D         D          ", "                               ", "                               ", "                               ", "                               ", "                               ", "          DB       BD          ", "              B B              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              D D              ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("AAAAAAAAAAABBBBBBBBBAAAAAAAAAAA", "BBB     BEFFFFFFFFFFFEB     BBB", " B          BB   BB          B ", "            BB   BB            ", "            BB   BB            ", "            BB   BB            ", "            BBDDDBB            ", "            BBBBBBB            ", "             BBBBB             ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              BDB              ", "              B B              ", "              B B              ", "          D   B B   D          ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "          B   B B   B          ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "             DDDDD             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("AAAAAAAAAAABBBBBBBBBAAAAAAAAAAA", "BBBD    BEFFFFFFFFFFFEB    DBBB", "BBBB        B     B        BBBB", " CCBB       B     B       BBCC ", "   CBB      B     B      BBC   ", "    CB      B     B      BC    ", "    CBB     B     B     BBC    ", "     CB     BDDDDDB     BC     ", "     CB     B     B     BC     ", "     CBB               BBC     ", "      CB               BC      ", "      CB               BC      ", "      CBB             BBC      ", "       CB             BC       ", "       CB             BC       ", "       CBB           BBC       ", "        CB           BC        ", "        CB           BC        ", "        CB           BC        ", "        CB     D     BC        ", "        CB           BC        ", "        CB           BC        ", "        CBB   B B   BBC        ", "         CB         BC         ", "         CB         BC         ", "         CB         BC         ", "         CB         BC         ", "         CB         BC         ", "         DB         BD         ", "          B         B          ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "            DDBBBDD            ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              DDD              ")
                    .aisle("AAAAAAAAAABBBBBBBBBBBAAAAAAAAAA", "BBB    BEFFFFFBBBFFFFFEB    BBB", " B            BBB            B ", "              BBB              ", "              BBB              ", "              BBB              ", "            D BBB D            ", "            BDBBBDB            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B BDB B            ", "            B B B B            ", "            B B B B            ", "         D  BBBDBBB  D         ", "            B B B B            ", "            B B B B            ", "            B B B B            ", "            B B B B            ", "            B B B B            ", "         B  B B B B  B         ", "          BBB B B BBB          ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           DDBBDBBDD           ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             DBBBD             ")
                    .aisle("AAAAAAAAAABBBBBHBBBBBAAAAAAAAAA", "       BEFFFFFBBBFFFFFEB       ", "              BGB              ", "              BGB              ", "              BGB              ", "              BGB              ", "            D BGB D            ", "            BDBIBDB            ", "            B     B            ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "            DDDIDDD            ", "                               ", "                               ", "         D    DID    D         ", "                               ", "                               ", "                               ", "                               ", "                               ", "         B           B         ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "            DBDIDBD            ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "             DBIBD             ")
                    .aisle("AAAAAAAAAABBBBBBBBBBBAAAAAAAAAA", "BBB    BEFFFFFBBBFFFFFEB    BBB", " B            BBB            B ", "              BcB              ", "              BBB              ", "              BBB              ", "            D BBB D            ", "            BDBBBDB            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B     B            ", "            B BDB B            ", "            B B B B            ", "            B B B B            ", "         D  BBBDBBB  D         ", "            B B B B            ", "            B B B B            ", "            B B B B            ", "            B B B B            ", "            B B B B            ", "         B  B B B B  B         ", "          BBB B B BBB          ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           CB B B BC           ", "           DDBBDBBDD           ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             CB BC             ", "             DBBBD             ")
                    .aisle("AAAAAAAAAAABBBBBBBBBAAAAAAAAAAA", "BBBD    BEFFFFFFFFFFFEB    DBBB", "BBBB        B     B        BBBB", " CCBB       B     B       BBCC ", "   CBB      B     B      BBC   ", "    CB      B     B      BC    ", "    CBB     B     B     BBC    ", "     CB     BDDDDDB     BC     ", "     CB     B     B     BC     ", "     CBB               BBC     ", "      CB               BC      ", "      CB               BC      ", "      CBB             BBC      ", "       CB             BC       ", "       CB             BC       ", "       CBB           BBC       ", "        CB           BC        ", "        CB           BC        ", "        CB           BC        ", "        CB     D     BC        ", "        CB           BC        ", "        CB           BC        ", "        CBB   B B   BBC        ", "         CB         BC         ", "         CB         BC         ", "         CB         BC         ", "         CB         BC         ", "         CB         BC         ", "         DB         BD         ", "          B         B          ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "            DDBBBDD            ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              DDD              ")
                    .aisle("AAAAAAAAAAABBBBBBBBBAAAAAAAAAAA", "BBB     BEFFFFFFFFFFFEB     BBB", " B          BB   BB         BB ", "            BB   BB            ", "            BB   BB            ", "            BB   BB            ", "            BBDDDBB            ", "            BBBBBBB            ", "             BBBBB             ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              BDB              ", "              B B              ", "              B B              ", "          D   B B   D          ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "          B   B B   B          ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "              B B              ", "             DDDDD             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle(" AAAAAAAAAAABBBBBBBAAAAAAAAAAA ", " BBB     BEFFFFFFFFFEB     BBB ", "  B                         B  ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "          D         D          ", "                               ", "                               ", "                               ", "                               ", "                               ", "          DB       BD          ", "              B B              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              C C              ", "              D D              ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle(" AAAAAAAAAAAAABBBAAAAAAAAAAAAA ", " BBB     BEEFFFFFFFEEB     BBB ", "  B                         B  ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "           DDB   BDD           ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "           DBB   BBD           ", "             BB BB             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAAAAAAAAAA ", " BBB      BBEEFFFEEBB      BBB ", "  B                         B  ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             BDDDB             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             DBBBD             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("  AAAAAAAAAAAAAAAAAAAAAAAAAAA  ", "  BBB       BBEEEBB       BBB  ", "   B                       B   ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("  AAAAAAAAAAAAAAAAAAAAAAAAAAA  ", "  BBB         BBB         BBB  ", "   B                       B   ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("   AAAAAAAAAAAAAAAAAAAAAAAAA   ", "   BBB                   BBB   ", "                               ", "                               ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("    AAAAAAAAAAAAAAAAAAAAAAA    ", "    BBB                 BBB    ", "                               ", "                               ", "             B   B             ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("     AAAAAAAAAAAAAAAAAAAAA     ", "     BBBB             BBBB     ", "                               ", "             B   B             ", "             B   B             ", "             C   C             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("      AAAAAAAAAAAAAAAAAAA      ", "      BBBBBB D   D BBBBBB      ", "       BB    B   B    BB       ", "             B   B             ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("       AAAAAAAAAAAAAAAAA       ", "       BBBBBBBB BBBBBBBB       ", "         BBB B   B BBB         ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("         AAAAAAAAAAAAA         ", "         BBBBBB BBBBBB         ", "            BBB BBB            ", "             C   C             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .aisle("            AAAAAAA            ", "            BBB BBB            ", "             B   B             ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ", "                               ")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(SUPER_STABLE_CONCRETE.get()))
                    .where('B', blocks(ENERGY_RESTRAINT_CASING.get()))
                    .where('C', blocks(STRUCTURAL_REINFORCED_PIPE_CASING.get()))
                    .where('D', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, QuantumAlloy).get()))
                    .where('E', blocks(DIMENSION_PROJECTOR_MK2.get()))
                    .where('F', blocks(ENERGY_RESTRAINT_CASING.get())
                            .or(abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.EXPORT_FLUIDS).setMaxGlobalLimited(5))
                            .or(abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(5))
                            .or(abilities(PartAbility.COMPUTATION_DATA_RECEPTION).setMaxGlobalLimited(1)))
                    .where('G', blocks(LASER_PASSTHROUGH_PIPE.get()))
                    .where('H', blocks(PartAbility.INPUT_LASER.getBlockRange(IV, OpV).toArray(Block[]::new))
                            .or(blocks(PartAbility.INPUT_ENERGY.getBlockRange(IV, OpV).toArray(Block[]::new))))
                    .where('I', blocks(ENERGY_FOCUS_LENS.get()))
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/energy_restraint_casing"), MultiBlock_Engineer.id("block/multiblock/dimension_penetrator"))
            .register();

    public static final MultiblockMachineDefinition STAR_TOWER = REGISTRATE.multiblock("star_tower", StarTower::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.STAR_TOWER)
            .recipeModifier(StarTower::recipeModifier, true)
            .appearanceBlock(COMPUTER_CASING)
            .tooltips(Component.translatable("mbe.multiblock.star_tower.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.star_tower.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.star_tower.tooltip.2"))
            .tooltips(Component.translatable("mbe.multiblock.star_tower.tooltip.3"))
            .tooltips(Component.translatable("mbe.multiblock.star_tower.tooltip.4"))
            .tooltips(Component.translatable("mbe.multiblock.star_tower.tooltip.5"))
            .tooltips(Component.translatable("mbe.multiblock.star_tower.computation.0"))
            .tooltips(Component.translatable("mbe.multiblock.star_tower.tooltip.6"))
            .tooltips(Component.translatable("mbe.multiblock.star_tower.tooltip.7"))
            .tooltips(Component.translatable("mbe.multiblock.star_tower.tooltip.8"))
            .tooltips(Component.translatable("mbe.multiblock.star_tower.tooltip.9"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.star_tower")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("      AAAAAAA      ", "      BBBBBBB      ", "      CCCCCCC      ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle("    AAAAAAAAAAA    ", "    BBCCCCCCCBB    ", "    CCCCCCCCCCC    ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle("   AAAAAAAAAAAAA   ", "   BCCCCCCCCCCCB   ", "   CCCCCCCCCCCCC   ", "       CCCCC       ", "       CCCCC       ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "       CCCCC       ", "       DDDDD       ", "       CCCCC       ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle("  AAAAAAAAAAAAAAA  ", "  BCCCCCCCCCCCCCB  ", "  CCCCCCCCCCCCCCC  ", "     CCCCCCCCC     ", "     CCCCCCCCC     ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "     CC     CC     ", "     DD  D  DD     ", "     CC     CC     ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle(" AAAAAAACACAAAAAAA ", " BCCCCCCCCCCCCCCCB ", " CCCCCCCCCCCCCCCCC ", "    CCCCCCCCCCC    ", "    CCCCCCCCCCC    ", "        C C        ", "        C C        ", "        C C        ", "                   ", "                   ", "                   ", "        C C        ", "        C C        ", "        C C        ", "                   ", "                   ", "                   ", "    C   C C   C    ", "    D   CDC   D    ", "    C   C C   C    ", "                   ", "                   ", "                   ", "        C C        ", "        C C        ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle(" AAAAAAACCCAAAAAAA ", " BCCCCCCCCCCCCCCCB ", " CCCCCCCCECCCCCCCC ", "   CCCCCCECCCCCC   ", "   CCCCCCECCCCCC   ", "       CCECC       ", "       CCECC       ", "       DCECD       ", "        BEB        ", "        BEB        ", "        BEB        ", "        BEB        ", "        BEB        ", "        BEB        ", "        BEB        ", "        BEB        ", "        BEB        ", "   C    BEB    C   ", "   D    BEB    D   ", "   C    BEB    C   ", "        BEB        ", "        BEB        ", "        BEB        ", "        BEB        ", "        C C        ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle("AAAAAAAACACAAAAAAAA", "BCCCCCCCCECCCCCCCCB", "CCCCCCCCC CCCCCCCCC", "   CCCCCC CCCCCC   ", "   CCCCCC CCCCCC   ", "      CCC CCC      ", "      CCC CCC      ", "      DDC CDD      ", "        C C        ", "        C C        ", "        C C        ", "        C C        ", "        C C        ", "        C C        ", "        C C        ", "        C C        ", "        C C        ", "   C    C C    C   ", "   D    C C    D   ", "   C    C C    C   ", "        C C        ", "        C C        ", "        C C        ", "        C C        ", "        C C        ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle("AAAAAAAAAAAAAAAAAAA", "BCCCCCCEEEEECCCCCCB", "CCCCCCC     CCCCCCC", "  CCCCC     CCCCC  ", "  CCCCC     CCCCC  ", "     CC     CC     ", "     CC     CC     ", "     DD     DD     ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "  C             C  ", "  D             D  ", "  C             C  ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle("AAAACCCACCCACCCAAAA", "BCCCCCCEEEEECCCCCCB", "CCCCCCC CFC CCCCCCC", "  CCCCC CFC CCCCC  ", "  CCCCC CFC CCCCC  ", "    CCC CFC CCC    ", "    CCC CFC CCC    ", "    CCC CFC CCC    ", "     BC CFC CB     ", "     BC CFC CB     ", "     BC CFC CB     ", "    CBC CFC CBC    ", "    CBC CFC CBC    ", "    CBC CFC CBC    ", "     BC CFC CB     ", "     BC CFC CB     ", "     BC CFC CB     ", "  C CBC CFC CBC C  ", "  D CBC CFC CBC D  ", "  C CBC CFC CBC C  ", "     BC CFC CB     ", "     BC CFC CB     ", "     BC CFC CB     ", "    CBC CFC CBC    ", "    CCC CFC CCC    ", "        CFC        ", "        CFC        ", "        CFC        ", "        CFC        ", "        CFC        ", "        CFC        ", "        CFC        ", "        CFC        ", "        CFC        ", "        EEE        ")
                    .aisle("AAAAACAACCCAACAAAAA", "BCCCCCEEEEEEECCCCCB", "CCCCCE  GHG  ECCCCC", "  CCCE  GHG  ECCC  ", "  CCCE  GHG  ECCC  ", "     E  GHG  E     ", "     E  GHG  E     ", "     E  GHG  E     ", "     E  GHG  E     ", "     E  GHG  E     ", "     E  GHG  E     ", "     E  GHG  E     ", "     E  GHG  E     ", "     E  GHG  E     ", "     E  GHG  E     ", "     E  GHG  E     ", "     E  GHG  E     ", "  C  E  GHG  E  C  ", "  DDDE  GHG  EDDD  ", "  C  E  GHG  E  C  ", "     E  GHG  E     ", "     E  GHG  E     ", "     E  GHG  E     ", "     E  GHG  E     ", "        GHG        ", "        GHG        ", "        GHG        ", "        GHG        ", "        GHG        ", "        GHG        ", "        GHG        ", "        GHG        ", "        GHG        ", "        GHG        ", "        EEE        ")
                    .aisle("AAAACCCACCCACCCAAAA", "BCCCCCCEEEEECCCCCCB", "CCCCCCC CFC CCCCCCC", "  CCCCC CFC CCCCC  ", "  CCCCC CFC CCCCC  ", "    CCC CFC CCC    ", "    CCC CFC CCC    ", "    CCC CFC CCC    ", "     BC CFC CB     ", "     BC CFC CB     ", "     BC CFC CB     ", "    CBC CFC CBC    ", "    CBC CFC CBC    ", "    CBC CFC CBC    ", "     BC CFC CB     ", "     BC CFC CB     ", "     BC CFC CB     ", "  C CBC CFC CBC C  ", "  D CBC CFC CBC D  ", "  C CBC CFC CBC C  ", "     BC CFC CB     ", "     BC CFC CB     ", "     BC CFC CB     ", "    CBC CFC CBC    ", "    CCC CFC CCC    ", "        CFC        ", "        CFC        ", "        CFC        ", "        CFC        ", "        CFC        ", "        CFC        ", "        CFC        ", "        CFC        ", "        CFC        ", "        EEE        ")
                    .aisle("AAAAAAAAAAAAAAAAAAA", "BCCCCCCEEEEECCCCCCB", "CCCCCCC     CCCCCCC", "  CCCCC     CCCCC  ", "  CCCCC     CCCCC  ", "     CC     CC     ", "     CC     CC     ", "     DD     DD     ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "  C             C  ", "  D             D  ", "  C             C  ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle("AAAAAAAACACAAAAAAAA", "BCCCCCCCCECCCCCCCCB", "CCCCCCCCC CCCCCCCCC", "   CCCCCC CCCCCC   ", "   CCCCCC CCCCCC   ", "      CCC CCC      ", "      CCC CCC      ", "      DDC CDD      ", "        C C        ", "        C C        ", "        C C        ", "        C C        ", "        C C        ", "        C C        ", "        C C        ", "        C C        ", "        C C        ", "   C    C C    C   ", "   D    C C    D   ", "   C    C C    C   ", "        C C        ", "        C C        ", "        C C        ", "        C C        ", "        C C        ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle(" AAAAAAACCCAAAAAAA ", " BCCCCCCCCCCCCCCCB ", " CCCCCCCCECCCCCCCC ", "   CCCCCCECCCCCC   ", "   CCCCCCECCCCCC   ", "       CCECC       ", "       CCECC       ", "       DCECD       ", "        BEB        ", "        BEB        ", "        BEB        ", "        BEB        ", "        BEB        ", "        BEB        ", "        BEB        ", "        BEB        ", "        BEB        ", "   C    BEB    C   ", "   D    BEB    D   ", "   C    BEB    C   ", "        BEB        ", "        BEB        ", "        BEB        ", "        BEB        ", "        C C        ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle(" AAAAAAACACAAAAAAA ", " BCCCCCCCCCCCCCCCB ", " CCCCCCCCCCCCCCCCC ", "    CCCCCCCCCCC    ", "    CCCCCCCCCCC    ", "        C C        ", "        CcC        ", "        C C        ", "                   ", "                   ", "                   ", "        C C        ", "        C C        ", "        C C        ", "                   ", "                   ", "                   ", "    C   C C   C    ", "    D   CDC   D    ", "    C   C C   C    ", "                   ", "                   ", "                   ", "        C C        ", "        C C        ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle("  AAAAAAAAAAAAAAA  ", "  BCCCCCCCCCCCCCB  ", "  CCCCCCCCCCCCCCC  ", "     CCCCCCCCC     ", "     CCCCCCCCC     ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "     CC     CC     ", "     DD  D  DD     ", "     CC     CC     ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle("   AAAAAAAAAAAAA   ", "   BCCCCCCCCCCCB   ", "   CCCCCCCCCCCCC   ", "       CCCCC       ", "       CCCCC       ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "       CCCCC       ", "       DDDDD       ", "       CCCCC       ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle("    AAAAAAAAAAA    ", "    BBCCCCCCCBB    ", "    CCCCCCCCCCC    ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .aisle("      AAAAAAA      ", "      BBBBBBB      ", "      CCCCCCC      ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ", "                   ")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(SUPER_STABLE_CONCRETE.get()))
                    .where('B', blocks(ADVANCED_COMPUTER_CASING.get()))
                    .where('C', blocks(COMPUTER_CASING.get())
                            .or(abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.IMPORT_FLUIDS_1X).setMaxGlobalLimited(2))
                            .or(abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.EXPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.COMPUTATION_DATA_TRANSMISSION).setExactLimit(1)))
                    .where('D', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, CosmicNeutronium).get()))
                    .where('E', blocks(HIGH_POWER_CASING.get()))
                    .where('F', blocks(INFINITY_REINFORCED_BOROSILICATE_GLASS.get()))
                    .where('G', blocks(COMPUTER_HEAT_VENT.get()))
                    .where('H', blocks(HPCA_ULTIMATE_COMPUTATION_COMPONENT.get()))
                    .build())
            .sidedWorkableCasingRenderer("block/casings/hpca/computer_casing", GTCEu.id("block/multiblock/hpca"))
            .register();

    public static final MultiblockMachineDefinition WARPING_STATION = REGISTRATE.multiblock("warping_station", WarpingStation::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.WARPING_STATION)
            .appearanceBlock(WARPING_STATION_CASING)
            .tooltips(Component.translatable("mbe.multiblock.warping_station.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.circuit_set_1"))
            .tooltips(Component.translatable("mbe.multiblock.warping_station.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.warping_station.tooltip.2"))
            .tooltips(Component.translatable("mbe.multiblock.warping_station.tooltip.3"))
            .tooltips(Component.translatable("mbe.multiblock.warping_station.tooltip.4"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.warping_station")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("     AAAAA     ", "     AAAAA     ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "     AAAAA     ", "     AAAAA     ")
                    .aisle("   AAAAAAAAA   ", "   AABBBBBAA   ", "     AAAAA     ", "     CCACC     ", "     AAAAA     ", "      BAB      ", "      BAB      ", "      BAB      ", "     AAAAA     ", "   AABBBBBAA   ", "   AAAAAAAAA   ")
                    .aisle("  AAAAAAAAAAA  ", "  ABBBBBBBBBA  ", "   AA     AA   ", "   CC     CC   ", "   AA     AA   ", "               ", "               ", "               ", "   AA     AA   ", "  ABBBBBBBBBA  ", "  AAAAAAAAAAA  ")
                    .aisle(" AAAAAAAAAAAAA ", " ABBBAAAAABBBA ", "  A         A  ", "  C         C  ", "  A         A  ", "               ", "               ", "               ", "  A         A  ", " ABBBAAAAABBBA ", " AAAAAAAAAAAAA ")
                    .aisle(" AAAAAAAAAAAAA ", " ABBAAAAAAABBA ", "  A         A  ", "  C         C  ", "  A         A  ", "               ", "               ", "               ", "  A         A  ", " ABBAAAAAAABBA ", " AAAAAAAAAAAAA ")
                    .aisle("AAAAAAAAAAAAAAA", "ABBAAAAAAAAABBA", " A    AAA    A ", " C    ACA    C ", " A    ACA    A ", "      ACA      ", "      ACA      ", "      ACA      ", " A    AAA    A ", "ABBAAAAAAAAABBA", "AAAAAAAAAAAAAAA")
                    .aisle("AAAAAAAAAAAAAAA", "ABBAAAAAAAAABBA", " A   A   A   A ", " C   A   A   C ", " A   A   A   A ", " B   A   A   B ", " B   A   A   B ", " B   A   A   B ", " A   AAAAA   A ", "ABBAAAAAAAAABBA", "AAAAAAAAAAAAAAA")
                    .aisle("AAAAAAAAAAAAAAA", "ABBAAAAAAAAABBA", " A   A D A   A ", " A   C D C   A ", " A   C D C   A ", " A   C D C   A ", " A   C D C   A ", " A   C D C   A ", " A   AAAAA   A ", "ABBAAAAAAAAABBA", "AAAAAAAAAAAAAAA")
                    .aisle("AAAAAAAAAAAAAAA", "ABBAAAAAAAAABBA", " A   A   A   A ", " C   A   A   C ", " A   A   A   A ", " B   A   A   B ", " B   A   A   B ", " B   A   A   B ", " A   AAAAA   A ", "ABBAAAAAAAAABBA", "AAAAAAAAAAAAAAA")
                    .aisle("AAAAAAAAAAAAAAA", "ABBAAAAAAAAABBA", " A    AAA    A ", " C    AcA    C ", " A    ACA    A ", "      ACA      ", "      ACA      ", "      ACA      ", " A    AAA    A ", "ABBAAAAAAAAABBA", "AAAAAAAAAAAAAAA")
                    .aisle(" AAAAAAAAAAAAA ", " ABBAAAAAAABBA ", "  A         A  ", "  C         C  ", "  A         A  ", "               ", "               ", "               ", "  A         A  ", " ABBAAAAAAABBA ", " AAAAAAAAAAAAA ")
                    .aisle(" AAAAAAAAAAAAA ", " ABBBAAAAABBBA ", "  A         A  ", "  C         C  ", "  A         A  ", "               ", "               ", "               ", "  A         A  ", " ABBBAAAAABBBA ", " AAAAAAAAAAAAA ")
                    .aisle("  AAAAAAAAAAA  ", "  ABBBBBBBBBA  ", "   AA     AA   ", "   CC     CC   ", "   AA     AA   ", "               ", "               ", "               ", "   AA     AA   ", "  ABBBBBBBBBA  ", "  AAAAAAAAAAA  ")
                    .aisle("   AAAAAAAAA   ", "   AABBBBBAA   ", "     AAAAA     ", "     CCACC     ", "     AAAAA     ", "      BAB      ", "      BAB      ", "      BAB      ", "     AAAAA     ", "   AABBBBBAA   ", "   AAAAAAAAA   ")
                    .aisle("     AAAAA     ", "     AAAAA     ", "               ", "               ", "               ", "               ", "               ", "               ", "               ", "     AAAAA     ", "     AAAAA     ")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(WARPING_STATION_CASING.get())
                            .or(abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(1)))
                    .where('B', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, CosmicNeutronium).get()))
                    .where('C', blocks(FUSION_GLASS.get()))
                    .where('D', blocks(MATERIAL_BLOCKS.get(TagPrefix.block, Dilithium).get()))
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/warping_station_casing"), MultiBlock_Engineer.id("block/multiblock/warp_station"))
            .register();

    public static final MultiblockMachineDefinition LARGE_ELEMENT_REPLECATOR = REGISTRATE.multiblock("large_element_replicator", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.LARGE_ELEMENT_REPLICATOR)
            .recipeModifiers((machine, recipe) -> MBERecipeModifiers.accurateParallels(machine, recipe, 8), GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .appearanceBlock(ELEMENT_CONSTRAINT_CASING)
            .tooltips(Component.translatable("mbe.multiblock.large_element_replicator.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.large_element_replicator.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.large_element_replicator.parallel.0"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.large_element_replicator")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("               ", "      AAA      ", "               ")
                    .aisle("      AAA      ", "    AA   AA    ", "      BBB      ")
                    .aisle("    AA   AA    ", "   A  AAA  A   ", "    AA   AA    ")
                    .aisle("   A       A   ", "  A AA   AA A  ", "   A       A   ")
                    .aisle("  A         A  ", " A A       A A ", "  A         A  ")
                    .aisle("  A         A  ", " A A       A A ", "  A         A  ")
                    .aisle(" A           A ", "A A         A A", " B           B ")
                    .aisle(" A           A ", "A A         A A", " B           B ")
                    .aisle(" A           A ", "A A         A A", " B           B ")
                    .aisle("  A         A  ", " A A       A A ", "  A         A  ")
                    .aisle("  A         A  ", " A A       A A ", "  A         A  ")
                    .aisle("   A       A   ", "  A AA   AA A  ", "   A       A   ")
                    .aisle("    AA   AA    ", "   A  AAA  A   ", "    AA   AA    ")
                    .aisle("      AAA      ", "    AA   AA    ", "      BBB      ")
                    .aisle("               ", "      AcA      ", "               ")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(ELEMENT_CONSTRAINT_CASING.get())
                            .or(abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.EXPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where('B', blocks(MASS_EXPANSION_SUPPRESSION_GLASS.get()))
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/element_constraint_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    public static final MultiblockMachineDefinition SPACE_CIRCUIT_ASSEMBLY_LINE = REGISTRATE.multiblock("space_circuit_assembly_line", (holder) -> new SpaceAssemblyMachine(holder, "SAMTier"))
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeTypes(GTRecipeTypes.CIRCUIT_ASSEMBLER_RECIPES, MBERecipeTypes.SPACE_CIRCUIT_ASSEMBLY_LINE)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, SpaceAssemblyMachine::recipeModifier)
            .appearanceBlock(SPACE_ASSEMBLY_CASING)
            .tooltips(Component.translatable("mbe.multiblock.space_assembly_machine.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.space_assembly_machine.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.space_assembly_machine.tooltip.2"))
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltipBuilder((stack, components) -> components.add(Component.translatable("mbe.multiblock.laser_available.0").append(Component.translatable("mbe.multiblock.laser_available.1").withStyle(style -> style.withColor(TooltipHelper.RAINBOW_SLOW.getCurrent())))))            
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_2.tooltip",
                    Component.translatable("gtceu.circuit_assembler"), Component.translatable("gtceu.space_circuit_assembly_line")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAA", "AAA", "AAA", "AAA", "AAA", "AAA")
                    .aisle("AAA", "AAA", "AAA", "AAA", "AAA", "AAA")
                    .aisle("AAA", "AAA", "AAA", "AAA", "AAA", "AAA")
                    .aisle("AAA", "B B", "B B", "AAA", "DCD", "AAA")
                    .aisle("AAA", "   ", "   ", "AAA", "DCD", "AAA")
                    .aisle("AAA", "B B", "B B", "AAA", "DCD", "AAA")
                    .aisle("AAA", "   ", "   ", "AAA", "DCD", "AAA")
                    .aisle("AAA", "B B", "B B", "AAA", "DCD", "AAA")
                    .aisle("AAA", "   ", "   ", "AAA", "DCD", "AAA")
                    .aisle("AAA", "B B", "B B", "AAA", "DCD", "AAA")
                    .aisle("AAA", "   ", "   ", "AAA", "DCD", "AAA")
                    .aisle("AAA", "B B", "B B", "AAA", "DCD", "AAA")
                    .aisle("AAA", "   ", "   ", "AAA", "DCD", "AAA")
                    .aisle("AAA", "B B", "B B", "AAA", "DCD", "AAA")
                    .aisle("AAA", "   ", "   ", "AAA", "DCD", "AAA")
                    .aisle("AAA", "B B", "B B", "AAA", "DCD", "AAA")
                    .aisle("AAA", "   ", "   ", "AAA", "DCD", "AAA")
                    .aisle("AAA", "B B", "B B", "AAA", "DCD", "AAA")
                    .aisle("AAA", "   ", "   ", "AAA", "DCD", "AAA")
                    .aisle("AAA", "B B", "B B", "AAA", "DCD", "AAA")
                    .aisle("AAA", "   ", "   ", "AAA", "DCD", "AAA")
                    .aisle("AAA", "B B", "B B", "AAA", "DCD", "AAA")
                    .aisle("AAA", "   ", "   ", "AAA", "DCD", "AAA")
                    .aisle("AAA", "B B", "B B", "AAA", "DCD", "AAA")
                    .aisle("AAA", "   ", "   ", "AAA", "DCD", "AAA")
                    .aisle("AAA", "B B", "B B", "AAA", "DCD", "AAA")
                    .aisle("AAA", "   ", "   ", "AAA", "DCD", "AAA")
                    .aisle("AAA", "B B", "B B", "AAA", "DCD", "AAA")
                    .aisle("AAA", "   ", "   ", "AAA", "DCD", "AAA")
                    .aisle("AAA", "B B", "B B", "AAA", "DCD", "AAA")
                    .aisle("AAA", "   ", "   ", "AAA", "DCD", "AAA")
                    .aisle("AAA", "B B", "B B", "AAA", "DCD", "AAA")
                    .aisle("AAA", "AAA", "AAA", "AAA", "AAA", "AAA")
                    .aisle("AAA", "AAA", "AAA", "AAA", "AAA", "AAA")
                    .aisle("AAA", "AAA", "AcA", "AAA", "AAA", "AAA")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(SPACE_ASSEMBLY_CASING.get())
                            .or(abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1)))
                    .where('B', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, StructuralSteel800).get()))
                    .where('C', MBEPredicates.CasingTierBlock(SAMMap, "SAMTier"))
                    .where('D', blocks(NEUTRONIUM_REINFORCED_BOROSILICATE_GLASS.get()))
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/space_assembly_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    public static final MultiblockMachineDefinition SPACE_ASSEMBLY_PLANT = REGISTRATE.multiblock("space_assembly_plant", (holder) -> new SpaceAssemblyMachine(holder, "SAMTier"))
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeTypes(GTRecipeTypes.ASSEMBLER_RECIPES, GTRecipeTypes.ASSEMBLY_LINE_RECIPES, MBERecipeTypes.SPACE_ASSEMBLY_PLANT)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, SpaceAssemblyMachine::recipeModifier)
            .appearanceBlock(SPACE_ASSEMBLY_CASING)
            .tooltips(Component.translatable("mbe.multiblock.space_assembly_machine.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.space_assembly_machine.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.space_assembly_machine.tooltip.2"))
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltipBuilder((stack, components) -> components.add(Component.translatable("mbe.multiblock.laser_available.0").append(Component.translatable("mbe.multiblock.laser_available.1").withStyle(style -> style.withColor(TooltipHelper.RAINBOW_SLOW.getCurrent())))))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_3.tooltip",
                    Component.translatable("gtceu.assembler"), Component.translatable("gtceu.assembly_line"), Component.translatable("gtceu.space_assembly_plant")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAAAAAAAAAAAAAAAA", "ABBBBBBBBBBBBBBBBBA", "AAAAAAAAAAAAAAAAAAA", "ACCCCCCCCCCCCCCCCCA", "AAAAAAAAAAAAAAAAAAA", "ABBBBBBBBBBBBBBBBBA", "AAAAAAAAAAAAAAAAAAA")
                    .aisle("AAAAAAAAAAAAAAAAAAA", "AADDDDDDDDDDDDDDDAA", "AA               AA", "AA               AA", "AA               AA", "AAEEEEEEEEEEEEEEEAA", "AAAAAAAAAAAAAAAAAAA")
                    .aisle("       AAAAA       ", "AAAAAAAAAAAAAAAAAAA", " AAAAAAAAAAAAAAAAA ", " F               F ", " AGGGGGGGGGGGGGGGA ", "ACCCCCCCCCCCCCCCCCA", "                   ")
                    .aisle("       AAAAA       ", "AAAAAAAAAAAAAAAAAAA", " AAAAAAAAAAAAAAAAA ", " F               F ", " AHHHHHHHHHHHHHHHA ", "AAAAAAAAAAAAAAAAAAA", "                   ")
                    .aisle("       AAAAA       ", "AAAAAAAAAAAAAAAAAAA", " AAAAAAAAAAAAAAAAA ", " F               F ", " AGGGGGGGGGGGGGGGA ", "ACCCCCCCCCCCCCCCCCA", "                   ")
                    .aisle("AAAAAAAAAAAAAAAAAAA", "AADDDDDDDDDDDDDDDAA", "AA    EHAHAHE    AA", "AA    EHAHAHE    AA", "AA    EHAHAHE    AA", "AAEEEEEEEEEEEEEEEAA", "AAAAAAAAAAAAAAAAAAA")
                    .aisle("AAAAAAAAAAAAAAAAAAA", "ABBBBBAAAAAAABBBBBA", "AAAAAAAAAAAAAAAAAAA", "AFFFFFAAAAAAAFFFFFA", "AAAAAAAAAAAAAAAAAAA", "ABBBBBAAAAAAABBBBBA", "AAAAAAAAAAAAAAAAAAA")
                    .aisle("                   ", "       AAAAA       ", "       AAAAA       ", "       AAcAA       ", "       AAAAA       ", "       AAAAA       ", "                   ")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(SPACE_ASSEMBLY_CASING.get())
                            .or(abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.OPTICAL_DATA_RECEPTION).setMaxGlobalLimited(4))
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1)))
                    .where('B', blocks(FILTER_CASING.get()))
                    .where('C', MBEPredicates.CasingTierBlock(SAMMap, "SAMTier"))
                    .where('D', blocks(CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('E', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, StructuralSteel800).get()))
                    .where('F', blocks(NEUTRONIUM_REINFORCED_BOROSILICATE_GLASS.get()))
                    .where('G', blocks(CASING_GRATE.get()))
                    .where('H', blocks(CASING_ASSEMBLY_CONTROL.get()))
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/space_assembly_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    public static final MultiblockMachineDefinition RADIOACTIVE_INCUBATOR = REGISTRATE.multiblock("radioactive_incubator", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.RADIOACTIVE_INCUBATOR)
            .recipeModifiers((machine, recipe) -> MBERecipeModifiers.accurateParallels(machine, recipe, 256), GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .appearanceBlock(CASING_STAINLESS_CLEAN)
            .tooltips(Component.translatable("mbe.multiblock.radioactive_incubator.parallel.0"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.radioactive_incubator")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("AAAAA", "B   B", "B   B", "B   B", "B   B", "B   B", "DDDDD")
                    .aisle("ADDDA", " CCC ", " CCC ", " CCC ", " CCC ", " CCC ", "DDDDD")
                    .aisle("ADDDA", " C C ", " C C ", " C C ", " C C ", " C C ", "DDDDD")
                    .aisle("ADDDA", " CCC ", " CCC ", " CCC ", " CCC ", " CCC ", "DDDDD")
                    .aisle("AAcAA", "B   B", "B   B", "B   B", "B   B", "B   B", "DDDDD")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(CASING_STAINLESS_CLEAN.get())
                            .or(abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(2))
                            .or(abilities(PartAbility.IMPORT_FLUIDS_4X).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.EXPORT_FLUIDS_1X).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1))
                            .or(abilities(MBEPartAbility.RADIOACTIVE_SOURCE_HATCH).setExactLimit(1))
                            .or(abilities(MBEPartAbility.INCUBATOR_INGREDIENT_HATCH).setExactLimit(1)))
                    .where('B', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, NaquadahAlloy).get()))
                    .where('C', blocks(CASING_TEMPERED_GLASS.get()))
                    .where('D', blocks(CASING_STAINLESS_CLEAN.get()))
                    .build())
            .workableCasingRenderer(GTCEu.id("block/casings/solid/machine_casing_clean_stainless_steel"), GTCEu.id("block/multiblock/large_chemical_reactor"))
            .register();

    public static final MultiblockMachineDefinition STAR_VEIN_DIGGER = REGISTRATE.multiblock("star_vein_digger", StarVeinDigger::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.STAR_VEIN_DIGGER)
            .recipeModifier(StarVeinDigger::recipeModifier, true)
            .appearanceBlock(NAQUADAH_ALLOY_CASING)
            .tooltips(Component.translatable("mbe.multiblock.star_vein_digger.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.circuit_set_1"))
            .tooltips(Component.translatable("mbe.multiblock.star_vein_digger.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.star_vein_digger.tooltip.2"))
            .tooltips(Component.translatable("mbe.multiblock.star_vein_digger.tooltip.3"))
            .tooltips(Component.translatable("mbe.multiblock.star_vein_digger.tooltip.4"))
            .tooltips(Component.translatable("mbe.multiblock.star_vein_digger.tooltip.5"))
            .tooltips(Component.translatable("mbe.multiblock.star_vein_digger.tooltip.6"))
            .tooltips(Component.translatable("mbe.multiblock.star_vein_digger.tooltip.7"))
            .tooltips(Component.translatable("mbe.multiblock.star_vein_digger.tooltip.8"))
            .tooltipBuilder((stack, components) -> components.add(Component.translatable("mbe.multiblock.laser_available.0").append(Component.translatable("mbe.multiblock.laser_available.1").withStyle(style -> style.withColor(TooltipHelper.RAINBOW_SLOW.getCurrent())))))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.star_vein_digger")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("               AAAAAAAAA               ", "                   B                   ", "                   B                   ", "                   B                   ", "                 AAAAA                 ", "                                       ", "                                       ", "                 AAAAA                 ", "                  AAA                  ", "                  ADA                  ", "                  ADA                  ", "                  ADA                  ", "                  ADA                  ", "                  ADA                  ", "                  ADA                  ", "                  ADA                  ", "                  ADA                  ", "                  AAA                  ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                  AAA                  ", "                  AAA                  ", "                  AAA                  ", "                                       ", "                                       ")
                    .aisle("            AAACCAAAAACCAAA            ", "                 ADADA                 ", "                  DAD                  ", "                  DAD                  ", "               AAAAAAAAA               ", "                 ADDDA                 ", "                 ADDDA                 ", "               AAAAAAAAA               ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                  AAA                  ", "                  AAA                  ", "                  AAA                  ", "                  AAA                  ", "                  AAA                  ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                  AAA                  ", "                  AAA                  ")
                    .aisle("          AACCCAAAAAAAAACCCAA          ", "              E  AAAAA  E              ", "              E  BAAAB  E              ", "              E  BAAAB  E              ", "            AAAAAAAAAAAAAAA            ", "               AAAAAAAAA               ", "               AAAAAAAAA               ", "            AAAAAAAAAAAAAAA            ", "                 AAAAA                 ", "                 FAAAF                 ", "                 FAAAF                 ", "                 FAAAF                 ", "                 FAAAF                 ", "                 FAAAF                 ", "                 FAAAF                 ", "                 FAAAF                 ", "                 FAAAF                 ", "                 AAAAA                 ", "                  AAA                  ", "                  AAA                  ", "                  AAA                  ", "                  AAA                  ", "                  AAA                  ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                  AAA                  ", "                  AAA                  ")
                    .aisle("        AACCAAAFFFFFFFFFAAACCAA        ", "                 ADADA                 ", "                  DAD                  ", "                  DAD                  ", "          AAAAAAAAAAAAAAAAAAA          ", "            AAAAAAAAAAAAAAA            ", "            AAAAAAAAAAAAAAA            ", "          AAAAAAAAAAAAAAAAAAA          ", "                 AAAAA                 ", "                 FAAAF                 ", "                 FAAAF                 ", "                 FAAAF                 ", "                 FAAAF                 ", "                 FAAAF                 ", "                 FAAAF                 ", "                 FAAAF                 ", "                 FAAAF                 ", "                 AAAAA                 ", "                  AAA                  ", "                  AAA                  ", "                  AAA                  ", "                  AAA                  ", "                  AAA                  ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                  AAA                  ", "                  AAA                  ")
                    .aisle("       ACCAAFFFAAAAAAAAAFFFAACCA       ", "                   B                   ", "                   B                   ", "                   B                   ", "        AAAAAAA  AAAAA  AAAAAAA        ", "          AAAAA  AAAAA  AAAAA          ", "          AAAAA  AAAAA  AAAAA          ", "        AAAAAAA  AAAAA  AAAAAAA        ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                  AAA                  ", "                  AAA                  ", "                  AAA                  ", "                  AAA                  ", "                  AAA                  ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                  AAA                  ", "                  AAA                  ")
                    .aisle("      ACAAFFAAA   AEA   AAAFFAACA      ", "       E           A           E       ", "       E           A           E       ", "       E           A           E       ", "       AAAAA       A       AAAAA       ", "        AAAA       A       AAAA        ", "        AAAA      AAA      AAAA        ", "       AAAAA      AAA      AAAAA       ", "                  AAA                  ", "                  AFA                  ", "                  AFA                  ", "                  AFA                  ", "                  AFA                  ", "                  AFA                  ", "                  AFA                  ", "                  AFA                  ", "                  AFA                  ", "                  AAA                  ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                  AAA                  ", "                  AAA                  ", "                  AAA                  ", "                   A                   ", "                                       ")
                    .aisle("     ACAFFAA      AEA      AAFFACA     ", "                                       ", "                                       ", "                                       ", "      AAAA                   AAAA      ", "       AAA                   AAA       ", "       AAA                   AAA       ", "      AAAA                   AAAA      ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                   A                   ", "                  AAA                  ", "                   A                   ", "                                       ")
                    .aisle("    ACAFAA        AEA        AAFACA    ", "     E                           E     ", "     E                           E     ", "     E                           E     ", "     AAA                       AAA     ", "      AA                       AA      ", "      AA                       AA      ", "     AAA                       AAA     ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                   A                   ", "                  AAA                  ", "                   A                   ", "                                       ")
                    .aisle("   ACAFA          AEA          AFACA   ", "                                       ", "                                       ", "                                       ", "    AAA                         AAA    ", "     AA                         AA     ", "     AA                         AA     ", "    AAA                         AAA    ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                   A                   ", "                  AAA                  ", "                   A                   ", "                                       ")
                    .aisle("   ACAFA          AEA          AFACA   ", "                                       ", "                                       ", "                                       ", "    AAA                         AAA    ", "     AA                         AA     ", "     AA                         AA     ", "    AAA                         AAA    ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                   A                   ", "                  AAA                  ", "                   A                   ", "                                       ")
                    .aisle("  ACAFA           AEA           AFACA  ", "                                       ", "                                       ", "                                       ", "   AAA                           AAA   ", "    AA                           AA    ", "    AA                           AA    ", "   AAA                           AAA   ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                   A                   ", "                  AAA                  ", "                   A                   ", "                                       ")
                    .aisle("  ACAFA         AAAEAAA         AFACA  ", "                                       ", "                                       ", "                                       ", "   AAA                           AAA   ", "    AA                           AA    ", "    AA                           AA    ", "   AAA                           AAA   ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                   A                   ", "                  AAA                  ", "                   A                   ", "                                       ")
                    .aisle(" ACAFA         AAAAAAAAA         AFACA ", "                                       ", "                                       ", "                                       ", "  AAA                             AAA  ", "   AA                             AA   ", "   AA                             AA   ", "  AAA                             AAA  ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                   A                   ", "                  AAA                  ", "                   A                   ", "                                       ")
                    .aisle(" ACAFA        AAAAAAAAAAA        AFACA ", "                                       ", "                                       ", "                                       ", "  AAA                             AAA  ", "   AA                             AA   ", "   AA                             AA   ", "  AAA                             AAA  ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                   A                   ", "                  AAA                  ", "                   A                   ", "                                       ")
                    .aisle(" ACAFA       AAAA     AAAA       AFACA ", "  E                                 E  ", "  E                                 E  ", "  E                                 E  ", "  AAA                             AAA  ", "   AA                             AA   ", "   AA                             AA   ", "  AAA                             AAA  ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                   A                   ", "                  AAA                  ", "                   A                   ", "                                       ")
                    .aisle("ACAFA       AAAA       AAAA       AFACA", "                                       ", "                                       ", "                                       ", " AAA                               AAA ", "  AA                               AA  ", "  AA                               AA  ", " AAA                               AAA ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                   A                   ", "                  AAA                  ", "                   A                   ", "                                       ")
                    .aisle("ACAFA      AAAA   AAA   AAAA      AFACA", "                                       ", "                                       ", "                                       ", " AAA              A A              AAA ", "  AA                               AA  ", "  AA                               AA  ", " AAA                               AAA ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                  AAA                  ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                   A                   ", "                  AAA                  ", "                  AAA                  ", "                   A                   ")
                    .aisle("AAAFA      AAA   AAAAA   AAA      AFAAA", " AAA              AAA              AAA ", "  B               AAA               B  ", "  B               A A               B  ", "AAAAA            AA AA            AAAAA", " AAAA                             AAAA ", " AAAA                             AAAA ", "AAAAA                             AAAAA", " AAA               A               AAA ", "                  AAA                  ", "                   A                   ", "                                       ", "                                       ", "                                       ", "                  A A                  ", "                 AA AA                 ", "                  A A                  ", "                                       ", "                                       ", "                                       ", "                   A                   ", "                  AAA                  ", "                   A                   ", "                                       ", "                  AAA                  ", "                 AAAAA                 ", "                  AAA                  ", "                  AAA                  ")
                    .aisle("AAAFAAAAAAAAAA  AAGGGAA  AAAAAAAAAAFAAA", " DAD             AGGGA             DAD ", " DAD             AGGGA             DAD ", " DAD             AGGGA             DAD ", "AAAAA           AAGGGAA           AAAAA", " DAAA             GGG             AAAD ", " DAAA             GGG             AAAD ", "AAAAA             GGG             AAAAA", " AAA              GGG              AAA ", "                 AGGGA                 ", "                  GGG                  ", "                  GGG                  ", "                  GGG                  ", "                  GGG                  ", "                 AGGGA                 ", "                AAGGGAA                ", "                 AGGGA                 ", "                  GGG                  ", "                  GGG                  ", "                  GGG                  ", "                  GGG                  ", "                 AGGGA                 ", "                  GGG                  ", "                  AAA                  ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                  AAA                  ")
                    .aisle("AAAFAEEEEEEEAA  AAGHGAA  AAEEEEEEEAFAAA", "BAAAB            AGHGA            BAAAB", "BAAAB            AGHGA            BAAAB", "BAAAB             GHG             BAAAB", "AAAAA             GHG             AAAAA", " DAAA             GHG             AAAD ", " DAAA             GHG             AAAD ", "AAAAA             GHG             AAAAA", " AAA             AGHGA             AAA ", "                 AGHGA                 ", "                 AGHGA                 ", "                  GHG                  ", "                  GHG                  ", "                  GHG                  ", "                  GHG                  ", "                A GHG A                ", "                  GHG                  ", "                  GHG                  ", "                  GHG                  ", "                  GHG                  ", "                 AGHGA                 ", "                 AGHGA                 ", "                 AGHGA                 ", "                  AAA                  ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                  AAA                  ")
                    .aisle("AAAFAAAAAAAAAA  AAGGGAA  AAAAAAAAAAFAAA", " DAD             AGGGA             DAD ", " DAD             AGGGA             DAD ", " DAD             AGGGA             DAD ", "AAAAA           AAGGGAA           AAAAA", " DAAA             GGG             AAAD ", " DAAA             GGG             AAAD ", "AAAAA             GGG             AAAAA", " AAA              GGG              AAA ", "                 AGGGA                 ", "                  GGG                  ", "                  GGG                  ", "                  GGG                  ", "                  GGG                  ", "                 AGGGA                 ", "                AAGGGAA                ", "                 AGGGA                 ", "                  GGG                  ", "                  GGG                  ", "                  GGG                  ", "                  GGG                  ", "                 AGGGA                 ", "                  GGG                  ", "                  AAA                  ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                  AAA                  ")
                    .aisle("AAAFA      AAA   AAAAA   AAA      AFAAA", " AAA              AAA              AAA ", "  B               AAA               B  ", "  B               A A               B  ", "AAAAA            AA AA            AAAAA", " AAAA                             AAAA ", " AAAA                             AAAA ", "AAAAA                             AAAAA", " AAA               A               AAA ", "                  AAA                  ", "                   A                   ", "                                       ", "                                       ", "                                       ", "                  A A                  ", "                 AA AA                 ", "                  A A                  ", "                                       ", "                                       ", "                                       ", "                   A                   ", "                  AAA                  ", "                   A                   ", "                                       ", "                 AAAAA                 ", "                 AAAAA                 ", "                 AAAAA                 ", "                  AAA                  ")
                    .aisle("ACAFA      AAAA   AAA   AAAA      AFACA", "                                       ", "                                       ", "                                       ", " AAA              A A              AAA ", "  AA                               AA  ", "  AA                               AA  ", " AAA                               AAA ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                  AAA                  ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                  AAA                  ", "                 AAAAA                 ", "                  AAA                  ", "                  AAA                  ")
                    .aisle("ACAFA       AAAA       AAAA       AFACA", "                                       ", "                                       ", "                                       ", " AAA                               AAA ", "  AA                               AA  ", "  AA                               AA  ", " AAA                               AAA ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                  AAA                  ", "                  AAA                  ", "                                       ")
                    .aisle(" ACAFA       AAAA     AAAA       AFACA ", "  E                                 E  ", "  E                                 E  ", "  E                                 E  ", "  AAA                             AAA  ", "   AA                             AA   ", "   AA                             AA   ", "  AAA                             AAA  ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ")
                    .aisle(" ACAFA        AAAAAAAAAAA        AFACA ", "                                       ", "                                       ", "                                       ", "  AAA                             AAA  ", "   AA                             AA   ", "   AA                             AA   ", "  AAA                             AAA  ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ")
                    .aisle(" ACAFA         AAAAAAAAA         AFACA ", "                                       ", "                                       ", "                                       ", "  AAA                             AAA  ", "   AA                             AA   ", "   AA                             AA   ", "  AAA                             AAA  ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ")
                    .aisle("  ACAFA         AAAEAAA         AFACA  ", "                                       ", "                                       ", "                                       ", "   AAA                           AAA   ", "    AA                           AA    ", "    AA                           AA    ", "   AAA                           AAA   ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ")
                    .aisle("  ACAFA           AEA           AFACA  ", "                                       ", "                                       ", "                                       ", "   AAA                           AAA   ", "    AA                           AA    ", "    AA                           AA    ", "   AAA                           AAA   ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ")
                    .aisle("   ACAFA          AEA          AFACA   ", "                                       ", "                                       ", "                                       ", "    AAA                         AAA    ", "     AA                         AA     ", "     AA                         AA     ", "    AAA                         AAA    ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ")
                    .aisle("   ACAFA          AEA          AFACA   ", "                                       ", "                                       ", "                                       ", "    AAA                         AAA    ", "     AA                         AA     ", "     AA                         AA     ", "    AAA                         AAA    ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ")
                    .aisle("    ACAFAA        AEA        AAFACA    ", "     E                           E     ", "     E                           E     ", "     E                           E     ", "     AAA                       AAA     ", "      AA                       AA      ", "      AA                       AA      ", "     AAA                       AAA     ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ")
                    .aisle("     ACAFFAA      AEA      AAFFACA     ", "                                       ", "                                       ", "                                       ", "      AAAA                   AAAA      ", "       AAA                   AAA       ", "       AAA                   AAA       ", "      AAAA                   AAAA      ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ")
                    .aisle("      ACAAFFAAA   AEA   AAAFFAACA      ", "       E                       E       ", "       E                       E       ", "       E                       E       ", "       AAAAA               AAAAA       ", "        AAAA               AAAA        ", "        AAAA               AAAA        ", "       AAAAA               AAAAA       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ")
                    .aisle("       ACCAAFFFAAAAAAAAAFFFAACCA       ", "                   B                   ", "                   B                   ", "                   B                   ", "        AAAAAAA  AAAAA  AAAAAAA        ", "          AAAAA  AAAAA  AAAAA          ", "          AAAAA  AAAAA  AAAAA          ", "        AAAAAAA  AAAAA  AAAAAAA        ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ")
                    .aisle("        AACCAAAFFFFFFFFFAAACCAA        ", "                 AAAAA                 ", "                  AAA                  ", "                  AAA                  ", "          AAAAAAAAAAAAAAAAAAA          ", "            AAAAAAAAAAAAAAA            ", "            AAAAAAAAAAAAAAA            ", "          AAAAAAAAAAAAAAAAAAA          ", "                 AAAAA                 ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ")
                    .aisle("          AACCCAAAAAAAAACCCAA          ", "              E  AAAAA  E              ", "              E  BAAAB  E              ", "              E  BAAAB  E              ", "            AAAAAAAAAAAAAAA            ", "               AAAAAAAAA               ", "               AAAAAAAAA               ", "            AAAAAAAAAAAAAAA            ", "                 AAAAA                 ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ")
                    .aisle("            AAACCAAAAACCAAA            ", "                 AAAAA                 ", "                  AcA                  ", "                  AAA                  ", "               AAAAAAAAA               ", "                 ADDDA                 ", "                 ADDDA                 ", "               AAAAAAAAA               ", "                 AAAAA                 ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ")
                    .aisle("               AAAAAAAAA               ", "                                       ", "                                       ", "                                       ", "                 AAAAA                 ", "                                       ", "                                       ", "                 AAAAA                 ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ", "                                       ")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(NAQUADAH_ALLOY_CASING.get())
                            .or(abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(2))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where('B', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, NaquadahAlloy).get()))
                    .where('C', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, Polytetrafluoroethylene).get()))
                    .where('D', blocks(HEAT_VENT.get()))
                    .where('E', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, Neutronium).get()))
                    .where('F', blocks(NEUTRONIUM_CASING.get()))
                    .where('G', blocks(CASING_ATOMIC.get()))
                    .where('H', blocks(MINER_ACCELERATE_SLIDEWAY.get()))
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/naquadah_alloy_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    public final static MultiblockMachineDefinition DIMENSIONALLY_TRANSCENDENT_FIELD_COMPRESS_HAMMER = REGISTRATE.multiblock("dimensionally_transcendent_field_compress_hammer", DimensionallyTranscendentFieldCompressHammer::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.DIMENSIONALLY_TRANSCENDENT_FIELD_COMPRESS_HAMMER)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, DimensionallyTranscendentFieldCompressHammer::recipeModifier)
            .appearanceBlock(EXTREME_STRENGTH_COMPRESSED_EXPLOSIONPROOF_CASING)
            .tooltips(Component.translatable("mbe.multiblock.dtfch.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.dtfch.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.dtfch.tooltip.2"))
            .tooltips(Component.translatable("mbe.multiblock.dtfch.tooltip.3"))
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltipBuilder((stack, components) -> components.add(Component.translatable("mbe.multiblock.laser_available.0").append(Component.translatable("mbe.multiblock.laser_available.1").withStyle(style -> style.withColor(TooltipHelper.RAINBOW_SLOW.getCurrent())))))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.dimensionally_transcendent_field_compress_hammer")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle
                    .aisle("      AAAAAAAAAAA        ", "      AAAAAAAAAAA        ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("    AAAAAAAAAAAAAAA      ", "    AAAAAAAAAAAAAAA      ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "       AAA               ", "       AAACCCCCCC        ", "       AAA               ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("   AAAAAAAAAAAAAAAAA     ", "   AAAAAAAAAAAAAAAAA     ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "      AAAACCCCCCC        ", "      AAAAAAAAAAACCC     ", "      AAAACCCCCCC        ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("  AAAAAAAAAAAAAAAAAAA    ", "  AAAAAAAAAAAAAAAAAAA    ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "     AAAAA       CCC     ", "     AAAAACCCCCCCAAAC    ", "     AAAAA       CCC     ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("  AAAAAAAAAAAAAAAAAAA    ", "  AAAAAAAAAAAAAAAAAAA    ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "     AAAA           C    ", "     AAAA        CCCAC   ", "     AAAA           C    ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAA   ", " AAAAAAAAAAAAAAAAAAAAA   ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "     AAA             C   ", "     AAA            CAC  ", "     AAA             C   ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAA   ", " AAAAAAAAAAAAAAAAAAAAA   ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                     C   ", "                    CAC  ", "                     C   ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAA   ", " AAAAAAAAAAAAAAAAAAAAA   ", "     AAA                 ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "      F              C   ", "     FFF            CAC  ", "      F              C   ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAA  ", "AAAAAAAAAAAAAAAAAAAAAAA  ", "  AAAAAAAAAA             ", "     AAA                 ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "      F                  ", "     F F              C  ", "    F   F            CAC ", "     F F              C  ", "      F                  ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAA  ", "AAAAAAAAAAAAAAAAAAAAAAA  ", "  AAAAAAAAAAAAAAAAAAAA   ", "   AADDDAAA   AAAAAAA    ", "     GGG         AAA     ", "                   AA    ", "                    AA   ", "                    AA   ", "                     AA  ", "                     AA  ", "      F              AA  ", "     F F              AA ", "    F   F  ACAAACAAACAAAA", "   F     F ACAAACAAACAAAA", "    F   F  ACAAACAAACAAAA", "     F F              A  ", "      F              A   ", "                     A   ", "                     A   ", "                    A    ", "                    A    ", "                   A     ", "    AA           AA      ", "      AAA     AAA        ", "         AAAAA           ", "                         ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAA  ", "AAAAAAAAAAAAAAAAAAAAAAA  ", "  AAAAAAAAAAAABBBAAABAA  ", "   AADDDAAAAAAAAABBABAA  ", "     GGGAAA   AAAAABAA   ", "                 AAABA   ", "                   AABA  ", "                   AABA  ", "                    AABA ", "                    AABA ", "     FFF            AABA ", "    F   F            AABA", "   F     F ACAAACAAACAAAA", "   F  H  F ADDDDDDDDDAAAA", "   F     F ACAAACAAACAAAA", "    F   F            AAB ", "     FFF            AAB  ", "                    AAB  ", "                    AAB  ", "                   AAB   ", "                   AAB   ", "    AAA          AAAB    ", "   AAAAAA     AAAAAB     ", "    BBAAAAAAAAAAABB      ", "      BBBAAAAABBB        ", "         BBBBB           ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAA  ", "AAAAAAAAAAAAAAAAAAAAAAA  ", "  AAAAAAAAAAAAAAAAAAAA   ", "   AADDDAAA   AAAAAAA    ", "     GGG         AAA     ", "                   AA    ", "                    AA   ", "                    AA   ", "                     AA  ", "                     AA  ", "      F              AA  ", "     F F              AA ", "    F   F  ACAAACAAACAAAA", "   F     F ACAAACAAACAAAA", "    F   F  ACAAACAAACAAAA", "     F F              A  ", "      F              A   ", "                     A   ", "                     A   ", "                    A    ", "                    A    ", "                   A     ", "    AA           AA      ", "      AAA     AAA        ", "         AAAAA           ", "                         ")
                    .aisle("AAAAAAAAAAAAAAAAAAAAAAA  ", "AAAAAAAAAAAAAAAAAAAAAAA  ", "  AAAAAAAAAA             ", "     AAA                 ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "      F                  ", "     F F              C  ", "    F   F            CAC ", "     F F              C  ", "      F                  ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAA   ", " AAAAAAAAAAAAAAAAAAAAA   ", "     AAA                 ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "      F              C   ", "     FFF            CAC  ", "      F              C   ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAA   ", " AAAAAAAAAAAAAAAAAAAAA   ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                     C   ", "                    CAC  ", "                     C   ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle(" AAAAAAAAAAAAAAAAAAAAA   ", " AAAAAAAAAAAAAAAAAAAAA   ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "     AAA             C   ", "     AAA            CAC  ", "     AAA             C   ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("  AAAAAAAAAAAAAAAAAAA    ", "  AAAAAAAAAAAAAAAAAAA    ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "     AAAA           C    ", "     AAAA        CCCAC   ", "     AAAA           C    ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("  AAAAAAAAAAAAAAAAAAA    ", "  AAAAAAAAAAAAAAAAAAA    ", "         EEEEE           ", "         EEEEE           ", "         EEEEE           ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "     AAAAA       CCC     ", "     AAAAACCCCCCCAAAC    ", "     AAAAA       CCC     ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("   AAAAAAAAAAAAAAAAA     ", "   AAAAAAAAAAAAAAAAA     ", "         AAAAA           ", "         AAAAA           ", "         AAAAA           ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "      AAAACCCCCCC        ", "      AAAAAAAAAAACCC     ", "      AAAACCCCCCC        ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("    AAAAAAAAAAAAAAA      ", "    AAAAAAAAAAAAAAA      ", "         AAAAA           ", "         AAcAA           ", "         AAAAA           ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "       AAA               ", "       AAACCCCCCC        ", "       AAA               ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle("      AAAAAAAAAAA        ", "      AAAAAAAAAAA        ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ", "                         ")
                    .aisle
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(EXTREME_STRENGTH_COMPRESSED_EXPLOSIONPROOF_CASING.get()))
                    .where('B', blocks(SUPER_STABLE_CONCRETE.get()))
                    .where('C', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, Neutronium).get()))
                    .where('D', blocks(ENERGY_RESTRAINT_CASING.get()))
                    .where('E', blocks(EXTREME_STRENGTH_COMPRESSED_EXPLOSIONPROOF_CASING.get())
                            .or(abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.IMPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.COMPUTATION_DATA_RECEPTION).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where('F', blocks(NEUTRONIUM_REINFORCED_BOROSILICATE_GLASS.get()))
                    .where('G', blocks(MATERIAL_BLOCKS.get(TagPrefix.block, Neutronium).get()))
                    .where('H', blocks(DIMENSION_PROJECTOR_MK1.get()))
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/extreme_strength_compressed_explosionproof_casing"), GTCEu.id("block/multiblock/fusion_reactor"))
            .register();

    public static final MultiblockMachineDefinition PCB_FACTORY = REGISTRATE.multiblock("pcb_factory", PCBFactory::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.PCB_FACTORY)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, PCBFactory::recipeModifier)
            .appearanceBlock(PHOTOLITHOGRAPHIC_FRAMEWORK_CASING)
            .tooltips(Component.translatable("mbe.multiblock.pcb_factory.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.pcb_factory.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.pcb_factory.tooltip.2"))
            .tooltips(Component.translatable("mbe.multiblock.pcb_factory.tooltip.3"))
            .tooltips(Component.translatable("mbe.multiblock.pcb_factory.tooltip.4"))
            .tooltips(Component.translatable("mbe.multiblock.pcb_factory.tooltip.5"))
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.pcb_factory")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("ABBBBBA", "ABBBBBA", "ABBBBBA", "ABBBBBA", "A     A", "       ")
                    .aisle("BDDDDDB", "B     B", "B     B", "B     B", "BBBBBBB", "A     A")
                    .aisle("BDDDDDB", "C FFF C", "C     C", "B     B", "BBBBBBB", "A     A")
                    .aisle("BDDDDDB", "C FFF C", "C     C", "B     B", "BBBBBBB", "AAAAAAA")
                    .aisle("BDDDDDB", "C FFF C", "C     C", "B     B", "BEEEEEB", "A     A")
                    .aisle("BDDDDDB", "B     B", "B     B", "B     B", "BEEEEEB", "A     A")
                    .aisle("ABBcBBA", "AEEEEEA", "AEEEEEA", "AEEEEEA", "AAAAAAA", "       ")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, MaragingSteel300).get()))
                    .where('B', blocks(PHOTOLITHOGRAPHIC_FRAMEWORK_CASING.get())
                            .or(autoAbilities(definition.getRecipeTypes()))
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where('C', blocks(CASING_GRATE.get()))
                    .where('D', blocks(PLASTCRETE.get()))
                    .where('E', blocks(CASING_LAMINATED_GLASS.get()))
                    .where('F', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, PulsatingAlloy).get()))
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/photolithographic_framework_casing"), GTCEu.id("block/multiblock/assembly_line"))
            .register();

    public static final MultiblockMachineDefinition PRECISION_PHOTOLITHOGRAPHIC_CHAMBER = REGISTRATE.multiblock("precision_photolithographic_chamber", WorkableElectricMultiblockMachine::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.CIRCUIT_RECIPE)
            .recipeModifiers(GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK_SUBTICK))
            .appearanceBlock(PRECISION_PHOTOLITHOGRAPHIC_FRAMEWORK_CASING)
            .tooltips(Component.translatable("mbe.multiblock.precision_photolithographic_chamber.tooltip.0"))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("ABA", "ABA", "ABA", "ABA", "ABA", "   ", "   ")
                    .aisle("BBB", "BCB", "B B", "B B", "B B", "ABA", "   ")
                    .aisle("BBB", "BCB", "B B", "B B", "B B", "BCB", "ABA")
                    .aisle("BBB", "BCD", "B D", "B B", "B B", "BCB", "ABA")
                    .aisle("BBB", "BCD", "B D", "B B", "B B", "BCB", "ABA")
                    .aisle("BBB", "BCD", "B D", "B B", "B B", "BCB", "ABA")
                    .aisle("BBB", "BCB", "B B", "B B", "B B", "BCB", "ABA")
                    .aisle("BBB", "BCB", "B B", "B B", "B B", "ABA", "   ")
                    .aisle("ABA", "ABA", "AcA", "ABA", "ABA", "   ", "   ")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, Neutronium).get()))
                    .where('B', blocks(PRECISION_PHOTOLITHOGRAPHIC_FRAMEWORK_CASING.get())
                            .or(autoAbilities(definition.getRecipeTypes())))
                    .where('C', blocks(CASING_POLYTETRAFLUOROETHYLENE_PIPE.get()))
                    .where('D', blocks(CASING_GRATE.get()))
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/precision_photolithographic_framework_casing"), GTCEu.id("block/multiblock/assembly_line"))
            .register();

    public static final MultiblockMachineDefinition SUPERCRITICAL_PHASE_SHIFTER = REGISTRATE.multiblock("supercritical_phase_shifter", SupercriticalPhaseShifter::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeTypes(MBERecipeTypes.SUPERCRITICAL_PHASE_SHIFT, MBERecipeTypes.SUPERCRITICAL_PHASE_SYNTHESIS)
            .recipeModifiers(SupercriticalPhaseShifter::recipeModifier)
            .appearanceBlock(SPS_CASING)
            .tooltips(Component.translatable("mbe.multiblock.supercritical_phase_shifter.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.supercritical_phase_shifter.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.supercritical_phase_shifter.tooltip.2"))
            .tooltips(Component.translatable("mbe.multiblock.supercritical_phase_shifter.tooltip.3"))
            .tooltips(Component.translatable("mbe.multiblock.supercritical_phase_shifter.tooltip.4"))
            .tooltips(Component.translatable("mbe.multiblock.supercritical_phase_shifter.tooltip.5"))
            .tooltips(Component.translatable("mbe.multiblock.supercritical_phase_shifter.tooltip.6"))
            .tooltips(Component.translatable("mbe.multiblock.supercritical_phase_shifter.tooltip.7"))
            .tooltips(Component.translatable("mbe.multiblock.supercritical_phase_shifter.tooltip.8"))
            .tooltips(Component.translatable("mbe.multiblock.supercritical_phase_shifter.tooltip.9"))
            .tooltips(Component.translatable("mbe.multiblock.supercritical_phase_shifter.tooltip.10"))
            .tooltips(Component.translatable("mbe.multiblock.supercritical_phase_shifter.tooltip.11"))
            .tooltips(Component.translatable("mbe.multiblock.supercritical_phase_shifter.tooltip.12"))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_2.tooltip",
                    Component.translatable("gtceu.supercritical_phase_shift"), Component.translatable("gtceu.supercritical_phase_synthesis")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("##AAAAA##", "#AAAAAAA#", "AAABBBAAA", "AABBBBBAA", "AABBBBBAA", "AABBBBBAA", "AAABBBAAA", "#AAAAAAA#", "##AAAAA##")
                    .aisle("#AAAAAAA#", "AA     AA", "A       A", "A       A", "A       A", "A       A", "A       A", "A       A", "#AAAAAAA#")
                    .aisle("AAAAAAAAA", "A       A", "A       A", "B       B", "B       B", "B       B", "A       A", "A       A", "AAABBBAAA")
                    .aisle("AAAAAAAAA", "A       A", "B       B", "B       B", "B       B", "B       B", "B       B", "A       A", "AABBBBBAA")
                    .aisle("AAAAAAAAA", "A       A", "B       B", "B       B", "B       B", "B       B", "B       B", "A       A", "AABBBBBAA")
                    .aisle("AAAAAAAAA", "A       A", "B       B", "B       B", "B       B", "B       B", "B       B", "A       A", "AABBBBBAA")
                    .aisle("AAAAAAAAA", "A       A", "A       A", "B       B", "B       B", "B       B", "A       A", "A       A", "AAABBBAAA")
                    .aisle("#AAAAAAA#", "AA     AA", "A       A", "A       A", "A       A", "A       A", "A       A", "A       A", "#AAAAAAA#")
                    .aisle("##AAAAA##", "#AAAcAAA#", "AAABBBAAA", "AABBBBBAA", "AABBBBBAA", "AABBBBBAA", "AAABBBAAA", "#AAAAAAA#", "##AAAAA##")
                    .where('#', any())
                    .where(' ', air())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(SPS_CASING.get())
                            .or(abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(2))
                            .or(abilities(PartAbility.EXPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.INPUT_ENERGY).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.MAINTENANCE).setExactLimit(1)))
                    .where('B', blocks(FUSION_GLASS.get()))
                    .build())
            .renderer(SPSRender::new)
            .hasTESR(true)
            .register();

    public static final MultiblockMachineDefinition DYSON_SPHERE_DEPLOYMENT_BASE_STATION = REGISTRATE.multiblock("dyson_sphere_deployment_base_station", DysonSphereDeploymentBaseStation::new)
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.DYSON_SPHERE_DEPLOYMENT_BASE_STATION)
            .recipeModifier(DysonSphereDeploymentBaseStation::recipeModifier, true)
            .appearanceBlock(DYSON_SPHERE_BASE_STATION_CASING)
            .tooltips(Component.translatable("mbe.multiblock.dyson_sphere_deployment_base_station.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.dyson_sphere_deployment_base_station.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.dyson_sphere_deployment_base_station.tooltip.2"))
            .tooltips(Component.translatable("mbe.multiblock.dyson_sphere_deployment_base_station.tooltip.3"))
            .tooltips(Component.translatable("mbe.multiblock.dyson_sphere_deployment_base_station.tooltip.4"))
            .tooltips(Component.translatable("mbe.multiblock.dyson_sphere_deployment_base_station.tooltip.5"))
            .tooltips(Component.translatable("mbe.multiblock.dyson_sphere_deployment_base_station.tooltip.6"))
            .tooltips(Component.translatable("mbe.multiblock.dyson_sphere_deployment_base_station.tooltip.7"))
            .tooltips(Component.translatable("mbe.multiblock.dyson_sphere_deployment_base_station.tooltip.8"))
            .tooltips(Component.translatable("mbe.multiblock.dyson_sphere_deployment_base_station.tooltip.9"))
            .tooltips(Component.translatable("mbe.multiblock.dyson_sphere_deployment_base_station.tooltip.10"))
            .tooltips(Component.translatable("mbe.multiblock.dyson_sphere_deployment_base_station.tooltip.11"))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle("        AAAAA                       ", "         B B                        ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ")
                    .aisle("        ACCCA                       ", "         B B                        ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "        CCCCC                       ", "        AAAAA                       ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ")
                    .aisle("        ACCCA            AAAAA      ", "         CCC                        ", "         B B                        ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "        CCCCC                       ", "      CC     CC                     ", "      AA     AA                     ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ")
                    .aisle("       AACCCAA         AACCCCCAA    ", "         CCC                        ", "         B B                        ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "        CCCCC                       ", "      CC     CC                     ", "    CC         CC                   ", "    AA         AA                   ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ")
                    .aisle("      AACCCCCAA       ACCCCCCCCCA   ", "         CCC             AAAAA      ", "         CCC                        ", "         B B                        ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "        AAAAA                       ", "      CC D D CC                     ", "    CC         CC                   ", "   C             C                  ", "   A             A                  ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ")
                    .aisle("     ACCCCCCCCCA     ACCCCCCCCCCCA  ", "        ACCCA          AACCCCCAA    ", "         CCC             CCCCC      ", "         CCC              BBB       ", "         B B                        ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "      AACCCCCAA                     ", "     C   D D   C                    ", "    C           C                   ", "   C             C                  ", "   A             A                  ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ")
                    .aisle("    ACCCCCCCCCCCAAAAACCCCCCCCCCCCCA ", "      AACCCCCAA       AACCCCCCCAA   ", "        CCCCC           CCCCCCC     ", "         CCC             BCCCB      ", "         CCC              CCC       ", "         B B              CCC       ", "         B B              CCC       ", "                          CCC       ", "                          CCC       ", "                          CCC       ", "        CCCCC             CCC       ", "     ACCCCCCCCCA          CCC       ", "    C  EEDCDEE  C         CCC       ", "   C     D D     C        CCC       ", "  C               C       CCC       ", "  A               A       CCC       ", "                          CCC       ", "                          CCC       ", "                          CCC       ", "                          CCC       ", "                          CCC       ", "                          CCC       ", "                          CCC       ", "                          CCC       ", "                          CCC       ", "                          CCC       ", "                          CCC       ")
                    .aisle("   AACCCCCCCCCCCCCCCCCCCCCCCCCCCCCA ", "      ACCCCCCCA       ACCCCCCCCCA   ", "       CCCCCCC         CCCFGFCCC    ", "        CCCCC            BFGFB      ", "        CCCCC             FGF       ", "         CCC              FGF       ", "         CCC              FGF       ", "         B B              FGF       ", "         B B             BFGFB      ", "         B B              FGF       ", "       CEEEEEC            FGF       ", "    AACCCCCCCCCA          FGF       ", "    C EECDCDCEE C        BFGFB      ", "   C    CDCDC    C        FGF       ", "  C      D D      C       FGF       ", "  A               A       FGF       ", "                         BFGFB      ", "                          FGF       ", "                          FGF       ", "                          FGF       ", "                         BFGFB      ", "                          FGF       ", "                          FGF       ", "                          FGF       ", "                         BFGFB      ", "                          FGF       ", "                          FGF       ")
                    .aisle("AAAACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCA", "     ACCCCCCCCCAAAAAAACCCCAAACCCCA  ", "      CCCCCCCCC       CCCCB BCCCC   ", "       CCCCCCC         BBB   BBB    ", "       CCCCCCC                      ", "        CCCCC                       ", "        CCCCC             B B       ", "         CCC                        ", "         CCC            B     B     ", "         CCC                        ", "      CEECCCEEC           B B       ", "    ACCCCCCCCCCCA                   ", "   C  ECCDCDCCE  C      B     B     ", "  C    CCDCDCC    C                 ", " C      CDCDC      C      B B       ", " A       D D       A                ", "                        B     B     ", "                                    ", "                          B B       ", "                                    ", "                        B     B     ", "                                    ", "                          B B       ", "                                    ", "                        B     B     ", "                                    ", "                          B B       ")
                    .aisle("ACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCA", "BBCCCCCCCCCCCCCCCCCCCCCCCACCCACCCA  ", "  BBCCCCCHHHCCCCCCCCCCCCFB   BFCC   ", "    BCCCCHHHCCCCBBBBBBBCF     FCB   ", "     BCCCHHHCCCB       CF     FC    ", "      BCCHHHCCB        CF     FC    ", "      BCCHHHCCB        CFB   BFC    ", "       BCHHHCB         CF     FC    ", "       BCHHHCB         CF     FC    ", "       BCHHHCB         CF     FC    ", "      CECHHHCEC        CFB   BFC    ", "    ACCCCHHHCCCCA      CF     FC    ", "   CDDDDDDDDDDDDDC     CF     FC    ", "  C   DDDDDDDDD   C    CF     FC    ", " C     DDDDDDD     C   CFB   BFC    ", " A      DDDDD      A   CF     FC    ", "         BDB           CF     FC    ", "         BDB           CF     FC    ", "         B B           CFB   BFC    ", "         B B           CF     FC    ", "                       CF     FC    ", "                       CF     FC    ", "                       CFB   BFC    ", "                       CF     FC    ", "                       CF     FC    ", "                       CF     FC    ", "                       CFB   BFC    ")
                    .aisle("ACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCA", "  CCCCCCCCCCCCCCCCCCCCCCCACCCACCCA  ", "    CCCCCHCHCCCCCCCCCCCCG     GCC   ", "     CCCCHCHCCCC      BCG     GCB   ", "      CCCHCHCCC        CG     GC    ", "       CCHCHCC         CG     GC    ", "       CCHCHCC         CG     GC    ", "        CHCHC          CG     GC    ", "        CHCHC          CG     GC    ", "        CHCHC          CG     GC    ", "      CECHCHCEC        CG     GC    ", "    ACCCCHCHCCCCA      CG     GC    ", "   C  CCCDDDCCC  C     CG     GC    ", "  C    CCDDDCC    C    CG     GC    ", " C      CDDDC      C   CG     GC    ", " A       DDD       A   CG     GC    ", "         DDD           CG     GC    ", "         DDD           CG     GC    ", "          D            CG     GC    ", "          D            CG     GC    ", "          D            CG     GC    ", "          D            CG     GC    ", "          D            CG     GC    ", "          D            CG     GC    ", "          B            CG     GC    ", "                       CG     GC    ", "                       CG     GC    ")
                    .aisle("ACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCA", "BBCCCCCCCCCCCCCCCCCCCCCCCACCCACCCA  ", "  BBCCCCCHHHCCCCCCCCCCCCFB   BFCC   ", "    BCCCCHHHCCCCBBBBBBBCF     FCB   ", "     BCCCHHHCCCB       CF     FC    ", "      BCCHHHCCB        CF     FC    ", "      BCCHHHCCB        CFB   BFC    ", "       BCHHHCB         CF     FC    ", "       BCHHHCB         CF     FC    ", "       BCHHHCB         CF     FC    ", "      CECHHHCEC        CFB   BFC    ", "    ACCCCHHHCCCCA      CF     FC    ", "   CDDDDDDDDDDDDDC     CF     FC    ", "  C   DDDDDDDDD   C    CF     FC    ", " C     DDDDDDD     C   CFB   BFC    ", " A      DDDDD      A   CF     FC    ", "         BDB           CF     FC    ", "         BDB           CF     FC    ", "         B B           CFB   BFC    ", "         B B           CF     FC    ", "                       CF     FC    ", "                       CF     FC    ", "                       CFB   BFC    ", "                       CF     FC    ", "                       CF     FC    ", "                       CF     FC    ", "                       CFB   BFC    ")
                    .aisle("AAAACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCA", "     ACCCCCCCCCAAAAAAACCCCAAACCCCA  ", "      CCCCCCCCC       CCCC   CCCC   ", "       CCCCCCC         BBB   BBB    ", "       CCCCCCC                      ", "        CCCCC                       ", "        CCCCC                       ", "         CCC                        ", "         CCC                        ", "         CCC                        ", "      CEECCCEEC                     ", "    ACCCCCCCCCCCA                   ", "   C  ECCDCDCCE  C                  ", "  C    CCDCDCC    C                 ", " C      CDCDC      C                ", " A       D D       A                ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ")
                    .aisle("   AACCCCCCCCCCCCCCCCCCCCCCCCCCCCCA ", "      ACCCCCCCA       ACCCCCCCCCA   ", "       CCCCCCC         CCCCCCCCC    ", "        CCCCC            BBBBB      ", "        CCCCC                       ", "         CCC                        ", "         CCC                        ", "         B B                        ", "         B B                        ", "         B B                        ", "       CEEEEEC                      ", "     ACCCCCCCCCA                    ", "    C EECDCDCEE C                   ", "   C    CDCDC    C                  ", "  C      D D      C                 ", "  A               A                 ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ")
                    .aisle("    ACCCCCCCCCCCAAAAACCCCCCCCCCCCCA ", "      AACCCCCAA       ACCCCCCCCCA   ", "        CCCCC            CCcCC      ", "         CCC                        ", "         CCC                        ", "         B B                        ", "         B B                        ", "                                    ", "                                    ", "                                    ", "        CCCCC                       ", "     ACCCCCCCCCA                    ", "    C  EEDCDEE  C                   ", "   C     D D     C                  ", "  C               C                 ", "  A               A                 ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ")
                    .aisle("     ACCCCCCCCCA     ACCCCCCCCCCCA  ", "        ACCCA          AACCCCCAA    ", "         CCC                        ", "         CCC                        ", "         B B                        ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "      AACCCCCAA                     ", "     C   D D   C                    ", "    C           C                   ", "   C             C                  ", "   A             A                  ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ")
                    .aisle("      AACCCCCAA       ACCCCCCCCCA   ", "         CCC             AAAAA      ", "         CCC                        ", "         B B                        ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "        AAAAA                       ", "      CC D D CC                     ", "    CC         CC                   ", "   C             C                  ", "   A             A                  ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ")
                    .aisle("       AACCCAA         AACCCCCAA    ", "         CCC                        ", "         B B                        ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "        CCCCC                       ", "      CC     CC                     ", "    CC         CC                   ", "    AA         AA                   ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ")
                    .aisle("        ACCCA            AAAAA      ", "         CCC                        ", "         B B                        ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "        CCCCC                       ", "      CC     CC                     ", "      AA     AA                     ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ")
                    .aisle("        ACCCA                       ", "         B B                        ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "        CCCCC                       ", "        AAAAA                       ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ")
                    .aisle("        AAAAA                       ", "         B B                        ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ", "                                    ")
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(DYSON_SPHERE_SIDE_CASING.get()))
                    .where('B', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, CosmicNeutronium).get()))
                    .where('C', blocks(DYSON_SPHERE_BASE_STATION_CASING.get())
                            .or(autoAbilities(definition.getRecipeTypes(), false, false, true, false, false, false))
                            .or(abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.COMPUTATION_DATA_RECEPTION).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.OUTPUT_LASER).setMaxGlobalLimited(1)))
                    .where('D', blocks(RAY_RECEIVER_BLOCK.get()))
                    .where('E', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, Neutronium).get()))
                    .where('F', blocks(POWER_ACCELERATION_RAIL.get()))
                    .where('G', blocks(DYSON_SPHERE_STRUCTURAL_SUPPORT_FRAME.get()))
                    .where('H', blocks(ULTRA_ENERGY_COIL.get()))
                    .build())
            .workableCasingRenderer(MultiBlock_Engineer.id("block/dyson_sphere_base_station_casing"), GTCEu.id("block/multiblock/assembly_line"))
            .register();

    public static final MultiblockMachineDefinition MULTIVERSE_DISORDER_POINT = REGISTRATE.multiblock("multiverse_disorder_point", (holder) -> new MultiverseDisorderPoint(holder, "MDPTier", "SSTier", "DPHeat"))
            .rotationState(RotationState.ALL)
            .allowExtendedFacing(false)
            .recipeType(MBERecipeTypes.MULTIVERSE_DISORDER_POINT)
            .recipeModifiers(GTRecipeModifiers.PARALLEL_HATCH, MultiverseDisorderPoint::recipeModifier)
            .appearanceBlock(CONVECTIVE_SPACETIME_TRACTION_CASING)
            .tooltips(Component.translatable("mbe.multiblock.mdp.tooltip.0"))
            .tooltips(Component.translatable("mbe.multiblock.mdp.tooltip.1"))
            .tooltips(Component.translatable("mbe.multiblock.mdp.tooltip.2"))
            .tooltips(Component.translatable("mbe.multiblock.mdp.tooltip.3"))
            .tooltips(Component.translatable("mbe.multiblock.mdp.tooltip.4"))
            .tooltips(Component.translatable("mbe.multiblock.mdp.tooltip.5"))
            .tooltips(Component.translatable("mbe.multiblock.mdp.tooltip.6"))
            .tooltips(Component.translatable("mbe.multiblock.mdp.tooltip.7"))
            .tooltips(Component.translatable("mbe.multiblock.mdp.tooltip.8"))
            .tooltips(Component.translatable("mbe.multiblock.mdp.tooltip.9"))
            .tooltips(Component.translatable("mbe.multiblock.mdp.tooltip.10"))
            .tooltips(Component.translatable("mbe.multiblock.mdp.tooltip.11"))
            .tooltips(Component.translatable("mbe.multiblock.mdp.tooltip.12"))
            .tooltips(Component.translatable("mbe.multiblock.mdp.tooltip.13"))
            .tooltips(Component.translatable("mbe.multiblock.mdp.tooltip.14"))
            .tooltips(Component.translatable("mbe.multiblock.mdp.tooltip.15"))
            .tooltips(Component.translatable("mbe.multiblock.mdp.tooltip.16"))
            .tooltips(Component.translatable("mbe.multiblock.mdp.tooltip.17"))
            .tooltips(Component.translatable("gtceu.multiblock.parallelizable.tooltip"))
            .tooltipBuilder((stack, components) -> components.add(Component.translatable("mbe.multiblock.laser_available.0").append(Component.translatable("mbe.multiblock.laser_available.1").withStyle(style -> style.withColor(TooltipHelper.RAINBOW_SLOW.getCurrent())))))
            .tooltips(Component.translatable("gtceu.machine.available_recipe_map_1.tooltip",
                    Component.translatable("gtceu.multiverse_disorder_point")))
            .pattern(definition -> FactoryBlockPattern.start()
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aisle("                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                   B B                   ", "           AAAAA         AAAAA           ", "          ADD               DDA          ", "           AAAAA         AAAAA           ", "                                         ", "                                         ", "                                         ", "        BBBBB      ACA      BBBBB        ", "        CCDEE      CFC      EEDCC        ", "        BBBBB      ACA      BBBBB        ", "                                         ", "                                         ", "                                         ", "           AAAAA         AAAAA           ", "          ADD               DDA          ", "           AAAAA         AAAAA           ", "                   B B                   ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "          AAA               AAA          ", "        AAD                   DAA        ", "          AAA               AAA          ", "                                         ", "                                         ", "                                         ", "       BBBB         C         BBBB       ", "       CDDE        CFC        EDDC       ", "       BBBB         C         BBBB       ", "                                         ", "                                         ", "                                         ", "          AAA               AAA          ", "        AAD                   DAA        ", "          AAA               AAA          ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "        AAA                   AAA        ", "       ADD                     DDA       ", "        AAA                   AAA        ", "                                         ", "                                         ", "                                         ", "      BBBB          C          BBBB      ", "      CDEE         CFC         EEDC      ", "      BBBB          C          BBBB      ", "                                         ", "                                         ", "                                         ", "        AAA                   AAA        ", "       ADD                     DDA       ", "        AAA                   AAA        ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "       AAA                     AAA       ", "      AD                         DA      ", "       AAA                     AAA       ", "                                         ", "                                         ", "                                         ", "     BBB                         BBB     ", "     CDE            F            EDC     ", "     BBB                         BBB     ", "                                         ", "                                         ", "                                         ", "       AAA                     AAA       ", "      AD                         DA      ", "       AAA                     AAA       ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "       AA                       AA       ", "      AD                         DA      ", "       AA                       AA       ", "                                         ", "                                         ", "                                         ", "     BBB                         BBB     ", "     CDE            F            EDC     ", "     BBB                         BBB     ", "                                         ", "                                         ", "                                         ", "       AA                       AA       ", "      AD                         DA      ", "       AA                       AA       ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "      AA                         AA      ", "     AD                           DA     ", "      AA                         AA      ", "                                         ", "                                         ", "                                         ", "    BBB                           BBB    ", "    CDE                           EDC    ", "    BBB                           BBB    ", "                                         ", "                                         ", "                                         ", "      AA                         AA      ", "     AD                           DA     ", "      AA                         AA      ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "     AA                           AA     ", "    AD                             DA    ", "     AA                           AA     ", "                                         ", "                                         ", "                                         ", "   BBB                             BBB   ", "   CDE                             EDC   ", "   BBB                             BBB   ", "                                         ", "                                         ", "                                         ", "     AA                           AA     ", "    AD                             DA    ", "     AA                           AA     ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "     AA                           AA     ", "    AD                             DA    ", "     AA                           AA     ", "                                         ", "                                         ", "                                         ", "   BBB                             BBB   ", "   CDE                             EDC   ", "   BBB                             BBB   ", "                                         ", "                                         ", "                                         ", "     AA                           AA     ", "    AD                             DA    ", "     AA                           AA     ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "    AA                             AA    ", "   AD                               DA   ", "    AA                             AA    ", "                                         ", "                                         ", "                                         ", "  BBB                               BBB  ", "  CDE                               EDC  ", "  BBB                               BBB  ", "                                         ", "                                         ", "                                         ", "    AA                             AA    ", "   AD                               DA   ", "    AA                             AA    ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "    AA                             AA    ", "   AD                               DA   ", "    AA                             AA    ", "                                         ", "                                         ", "                                         ", "  BBB                               BBB  ", "  CDE                               EDC  ", "  BBB                               BBB  ", "                                         ", "                                         ", "                                         ", "    AA                             AA    ", "   AD                               DA   ", "    AA                             AA    ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "    AA                             AA    ", "   AD                               DA   ", "    AA                             AA    ", "                                         ", "                                         ", "                                         ", "  BBB                               BBB  ", "  CDE                               EDC  ", "  BBB                               BBB  ", "                                         ", "                                         ", "                                         ", "    AA                             AA    ", "   AD                               DA   ", "    AA                             AA    ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ")
                    .aisle("                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "   AA                               AA   ", "  AD                                 DA  ", "   AA                               AA   ", "                                         ", "                                         ", "                                         ", " BBB                                 BBB ", " CDE                                 EDC ", " BBB                                 BBB ", "                                         ", "                                         ", "                                         ", "   AA                               AA   ", "  AD                                 DA  ", "   AA                               AA   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ")
                    .aisle("                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "   AA                               AA   ", "  AD                                 DA  ", "   AA                               AA   ", "                                         ", "                                         ", "                                         ", " BBB                                 BBB ", " CDE                                 EDC ", " BBB                                 BBB ", "                                         ", "                                         ", "                                         ", "   AA                               AA   ", "  AD                                 DA  ", "   AA                               AA   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ")
                    .aisle("                   AAA                   ", "                  ABABA                  ", "                  ABDBA                  ", "                  AAAAA                  ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "   AA                               AA   ", "  AD                                 DA  ", "   AA                               AA   ", "                                         ", "                                         ", "   A                                 A   ", " BBA                                 ABB ", " CDA                                 ADC ", " BBA                                 ABB ", "   A                                 A   ", "                                         ", "                                         ", "   AA                               AA   ", "  AD                                 DA  ", "   AA                               AA   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                  AAAAA                  ", "                  ABDBA                  ", "                  ABABA                  ", "                   AAA                   ")
                    .aisle("                  AAAAA                  ", "                BBBBBBBBB                ", "             BBBBBBBDBBBBBBB             ", "           BBBBBBBAAAAABBBBBBB           ", "          BBBBBB   ACA   BBBBBB          ", "        BBBBB      ACA      BBBBB        ", "       BBBB         C         BBBB       ", "      BBBB          C          BBBB      ", "     BBB                         BBB     ", "     BBB                         BBB     ", "    BBB                           BBB    ", "   BBB                             BBB   ", "   BBB                             BBB   ", "  BBB                               BBB  ", "  BBB                               BBB  ", "  BBB                               BBB  ", " BBBA                               ABBB ", " BBBA                               ABBB ", " AAAA                               AAAA ", "ABBAAA                             AAABBA", "ACDACCCC                         CCCCADCA", "ABBAAA                             AAABBA", " AAAA                               AAAA ", " BBBA                               ABBB ", " BBBA                               ABBB ", "  BBB                               BBB  ", "  BBB                               BBB  ", "  BBB                               BBB  ", "   BBB                             BBB   ", "   BBB                             BBB   ", "    BBB                           BBB    ", "     BBB                         BBB     ", "     BBB                         BBB     ", "      BBBB          C          BBBB      ", "       BBBB         C         BBBB       ", "        BBBBB      ACA      BBBBB        ", "          BBBBBB   ACA   BBBBBB          ", "           BBBBBBBAAAAABBBBBBB           ", "             BBBBBBBDBBBBBBB             ", "                BBBBBBBBB                ", "                  AHHHA                  ")
                    .aisle("                  AAIAA                  ", "                  ABBBA                  ", "                DDDDDDDDD                ", "             DDD  AAAAA  DDD             ", "           DD      CFC      DD           ", "          D        CFC        D          ", "        DD         CFC         DD        ", "       D           CFC           D       ", "      D             F             D      ", "      D             F             D      ", "     D                             D     ", "    D                               D    ", "    D                               D    ", "   D                                 D   ", "   D                                 D   ", "   D                                 D   ", "  D                                   D  ", "  D                                   D  ", "  DA                                 AD  ", " BBACCCC                         CCCCABB ", " CDAFFFFFF                     FFFFFFADC ", " BBACCCC                         CCCCABB ", "  DA                                 AD  ", "  D                                   D  ", "  D                                   D  ", "   D                                 D   ", "   D                                 D   ", "   D                                 D   ", "    D                               D    ", "    D                               D    ", "     D                             D     ", "      D             F             D      ", "      D             F             D      ", "       D           CFC           D       ", "        DD         CFC         DD        ", "          D        CFC        D          ", "           DD      CFC      DD           ", "             DDD  AAAAA  DDD             ", "                DDDDDDDDD                ", "                  ABBBA                  ", "                  AHGHA                  ")
                    .aisle("                  AAAAA                  ", "                BBBBBBBBB                ", "             BBBBBBBDBBBBBBB             ", "           BBBBBBBAAAAABBBBBBB           ", "          BBBBBB   ACA   BBBBBB          ", "        BBBBB      ACA      BBBBB        ", "       BBBB         C         BBBB       ", "      BBBB          C          BBBB      ", "     BBB                         BBB     ", "     BBB                         BBB     ", "    BBB                           BBB    ", "   BBB                             BBB   ", "   BBB                             BBB   ", "  BBB                               BBB  ", "  BBB                               BBB  ", "  BBB                               BBB  ", " BBBA                               ABBB ", " BBBA                               ABBB ", " AAAA                               AAAA ", "ABBAAA                             AAABBA", "ACDACCCC                         CCCCADCA", "ABBAAA                             AAABBA", " AAAA                               AAAA ", " BBBA                               ABBB ", " BBBA                               ABBB ", "  BBB                               BBB  ", "  BBB                               BBB  ", "  BBB                               BBB  ", "   BBB                             BBB   ", "   BBB                             BBB   ", "    BBB                           BBB    ", "     BBB                         BBB     ", "     BBB                         BBB     ", "      BBBB          C          BBBB      ", "       BBBB         C         BBBB       ", "        BBBBB      ACA      BBBBB        ", "          BBBBBB   ACA   BBBBBB          ", "           BBBBBBBAAAAABBBBBBB           ", "             BBBBBBBDBBBBBBB             ", "                BBBBBBBBB                ", "                  AHHHA                  ")
                    .aisle("                   AAA                   ", "                  ABABA                  ", "                  ABDBA                  ", "                  AAAAA                  ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "   AA                               AA   ", "  AD                                 DA  ", "   AA                               AA   ", "                                         ", "                                         ", "   A                                 A   ", " BBA                                 ABB ", " CDA                                 ADC ", " BBA                                 ABB ", "   A                                 A   ", "                                         ", "                                         ", "   AA                               AA   ", "  AD                                 DA  ", "   AA                               AA   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                  AAAAA                  ", "                  ABDBA                  ", "                  ABABA                  ", "                   AAA                   ")
                    .aisle("                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "   AA                               AA   ", "  AD                                 DA  ", "   AA                               AA   ", "                                         ", "                                         ", "                                         ", " BBB                                 BBB ", " CDE                                 EDC ", " BBB                                 BBB ", "                                         ", "                                         ", "                                         ", "   AA                               AA   ", "  AD                                 DA  ", "   AA                               AA   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ")
                    .aisle("                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "   AA                               AA   ", "  AD                                 DA  ", "   AA                               AA   ", "                                         ", "                                         ", "                                         ", " BBB                                 BBB ", " CDE                                 EDC ", " BBB                                 BBB ", "                                         ", "                                         ", "                                         ", "   AA                               AA   ", "  AD                                 DA  ", "   AA                               AA   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ")
                    .aisle("                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "    AA                             AA    ", "   AD                               DA   ", "    AA                             AA    ", "                                         ", "                                         ", "                                         ", "  BBB                               BBB  ", "  CDE                               EDC  ", "  BBB                               BBB  ", "                                         ", "                                         ", "                                         ", "    AA                             AA    ", "   AD                               DA   ", "    AA                             AA    ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "    AA                             AA    ", "   AD                               DA   ", "    AA                             AA    ", "                                         ", "                                         ", "                                         ", "  BBB                               BBB  ", "  CDE                               EDC  ", "  BBB                               BBB  ", "                                         ", "                                         ", "                                         ", "    AA                             AA    ", "   AD                               DA   ", "    AA                             AA    ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "    AA                             AA    ", "   AD                               DA   ", "    AA                             AA    ", "                                         ", "                                         ", "                                         ", "  BBB                               BBB  ", "  CDE                               EDC  ", "  BBB                               BBB  ", "                                         ", "                                         ", "                                         ", "    AA                             AA    ", "   AD                               DA   ", "    AA                             AA    ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "     AA                           AA     ", "    AD                             DA    ", "     AA                           AA     ", "                                         ", "                                         ", "                                         ", "   BBB                             BBB   ", "   CDE                             EDC   ", "   BBB                             BBB   ", "                                         ", "                                         ", "                                         ", "     AA                           AA     ", "    AD                             DA    ", "     AA                           AA     ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "     AA                           AA     ", "    AD                             DA    ", "     AA                           AA     ", "                                         ", "                                         ", "                                         ", "   BBB                             BBB   ", "   CDE                             EDC   ", "   BBB                             BBB   ", "                                         ", "                                         ", "                                         ", "     AA                           AA     ", "    AD                             DA    ", "     AA                           AA     ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "      AA                         AA      ", "     AD                           DA     ", "      AA                         AA      ", "                                         ", "                                         ", "                                         ", "    BBB                           BBB    ", "    CDE                           EDC    ", "    BBB                           BBB    ", "                                         ", "                                         ", "                                         ", "      AA                         AA      ", "     AD                           DA     ", "      AA                         AA      ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "       AA                       AA       ", "      AD                         DA      ", "       AA                       AA       ", "                                         ", "                                         ", "                                         ", "     BBB                         BBB     ", "     CDE            F            EDC     ", "     BBB                         BBB     ", "                                         ", "                                         ", "                                         ", "       AA                       AA       ", "      AD                         DA      ", "       AA                       AA       ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "       AAA                     AAA       ", "      AD                         DA      ", "       AAA                     AAA       ", "                                         ", "                                         ", "                                         ", "     BBB                         BBB     ", "     CDE            F            EDC     ", "     BBB                         BBB     ", "                                         ", "                                         ", "                                         ", "       AAA                     AAA       ", "      AD                         DA      ", "       AAA                     AAA       ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "        AAA                   AAA        ", "       ADD                     DDA       ", "        AAA                   AAA        ", "                                         ", "                                         ", "                                         ", "      BBBB          C          BBBB      ", "      CDEE         CFC         EEDC      ", "      BBBB          C          BBBB      ", "                                         ", "                                         ", "                                         ", "        AAA                   AAA        ", "       ADD                     DDA       ", "        AAA                   AAA        ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "          AAA               AAA          ", "        AAD                   DAA        ", "          AAA               AAA          ", "                                         ", "                                         ", "                                         ", "       BBBB         C         BBBB       ", "       CDDE        CFC        EDDC       ", "       BBBB         C         BBBB       ", "                                         ", "                                         ", "                                         ", "          AAA               AAA          ", "        AAD                   DAA        ", "          AAA               AAA          ", "                                         ", "                                         ", "                   B B                   ", "                   BDB                   ", "                   BDB                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ")
                    .aisle("                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                   B B                   ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                   B B                   ", "           AAAAA         AAAAA           ", "          ADD               DDA          ", "           AAAAA         AAAAA           ", "                                         ", "                                         ", "                                         ", "        BBBBB      ACA      BBBBB        ", "        CCDEE      CFC      EEDCC        ", "        BBBBB      ACA      BBBBB        ", "                                         ", "                                         ", "                                         ", "           AAAAA         AAAAA           ", "          ADD               DDA          ", "           AAAAA         AAAAA           ", "                   B B                   ", "                   B B                   ", "                   BDB                   ", "                   B B                   ", "                   B B                   ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ", "                                         ")
                    .aisle
                    .aisle
                    .aisle
                    .aisle
                    .aislec
                    .where(' ', any())
                    .where('c', controller(blocks(definition.getBlock())))
                    .where('A', blocks(CONVECTIVE_SPACETIME_TRACTION_CASING.get()))
                    .where('B', blocks(COSMIC_BOUNDARY_STRUCTURE_CASING.get()))
                    .where('C', blocks(CLOSED_TIME_LIKE_CURVE_CASING.get()))
                    .where('D', blocks(PARALLEL_UNIVERSE_BRIDGE_CASING.get()))
                    .where('E', MBEPredicates.CasingTierBlock(SSMAP, "SSTier"))
                    .where('F', blocks(MATERIAL_BLOCKS.get(TagPrefix.frameGt, PrimarySubstance).get()))
                    .where('G', blocks(ADVANCED_ME_PATTERN_BUFFER.get())
                            .or(blocks(ADVANCED_ME_PATTERN_BUFFER_PROXY.get()))
                            .or(blocks(ME_PATTERN_BUFFER.get()))
                            .or(blocks(ME_PATTERN_BUFFER_PROXY.get())))
                    .where('H', blocks(CONVECTIVE_SPACETIME_TRACTION_CASING.get())
                            .or(abilities(PartAbility.IMPORT_FLUIDS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.INPUT_LASER).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1)))
                    .where('I', blocks(CONVECTIVE_SPACETIME_TRACTION_CASING.get())
                            .or(abilities(PartAbility.EXPORT_ITEMS).setMaxGlobalLimited(1))
                            .or(abilities(PartAbility.EXPORT_FLUIDS).setMaxGlobalLimited(1)))
                    .build())
            .renderer(MDPRender::new)
            .hasTESR(true)
            .register();

    private static TraceabilityPredicate dataHatchPredicate(TraceabilityPredicate def) {
        if (ConfigHolder.INSTANCE.machines.enableResearch) {
            return abilities(PartAbility.DATA_ACCESS, PartAbility.OPTICAL_DATA_RECEPTION).setExactLimit(1).or(def);
        }return def;
    }


    public static MachineDefinition[] MBEUniqueTieredMachines(String name,
                                                             BiFunction<IMachineBlockEntity, Integer, MetaMachine> factory,
                                                             BiFunction<Integer, MachineBuilder<MachineDefinition>, MachineDefinition> builder,
                                                             int... tiers) {
        MachineDefinition[] definitions = new MachineDefinition[GTValues.TIER_COUNT];
        for (int tier : tiers) {
            var register = REGISTRATE
                    .machine(name, holder -> factory.apply(holder, tier))
                    .tier(tier);
            definitions[tier] = builder.apply(tier, register);
        }
        return definitions;
    }

    public static MachineDefinition[] MBETieredMachines(String name,
                                                        BiFunction<IMachineBlockEntity, Integer, MetaMachine> factory,
                                                        BiFunction<Integer, MachineBuilder<MachineDefinition>, MachineDefinition> builder,
                                                        int... tiers) {
        MachineDefinition[] definitions = new MachineDefinition[GTValues.TIER_COUNT];
        for (int tier : tiers) {
            var register = REGISTRATE
                    .machine(GTValues.VN[tier].toLowerCase(Locale.ROOT) + "_" + name, holder -> factory.apply(holder, tier))
                    .tier(tier);
            definitions[tier] = builder.apply(tier, register);
        }
        return definitions;
    }

    public static MultiblockMachineDefinition[] MBETieredMultis(String name,
                                                                     BiFunction<IMachineBlockEntity, Integer, MultiblockControllerMachine> factory,
                                                                     BiFunction<Integer, MultiblockMachineBuilder, MultiblockMachineDefinition> builder,
                                                                     int... tiers) {
        MultiblockMachineDefinition[] definitions = new MultiblockMachineDefinition[GTValues.TIER_COUNT];
        for (int tier : tiers) {
            var register = REGISTRATE
                    .multiblock(GTValues.VN[tier].toLowerCase(Locale.ROOT) + "_" + name, holder -> factory.apply(holder, tier))
                    .tier(tier);
            definitions[tier] = builder.apply(tier, register);
        }
        return definitions;
    }

    public static MachineDefinition[] MBESimpleMachines(String name,
                                                             GTRecipeType recipeType,
                                                             Int2IntFunction tankScalingFunction,
                                                             int... tiers) {
        return MBETieredMachines(name,
                (holder, tier) -> new SimpleTieredMachine(holder, tier, tankScalingFunction), (tier, builder) -> {
                    builder.recipeModifier(GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.NON_PERFECT_OVERCLOCK));
                    return builder
                            .langValue("%s %s %s".formatted(VLVH[tier], toEnglishName(name), VLVT[tier]))
                            .editableUI(SimpleTieredMachine.EDITABLE_UI_CREATOR.apply(GTCEu.id(name), recipeType))
                            .rotationState(RotationState.NON_Y_AXIS)
                            .recipeType(recipeType)
                            .workableTieredHullRenderer(GTCEu.id("block/machines/" + name))
                            .tooltips(workableTiered(tier, GTValues.V[tier], GTValues.V[tier] * 64, recipeType,
                                    tankScalingFunction.apply(tier), true))
                            .register();
                },
                tiers);
    }

    public static void init() {}
}
